// This code is auto-generated by Qul's qmltocpp tool from the file 'hmimain.qml'
// WARNING! All changes made in this file will be lost!
#include "hmimain.h"
#include <qul/private/graphicsdevice.h>

extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Ftimebar_5Fred_10581680189072318016_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Ftimebar_5Fgreen_3424730075918112142_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Flight_5Fsel2_5227814172742466945_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Flight_5Fsel1_12672939284137474243_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Flight_5Fsel0_17660927272431493077_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fdark_5Fsel2_5414158481472900161_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fdark_5Fsel1_8972954664291827559_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fdark_5Fsel0_3618032118870097789_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Fdark_5Fmode_10741302608000416473_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Flight_5Fmode_2490986634729007414_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Freverse_17416783858259955841_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fneutral_11758454277432732924_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fdrive_13663725601868292502_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Findicatorright_16367534964096713469_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Findicatorleft_11280704117166167349_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fbreakfailed_9978985468916230188_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fgunlock_2496129977020822111_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fbatterywarning_15221464043060138405_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fbatteryfailure_8857017888184466976_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Ffault_461058326346938906_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fhvil_8301420484188515714_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fseatbelt_3539755803749815478_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fhandbreak_11812009499601886511_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fcoolenttemp_267475776831725821_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fmotormalfun_6794933055433336268_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fmotorfault_925797647956377049_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fhazard_16444777003624801327_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Fhighbeam_1719669687734742552_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Flowbeam_4238623879086857656_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_icon_5Ffoglight_528535705063815764_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Fdark_5Fring_5Fred_11597768771768360761_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Fdark_5Fring_5Fgreen_1894783914989045776_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Flight_5Fring_5Fred_16037564956433745116_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Flight_5Fring_5Fgreen_5497126269234903875_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Flight_5Fcharge_5Fblue_16831047445036315738_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Fdark_5Fcharge_5Fblue_8874542188519920752_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Fdark_5Fgreen_9690728259582573138_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Flight_5Fgreen_13604947674073245280_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Flight_5Ffault_5Fyellow_6874303195522552643_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Fdark_5Ffault_5Fyellow_7871725417570526092_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Fsplash_3284188603857149310_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Flight_5Fspeed_13090697642961798291_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Fdark_5Fspeed_8900206339527240340_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Flight_5Fmain_2063180190131945813_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_bg_5Fdark_5Fmain_3603716216601726774_handle;
extern const Qul::Private::FontEngine * const qul_font_default_140_700;
extern const Qul::Private::FontEngine * const qul_font_default_25_700;
extern const Qul::Private::FontEngine * const qul_font_default_70_700;
extern const Qul::Private::FontEngine * const qul_font_default_70_700;
extern const Qul::Private::FontEngine * const qul_font_default_35_700;
extern const Qul::Private::FontEngine * const qul_font_default_20_400;
extern const Qul::Private::FontEngine * const qul_font_default_35_700;
extern const Qul::Private::FontEngine * const qul_font_default_25_400;
extern const Qul::Private::FontEngine * const qul_font_default_25_400;
extern const Qul::Private::FontEngine * const qul_font_default_25_400;
extern const Qul::Private::FontEngine * const qul_font_default_25_400;
extern const Qul::Private::FontEngine * const qul_font_default_40_700;
extern const Qul::Private::FontEngine * const qul_font_default_40_700;
extern const Qul::Private::FontEngine * const qul_font_default_30_700;
extern const Qul::Private::FontEngine * const qul_font_default_30_700;
extern const Qul::Private::FontEngine * const qul_font_default_25_700;
extern const Qul::Private::FontEngine * const qul_font_default_25_700;
extern const Qul::Private::FontEngine * const qul_font_default_25_700;
extern const Qul::Private::FontEngine * const qul_font_default_25_700;
extern const Qul::Private::FontEngine * const qul_font_default_25_700;
extern const Qul::Private::FontEngine * const qul_font_default_25_700;
extern const Qul::Private::FontEngine * const qul_font_default_30_400;
extern const Qul::Private::FontEngine * const qul_font_default_25_700;
extern const Qul::Private::FontEngine * const qul_font_default_25_400;
extern const Qul::Private::FontEngine * const qul_font_default_20_700;
extern const Qul::Private::FontEngine * const qul_font_default_20_700;
extern const Qul::Private::FontEngine * const qul_font_default_20_700;
extern const Qul::Private::FontEngine * const qul_font_default_20_700;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_0;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_1;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_2;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_3;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_4;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_5;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_6;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_7;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_8;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_9;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_10;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_11;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_12;
extern const Qul::Private::StaticTextItem *const qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_13;
static const Qul::Private::String qulCurrentFileDir("qml", 3);
extern Qul::Private::Items::ItemBase *loaderItemAllocator(const Qul::Private::String &uri, const Qul::Private::String &currentFileDir);

namespace Qul { namespace Private {
Qul::Property<int> &translationIndexProperty_da39a3ee5e6b4b0d3255bfef95601890afd80709();
extern const uint32_t *qul_translation_offsets_fd87a2cbfb7327bc447f4f702061da902e12a60c();
extern const uint8_t *qul_translations_fd87a2cbfb7327bc447f4f702061da902e12a60c();
}}


namespace {
#if defined(QUL_CC_IAR)
#pragma diag_suppress=Pe177 // declared but never referenced
#elif defined(QUL_CC_GNU)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"
#endif
static Qul::Property<int> &translationIndexProperty() { return Qul::Private::translationIndexProperty_da39a3ee5e6b4b0d3255bfef95601890afd80709(); }
static int translationIndex() { return translationIndexProperty().value(); }
static const char *qul_translation(int entry) {
    const size_t translationLanguageCount = 1;
    const uint32_t *offsets = Qul::Private::qul_translation_offsets_fd87a2cbfb7327bc447f4f702061da902e12a60c();
    const uint8_t *translations = Qul::Private::qul_translations_fd87a2cbfb7327bc447f4f702061da902e12a60c();
    return reinterpret_cast<const char *>(&translations[offsets[entry * translationLanguageCount + translationIndex()]]);
}
#if defined(QUL_CC_IAR)
#pragma diag_default=Pe177 // declared but never referenced
#elif defined(QUL_CC_GNU)
#pragma GCC diagnostic pop
#endif
}

void hmimain::mainscreen_Rectangle::updateSpeedInfo(int mspeed, int mtrip, int modo, int mrange, int mpower, int mrpm, bool mregen) {
QUL_DECL_UNUSED hmimain *self = this->parent<hmimain >(); QUL_UNUSED(self);
int r19;
int r20;
int r16;
QUL_DECL_UNUSED powerunit_Text * r16_2 = NULL;
Qul::qreal r16_1;
QUL_DECL_UNUSED powerval_Text * r16_3 = NULL;
int r2;
bool r2_3;
QUL_DECL_UNUSED powerunit_Text * r2_9 = NULL;
QUL_DECL_UNUSED rangeval_Text * r2_11 = NULL;
QUL_DECL_UNUSED Qul::Private::String r2_2;
Qul::qreal r2_4;
QUL_DECL_UNUSED rpmval_Text * r2_10 = NULL;
QUL_DECL_UNUSED tripval_Text * r2_7 = NULL;
QUL_DECL_UNUSED odoval_Text * r2_6 = NULL;
QUL_DECL_UNUSED Qul::Private::Builtins::Math * r2_5 = NULL;
QUL_DECL_UNUSED speed_anim_NumberAnimation * r2_1 = NULL;
QUL_DECL_UNUSED powerval_Text * r2_8 = NULL;
int r15_3;
QUL_DECL_UNUSED rangeval_Text * r15_6 = NULL;
Qul::qreal r15_5;
QUL_DECL_UNUSED rpmval_Text * r15_4 = NULL;
QUL_DECL_UNUSED tripval_Text * r15 = NULL;
QUL_DECL_UNUSED odoval_Text * r15_8 = NULL;
QUL_DECL_UNUSED Qul::Private::Builtins::Math * r15_2 = NULL;
QUL_DECL_UNUSED speed_anim_NumberAnimation * r15_1 = NULL;
int r14;
bool r14_1;
int r17;
Qul::qreal r17_1;
int r21;
int r18;
Qul::qreal r18_1;
QUL_UNUSED(mregen);
QUL_UNUSED(mrpm);
QUL_UNUSED(mpower);
QUL_UNUSED(mrange);
QUL_UNUSED(modo);
QUL_UNUSED(mtrip);
QUL_UNUSED(mspeed);
/*
if(curspeed != mspeed)
{
*/
// line 1365  "qml/hmimain.qml"
r2 = self->curspeed.value();
r14 = r2;
r2 = mspeed;
r2_3 = !Qul::Private::testEqual(r14, r2);
if (!r2_3) {
goto label_0;};
/*
speed_anim.stop();

*/
// line 1367  "qml/hmimain.qml"
r2_1 = &self->speed_anim;
r15_1 = r2_1;
r15_1->stop();
// curspeed = mspeed
// line 1369  "qml/hmimain.qml"
r2 = mspeed;
self->curspeed.setValue(r2);
// itimeval = ((Math.abs(speed - mspeed)*1000)/15);
// line 1370  "qml/hmimain.qml"
r2_5 = &Qul::Private::Builtins::Math ::instance();
r15_2 = r2_5;
r2 = self->speed.value();
r19 = r2;
r2 = mspeed;
r2 = r19 - r2;
r18 = r2;
r2_4 = r15_2->abs(r18);
r15_5 = r2_4;
r2 = 1000;
r2_4 = r15_5 * r2;
r16_1 = r2_4;
r2 = 15;
r2_4 = Qul::qreal(r16_1) / r2;
self->itimeval.setValue(int(r2_4));
/*
if(itimeval >1500)
{
*/
// line 1371  "qml/hmimain.qml"
r2 = self->itimeval.value();
r15_3 = r2;
r2 = 1500;
r2_3 = r15_3 > r2;
if (!r2_3) goto label_1;;
// speed = mspeed
// line 1373  "qml/hmimain.qml"
r2 = mspeed;
self->speed.setValue(r2);
/*
itimeval = 100
}
*/
// line 1374  "qml/hmimain.qml"
r2 = 100;
self->itimeval.setValue(r2);
label_1:;
// speed_anim.duration = itimeval
// line 1376  "qml/hmimain.qml"
r2_1 = &self->speed_anim;
r15_1 = r2_1;
r2 = self->itimeval.value();
r15_1->duration.setValue(r2);
// speed_anim.to = mspeed;
// line 1377  "qml/hmimain.qml"
r2_1 = &self->speed_anim;
r15_1 = r2_1;
r2 = mspeed;
r15_1->to.setValue(r2);
/*
speed_anim.start();
}

*/
// line 1378  "qml/hmimain.qml"
r2_1 = &self->speed_anim;
r15_1 = r2_1;
r15_1->start();
{
}
label_0:;
/*
if(itrip != mtrip)
{
*/
// line 1381  "qml/hmimain.qml"
r2 = self->itrip.value();
r14 = r2;
r2 = mtrip;
r2_3 = !Qul::Private::testEqual(r14, r2);
if (!r2_3) {
goto label_2;};
// itrip = mtrip
// line 1383  "qml/hmimain.qml"
r2 = mtrip;
self->itrip.setValue(r2);
// rtripval = ((1.0*mtrip)/1000).toFixed(1)
// line 1384  "qml/hmimain.qml"
r15_3 = 1;
r2 = mtrip;
r2 = r15_3 * r2;
r16 = r2;
r2 = 1000;
r2_4 = Qul::qreal(r16) / r2;
r17_1 = r2_4;
r20 = 1;
r2_2 = Qul::Private::Builtins::Number(r17_1).toFixed(r20);
self->rtripval.setValue(r2_2);
/*
tripval.text = rtripval
}


*/
// line 1385  "qml/hmimain.qml"
r2_7 = &self->tripval;
r15 = r2_7;
r2_2 = self->rtripval.value();
r15->text.setValue(r2_2);
{
}
label_2:;
/*
if(iodo != modo)
{
*/
// line 1389  "qml/hmimain.qml"
r2 = self->iodo.value();
r14 = r2;
r2 = modo;
r2_3 = !Qul::Private::testEqual(r14, r2);
if (!r2_3) {
goto label_3;};
// iodo = modo
// line 1391  "qml/hmimain.qml"
r2 = modo;
self->iodo.setValue(r2);
// rodoval =  ((1.0*modo)/1000).toFixed(1)
// line 1392  "qml/hmimain.qml"
r15_3 = 1;
r2 = modo;
r2 = r15_3 * r2;
r16 = r2;
r2 = 1000;
r2_4 = Qul::qreal(r16) / r2;
r17_1 = r2_4;
r20 = 1;
r2_2 = Qul::Private::Builtins::Number(r17_1).toFixed(r20);
self->rodoval.setValue(r2_2);
/*
odoval.text = rodoval
}


*/
// line 1393  "qml/hmimain.qml"
r2_6 = &self->odoval;
r15_8 = r2_6;
r2_2 = self->rodoval.value();
r15_8->text.setValue(r2_2);
{
}
label_3:;
/*
if(irange != mrange)
{
*/
// line 1397  "qml/hmimain.qml"
r2 = self->irange.value();
r14 = r2;
r2 = mrange;
r2_3 = !Qul::Private::testEqual(r14, r2);
if (!r2_3) {
goto label_4;};
// irange = mrange
// line 1399  "qml/hmimain.qml"
r2 = mrange;
self->irange.setValue(r2);
// rangeval.text = mrange.toString()
// line 1400  "qml/hmimain.qml"
r2_11 = &self->rangeval;
r15_6 = r2_11;
r2_2 = Qul::Private::Builtins::Number(mrange).toString();
r15_6->text.setValue(r2_2);
/*
if(irange <255)
{
*/
// line 1401  "qml/hmimain.qml"
r2 = self->irange.value();
r15_3 = r2;
r2 = 255;
r2_3 = r15_3 < r2;
if (!r2_3) goto label_5;;
/*
rangeAniVal = irange*1.411764706
}
else
{
*/
// line 1403  "qml/hmimain.qml"
r2 = self->irange.value();
r16 = r2;
r2_4 = 1.41176470600000004;
r2_4 = r16 * r2_4;
self->rangeAniVal.setValue(int(r2_4));
{
goto label_4;};
label_5:;
/*
rangeAniVal = 360
}

}


*/
// line 1407  "qml/hmimain.qml"
r2 = 360;
self->rangeAniVal.setValue(r2);
{
}
label_4:;
/*
if(irpm != mrpm)
{
*/
// line 1413  "qml/hmimain.qml"
r2 = self->irpm.value();
r14 = r2;
r2 = mrpm;
r2_3 = !Qul::Private::testEqual(r14, r2);
if (!r2_3) goto label_6;;
// irpm = mrpm
// line 1415  "qml/hmimain.qml"
r2 = mrpm;
self->irpm.setValue(r2);
/*
rpmval.text   = mrpm.toString()
}


*/
// line 1416  "qml/hmimain.qml"
r2_10 = &self->rpmval;
r15_4 = r2_10;
r2_2 = Qul::Private::Builtins::Number(mrpm).toString();
r15_4->text.setValue(r2_2);
label_6:;
/*
if(bregen != mregen)
{
*/
// line 1420  "qml/hmimain.qml"
r2_3 = self->bregen.value();
r14_1 = r2_3;
r2_3 = mregen;
r2_3 = !Qul::Private::testEqual(r14_1, r2_3);
if (!r2_3) goto label_7;;
/*
bregen = mregen
}


*/
// line 1422  "qml/hmimain.qml"
r2_3 = mregen;
self->bregen.setValue(r2_3);
label_7:;
/*
if(ipower != mpower)
{

*/
// line 1426  "qml/hmimain.qml"
r2 = self->ipower.value();
r14 = r2;
r2 = mpower;
r2_3 = !Qul::Private::testEqual(r14, r2);
if (!r2_3) {
goto label_8;};
// ipower = mpower
// line 1429  "qml/hmimain.qml"
r2 = mpower;
self->ipower.setValue(r2);
/*
if(mpower < 1000)
{
*/
// line 1430  "qml/hmimain.qml"
r15_3 = mpower;
r2 = 1000;
r2_3 = r15_3 < r2;
if (!r2_3) {
goto label_9;};
// powerunit.text = qsTr("W")
// line 1432  "qml/hmimain.qml"
r2_9 = &self->powerunit;
r16_2 = r2_9;
r2_2 = Qul::Private::String(Qul::Private::Latin1String("W", 1));
r2_2 = qul_translation(1);
r16_2->text.setValue(r2_2);
/*
powerval.text = mpower.toString()
}
else
{
*/
// line 1433  "qml/hmimain.qml"
r2_8 = &self->powerval;
r16_3 = r2_8;
r2_2 = Qul::Private::Builtins::Number(mpower).toString();
r16_3->text.setValue(r2_2);
{
goto label_8;};
{
}
label_9:;
// rpowerval =  (((1.0*mpower)/1000).toFixed(2))
// line 1437  "qml/hmimain.qml"
r16 = 1;
r2 = mpower;
r2 = r16 * r2;
r17 = r2;
r2 = 1000;
r2_4 = Qul::qreal(r17) / r2;
r18_1 = r2_4;
r21 = 2;
r2_2 = Qul::Private::Builtins::Number(r18_1).toFixed(r21);
self->rpowerval.setValue(r2_2);
// powerval.text = rpowerval
// line 1438  "qml/hmimain.qml"
r2_8 = &self->powerval;
r16_3 = r2_8;
r2_2 = self->rpowerval.value();
r16_3->text.setValue(r2_2);
/*
powerunit.text = qsTr("kW")
}
}

*/
// line 1439  "qml/hmimain.qml"
r2_9 = &self->powerunit;
r16_2 = r2_9;
r2_2 = Qul::Private::String(Qul::Private::Latin1String("kW", 2));
r2_2 = qul_translation(11);
r16_2->text.setValue(r2_2);
{
r17_1 = r17;
}
label_8:;
// }
// line 1443  "qml/hmimain.qml"
return ;
}


void hmimain::mainscreen_Rectangle::concatfaultInfo(Qul::Private::String sfaultstr) {
QUL_DECL_UNUSED hmimain *self = this->parent<hmimain >(); QUL_UNUSED(self);
int r9__length;
int r2_1;
bool r2_2;
QUL_DECL_UNUSED Qul::Private::String r2;
int r8__length;
QUL_DECL_UNUSED Qul::Private::String r8;
int r10;
int r12;
QUL_DECL_UNUSED Qul::Private::String r12_1;
int r11;
QUL_UNUSED(sfaultstr);
/*
if(sFault.length > 0 )
{
*/
// line 1448  "qml/hmimain.qml"
r2 = self->sFault.value();
r2_1 = r2.length();
r8__length = r2_1;
r2_1 = 0;
r2_2 = r8__length > r2_1;
if (!r2_2) {
goto label_0;};
/*
if((sFault.length + sfaultstr.length) > (50 * icurcount))
{
*/
// line 1450  "qml/hmimain.qml"
r2 = self->sFault.value();
r2_1 = r2.length();
r9__length = r2_1;
r2 = sfaultstr;
r2_1 = r2.length();
r2_1 = r9__length + r2_1;
r10 = r2_1;
r11 = 50;
r2_1 = self->icurcount.value();
r2_1 = r11 * r2_1;
r2_2 = r10 > r2_1;
if (!r2_2) {
goto label_1;};
// sFault =  sFault+qsTr(",\n")
// line 1452  "qml/hmimain.qml"
r2 = self->sFault.value();
r12_1 = r2;
r2 = Qul::Private::String(Qul::Private::Latin1String(",\n", 2));
r2 = qul_translation(12);
r2 = r12_1 + r2;
self->sFault.setValue(r2);
/*
icurcount = icurcount + 1
}
else
{
*/
// line 1453  "qml/hmimain.qml"
r2_1 = self->icurcount.value();
r12 = r2_1;
r2_1 = 1;
r2_1 = r12 + r2_1;
self->icurcount.setValue(r2_1);
{
r2 = Qul::Private::Builtins::Number(r2_1).toString();
r12_1 = Qul::Private::Builtins::Number(r12).toString();
goto label_2;};
{
}
label_1:;
/*
sFault =  sFault+qsTr(",")
}

}
else
{
*/
// line 1457  "qml/hmimain.qml"
r2 = self->sFault.value();
r12_1 = r2;
r2 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
r2 = qul_translation(13);
r2 = r12_1 + r2;
self->sFault.setValue(r2);
{
}
label_2:;
goto label_3;;
{
}
label_0:;
/*
icurcount = 1
}

*/
// line 1463  "qml/hmimain.qml"
r2_1 = 1;
self->icurcount.setValue(r2_1);
label_3:;
// sFault = sFault + sfaultstr
// line 1466  "qml/hmimain.qml"
r2 = self->sFault.value();
r8 = r2;
r2 = sfaultstr;
r2 = r8 + r2;
self->sFault.setValue(r2);
// }
// line 1467  "qml/hmimain.qml"
return ;
}


void hmimain::mainscreen_Rectangle::updatefaultInfo(Qul::Private::String sfault0, Qul::Private::String sfault1, Qul::Private::String sfault2, Qul::Private::String sfault3, Qul::Private::String sfault4) {
QUL_DECL_UNUSED hmimain *self = this->parent<hmimain >(); QUL_UNUSED(self);
bool r2_1;
int r2_2;
QUL_DECL_UNUSED dtcmsg_Text * r2_3 = NULL;
QUL_DECL_UNUSED Qul::Private::String r2;
int r12__length;
QUL_DECL_UNUSED dtcmsg_Text * r12 = NULL;
QUL_UNUSED(sfault4);
QUL_UNUSED(sfault3);
QUL_UNUSED(sfault2);
QUL_UNUSED(sfault1);
QUL_UNUSED(sfault0);
// sFault = qsTr("")
// line 1471  "qml/hmimain.qml"
r2 = Qul::Private::String(Qul::Private::Latin1String("", 0));
r2 = qul_translation(14);
self->sFault.setValue(r2);
/*
if(sfault0.length >0)
{
*/
// line 1472  "qml/hmimain.qml"
r2 = sfault0;
r2_2 = r2.length();
r12__length = r2_2;
r2_2 = 0;
r2_1 = r12__length > r2_2;
if (!r2_1) goto label_0;;
/*
concatfaultInfo(sfault0)
}
*/
// line 1474  "qml/hmimain.qml"
concatfaultInfo(sfault0);
label_0:;
/*
if(sfault1.length >0)
{
*/
// line 1476  "qml/hmimain.qml"
r2 = sfault1;
r2_2 = r2.length();
r12__length = r2_2;
r2_2 = 0;
r2_1 = r12__length > r2_2;
if (!r2_1) goto label_1;;
/*
concatfaultInfo(sfault1)
}
*/
// line 1478  "qml/hmimain.qml"
concatfaultInfo(sfault1);
label_1:;
/*
if(sfault2.length >0)
{
*/
// line 1480  "qml/hmimain.qml"
r2 = sfault2;
r2_2 = r2.length();
r12__length = r2_2;
r2_2 = 0;
r2_1 = r12__length > r2_2;
if (!r2_1) goto label_2;;
/*
concatfaultInfo(sfault2)
}
*/
// line 1482  "qml/hmimain.qml"
concatfaultInfo(sfault2);
label_2:;
/*
if(sfault3.length >0)
{
*/
// line 1484  "qml/hmimain.qml"
r2 = sfault3;
r2_2 = r2.length();
r12__length = r2_2;
r2_2 = 0;
r2_1 = r12__length > r2_2;
if (!r2_1) goto label_3;;
/*
concatfaultInfo(sfault3)
}
*/
// line 1486  "qml/hmimain.qml"
concatfaultInfo(sfault3);
label_3:;
/*
if(sfault4.length >0)
{
*/
// line 1488  "qml/hmimain.qml"
r2 = sfault4;
r2_2 = r2.length();
r12__length = r2_2;
r2_2 = 0;
r2_1 = r12__length > r2_2;
if (!r2_1) goto label_4;;
/*
concatfaultInfo(sfault4)
}

*/
// line 1490  "qml/hmimain.qml"
concatfaultInfo(sfault4);
label_4:;
/*
if(sFault.length == 0)
{
*/
// line 1493  "qml/hmimain.qml"
r2 = self->sFault.value();
r2_2 = r2.length();
r2_1 = Qul::Private::testEqual(0, r2_2);
if (!r2_1) {
goto label_5;};
// sFault=qsTr("")
// line 1495  "qml/hmimain.qml"
r2 = Qul::Private::String(Qul::Private::Latin1String("", 0));
r2 = qul_translation(14);
self->sFault.setValue(r2);
/*
dtcmsg.text = qsTr("No Faults")
}
else
{
*/
// line 1496  "qml/hmimain.qml"
r2_3 = &self->dtcmsg;
r12 = r2_3;
r2 = Qul::Private::String(Qul::Private::Latin1String("No Faults", 9));
r2 = qul_translation(15);
r12->text.setValue(r2);
goto label_6;;
{
}
label_5:;
/*
dtcmsg.text = qsTr("DTC Found")
}
*/
// line 1500  "qml/hmimain.qml"
r2_3 = &self->dtcmsg;
r12 = r2_3;
r2 = Qul::Private::String(Qul::Private::Latin1String("DTC Found", 9));
r2 = qul_translation(16);
r12->text.setValue(r2);
label_6:;
// iFaultCount	= sFault.length
// line 1502  "qml/hmimain.qml"
r2 = self->sFault.value();
r2_2 = r2.length();
self->iFaultCount.setValue(r2_2);
// }
// line 1503  "qml/hmimain.qml"
return ;
}



void hmimain::ComponentAttachedType_node_onCompleted_bindingFunctor::operator()() const
{
    bool r2_1;
    int r2_2;
    QUL_DECL_UNUSED timer_Timer * r2_4 = NULL;
    QUL_DECL_UNUSED splashlogo_Image * r2_3 = NULL;
    QUL_DECL_UNUSED splashscreen_Rectangle * r2 = NULL;
    QUL_DECL_UNUSED timer_Timer * r7_2 = NULL;
    QUL_DECL_UNUSED splashlogo_Image * r7 = NULL;
    QUL_DECL_UNUSED splashscreen_Rectangle * r7_1 = NULL;
    // splashscreen.visible = true
    // line 219  "qml/hmimain.qml"
    r2 = &self->splashscreen;
    r7_1 = r2;
    r2_1 = true;
    r7_1->visible.setValue(r2_1);
    // splashlogo.visible = true
    // line 220  "qml/hmimain.qml"
    r2_3 = &self->splashlogo;
    r7 = r2_3;
    r2_1 = true;
    r7->visible.setValue(r2_1);
    // istate = 0xff
    // line 221  "qml/hmimain.qml"
    r2_2 = 255;
    self->istate.setValue(r2_2);
    // iscreen =0
    // line 222  "qml/hmimain.qml"
    r2_2 = 0;
    self->iscreen.setValue(r2_2);
    /*
    timer.start()
    
    */
    // line 223  "qml/hmimain.qml"
    r2_4 = &self->timer;
    r7_2 = r2_4;
    r7_2->start();
    // }
    // line 225  "qml/hmimain.qml"
    return ;
    
}
void hmimain::timer_onTriggered_bindingFunctor::operator()() const
{
    bool r2_1;
    int r2_2;
    QUL_DECL_UNUSED homescreen_Rectangle * r2_3 = NULL;
    QUL_DECL_UNUSED splashscreen_Rectangle * r2 = NULL;
    QUL_DECL_UNUSED homescreen_Rectangle * r7 = NULL;
    QUL_DECL_UNUSED splashscreen_Rectangle * r7_1 = NULL;
    // splashscreen.visible = false
    // line 239  "qml/hmimain.qml"
    r2 = &self->splashscreen;
    r7_1 = r2;
    r2_1 = false;
    r7_1->visible.setValue(r2_1);
    // istate = 0xff
    // line 240  "qml/hmimain.qml"
    r2_2 = 255;
    self->istate.setValue(r2_2);
    // homescreen.visible = true
    // line 241  "qml/hmimain.qml"
    r2_3 = &self->homescreen;
    r7 = r2_3;
    r2_1 = true;
    r7->visible.setValue(r2_1);
    // }
    // line 242  "qml/hmimain.qml"
    return ;
    
}
void hmimain::triptimer_onTriggered_bindingFunctor::operator()() const
{
    bool r2;
    /*
    if(btripreset)
    {
    */
    // line 250  "qml/hmimain.qml"
    r2 = self->btripreset.value();
    if (!r2) goto label_0;;
    /*
    bwarning = false
    }
    */
    // line 252  "qml/hmimain.qml"
    r2 = false;
    self->bwarning.setValue(r2);
    label_0:;
    // }
    // line 254  "qml/hmimain.qml"
    return ;
    
}
void hmimain::deviceinfotimer_onTriggered_bindingFunctor::operator()() const
{
    bool r2;
    /*
    if(bdeviceinfo)
    {
    */
    // line 262  "qml/hmimain.qml"
    r2 = self->bdeviceinfo.value();
    if (!r2) goto label_0;;
    /*
    bdeviceinfo = false
    }
    */
    // line 264  "qml/hmimain.qml"
    r2 = false;
    self->bdeviceinfo.setValue(r2);
    label_0:;
    // }
    // line 266  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onFault4StatusChanged_bindingFunctor::operator()(int mfault0, int mfault1, int mfault2, int mfault3) const
{
    int r13__length;
    QUL_DECL_UNUSED Qul::Private::String r13;
    QUL_DECL_UNUSED Qul::Private::String r16;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r12;
    bool r12_1;
    int r14_1;
    QUL_DECL_UNUSED Qul::Private::String r14;
    bool r11;
    int r11_1;
    QUL_DECL_UNUSED Qul::Private::String r17;
    QUL_DECL_UNUSED Qul::Private::String r15;
    QUL_DECL_UNUSED Qul::Private::String r18;
    QUL_UNUSED(mfault3);
    QUL_UNUSED(mfault2);
    QUL_UNUSED(mfault1);
    QUL_UNUSED(mfault0);
    // bFault4 =0
    // line 2200  "qml/hmimain.qml"
    r2 = 0;
    self->bFault4.setValue(r2);
    /*
    if(iFault40 != mfault0)
    {
    */
    // line 2201  "qml/hmimain.qml"
    r2 = self->iFault40.value();
    r11_1 = r2;
    r2 = mfault0;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_0;;
    // iFault40 = mfault0
    // line 2203  "qml/hmimain.qml"
    r2 = mfault0;
    self->iFault40.setValue(r2);
    /*
    bFault4 = 1
    }
    */
    // line 2204  "qml/hmimain.qml"
    r2 = 1;
    self->bFault4.setValue(r2);
    label_0:;
    /*
    if(iFault41 != mfault1)
    {
    */
    // line 2206  "qml/hmimain.qml"
    r2 = self->iFault41.value();
    r11_1 = r2;
    r2 = mfault1;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_1;;
    // iFault41 = mfault1
    // line 2208  "qml/hmimain.qml"
    r2 = mfault1;
    self->iFault41.setValue(r2);
    /*
    bFault4 = 1
    }
    */
    // line 2209  "qml/hmimain.qml"
    r2 = 1;
    self->bFault4.setValue(r2);
    label_1:;
    /*
    if(iFault42 != mfault2)
    {
    */
    // line 2211  "qml/hmimain.qml"
    r2 = self->iFault42.value();
    r11_1 = r2;
    r2 = mfault2;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_2;;
    // iFault42 = mfault2
    // line 2213  "qml/hmimain.qml"
    r2 = mfault2;
    self->iFault42.setValue(r2);
    /*
    bFault4 = 1
    }
    */
    // line 2214  "qml/hmimain.qml"
    r2 = 1;
    self->bFault4.setValue(r2);
    label_2:;
    /*
    if(iFault43 != mfault3)
    {
    */
    // line 2216  "qml/hmimain.qml"
    r2 = self->iFault43.value();
    r11_1 = r2;
    r2 = mfault3;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_3;;
    // iFault43 = mfault3
    // line 2218  "qml/hmimain.qml"
    r2 = mfault3;
    self->iFault43.setValue(r2);
    /*
    bFault4 = 1
    }
    
    */
    // line 2219  "qml/hmimain.qml"
    r2 = 1;
    self->bFault4.setValue(r2);
    label_3:;
    /*
    if(bFault4 == true)
    {
    */
    // line 2222  "qml/hmimain.qml"
    r2_2 = self->bFault4.value();
    r11 = r2_2;
    r2_2 = true;
    r2_2 = Qul::Private::testEqual(r11, r2_2);
    if (!r2_2) {
    goto label_4;};
    // sFault4 = qsTr("")
    // line 2224  "qml/hmimain.qml"
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("", 0));
    r14 = r2_1;
    r2_1 = qul_translation(14);
    self->sFault4.setValue(r2_1);
    /*
    if(iFault40 >0)
    {
    */
    // line 2225  "qml/hmimain.qml"
    r2 = self->iFault40.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_5;};
    /*
    sFault4 = sFault4 + iFault40.toString()
    }
    */
    // line 2227  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r13 = r2_1;
    r2 = self->iFault40.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault4.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_5:;
    /*
    if(iFault41 >0)
    {
    */
    // line 2229  "qml/hmimain.qml"
    r2 = self->iFault41.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_6;};
    /*
    if(sFault4.length>0)
    {
    */
    // line 2231  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) {
    goto label_7;};
    /*
    sFault4 = sFault4 + qsTr(",")
    }
    */
    // line 2233  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault4.setValue(r2_1);
    {
    }
    label_7:;
    /*
    sFault4 = sFault4 +iFault41.toString()
    }
    */
    // line 2235  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r13 = r2_1;
    r2 = self->iFault41.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault4.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_6:;
    /*
    if(iFault42 >0)
    {
    */
    // line 2237  "qml/hmimain.qml"
    r2 = self->iFault42.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_8;};
    /*
    if(sFault4.length>0)
    {
    */
    // line 2239  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) goto label_9;;
    /*
    sFault4 = sFault4 + qsTr(",")
    }
    */
    // line 2241  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault4.setValue(r2_1);
    label_9:;
    /*
    sFault4 = sFault4 + iFault42.toString()
    }
    */
    // line 2243  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r13 = r2_1;
    r2 = self->iFault42.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault4.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_8:;
    /*
    if(iFault43 >0)
    {
    */
    // line 2245  "qml/hmimain.qml"
    r2 = self->iFault43.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_10;};
    /*
    if(sFault4.length>0)
    {
    */
    // line 2247  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) goto label_11;;
    /*
    sFault4 = sFault4 + qsTr(",")
    }
    */
    // line 2249  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault4.setValue(r2_1);
    label_11:;
    /*
    sFault4 = sFault4 + iFault43.toString()
    }
    
    */
    // line 2251  "qml/hmimain.qml"
    r2_1 = self->sFault4.value();
    r13 = r2_1;
    r2 = self->iFault43.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault4.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_10:;
    // updatefaultInfo(sFault0,sFault1,sFault2,sFault3,sFault4)
    // line 2254  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r14 = r2_1;
    r2_1 = self->sFault1.value();
    r15 = r2_1;
    r2_1 = self->sFault2.value();
    r16 = r2_1;
    r2_1 = self->sFault3.value();
    r17 = r2_1;
    r2_1 = self->sFault4.value();
    r18 = r2_1;
    self->mainscreen.updatefaultInfo(r14, r15, r16, r17, r18);
    /*
    if(benablefault == true)
    {
    */
    // line 2255  "qml/hmimain.qml"
    r2_2 = self->benablefault.value();
    r12_1 = r2_2;
    r2_2 = true;
    r2_2 = Qul::Private::testEqual(r12_1, r2_2);
    if (!r2_2) {
    goto label_4;};
    /*
    sfaultmsg = sFault
    }
    }
    */
    // line 2257  "qml/hmimain.qml"
    r2_1 = self->sFault.value();
    self->sfaultmsg.setValue(r2_1);
    {
    }
    label_4:;
    // }
    // line 2260  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onFault3StatusChanged_bindingFunctor::operator()(int mfault0, int mfault1, int mfault2, int mfault3) const
{
    int r13__length;
    QUL_DECL_UNUSED Qul::Private::String r13;
    QUL_DECL_UNUSED Qul::Private::String r16;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r12;
    bool r12_1;
    int r14_1;
    QUL_DECL_UNUSED Qul::Private::String r14;
    bool r11;
    int r11_1;
    QUL_DECL_UNUSED Qul::Private::String r17;
    QUL_DECL_UNUSED Qul::Private::String r15;
    QUL_DECL_UNUSED Qul::Private::String r18;
    QUL_UNUSED(mfault3);
    QUL_UNUSED(mfault2);
    QUL_UNUSED(mfault1);
    QUL_UNUSED(mfault0);
    // bFault3 =0
    // line 2137  "qml/hmimain.qml"
    r2 = 0;
    self->bFault3.setValue(r2);
    /*
    if(iFault30 != mfault0)
    {
    */
    // line 2138  "qml/hmimain.qml"
    r2 = self->iFault30.value();
    r11_1 = r2;
    r2 = mfault0;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_0;;
    // iFault30 = mfault0
    // line 2140  "qml/hmimain.qml"
    r2 = mfault0;
    self->iFault30.setValue(r2);
    /*
    bFault3 = 1
    }
    */
    // line 2141  "qml/hmimain.qml"
    r2 = 1;
    self->bFault3.setValue(r2);
    label_0:;
    /*
    if(iFault31 != mfault1)
    {
    */
    // line 2143  "qml/hmimain.qml"
    r2 = self->iFault31.value();
    r11_1 = r2;
    r2 = mfault1;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_1;;
    // iFault31 = mfault1
    // line 2145  "qml/hmimain.qml"
    r2 = mfault1;
    self->iFault31.setValue(r2);
    /*
    bFault3 = 1
    }
    */
    // line 2146  "qml/hmimain.qml"
    r2 = 1;
    self->bFault3.setValue(r2);
    label_1:;
    /*
    if(iFault32 != mfault2)
    {
    */
    // line 2148  "qml/hmimain.qml"
    r2 = self->iFault32.value();
    r11_1 = r2;
    r2 = mfault2;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_2;;
    // iFault32 = mfault2
    // line 2150  "qml/hmimain.qml"
    r2 = mfault2;
    self->iFault32.setValue(r2);
    /*
    bFault3 = 1
    }
    */
    // line 2151  "qml/hmimain.qml"
    r2 = 1;
    self->bFault3.setValue(r2);
    label_2:;
    /*
    if(iFault33 != mfault3)
    {
    */
    // line 2153  "qml/hmimain.qml"
    r2 = self->iFault33.value();
    r11_1 = r2;
    r2 = mfault3;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_3;;
    // iFault33 = mfault3
    // line 2155  "qml/hmimain.qml"
    r2 = mfault3;
    self->iFault33.setValue(r2);
    /*
    bFault3 = 1
    }
    
    */
    // line 2156  "qml/hmimain.qml"
    r2 = 1;
    self->bFault3.setValue(r2);
    label_3:;
    /*
    if(bFault3 == true)
    {
    */
    // line 2159  "qml/hmimain.qml"
    r2_2 = self->bFault3.value();
    r11 = r2_2;
    r2_2 = true;
    r2_2 = Qul::Private::testEqual(r11, r2_2);
    if (!r2_2) {
    goto label_4;};
    // sFault3 = qsTr("")
    // line 2161  "qml/hmimain.qml"
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("", 0));
    r14 = r2_1;
    r2_1 = qul_translation(14);
    self->sFault3.setValue(r2_1);
    /*
    if(iFault30 >0)
    {
    */
    // line 2162  "qml/hmimain.qml"
    r2 = self->iFault30.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_5;};
    /*
    sFault3 = sFault3 + iFault30.toString()
    }
    */
    // line 2164  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r13 = r2_1;
    r2 = self->iFault30.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault3.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_5:;
    /*
    if(iFault31 >0)
    {
    */
    // line 2166  "qml/hmimain.qml"
    r2 = self->iFault31.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_6;};
    /*
    if(sFault3.length>0)
    {
    */
    // line 2168  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) {
    goto label_7;};
    /*
    sFault3 = sFault3 + qsTr(",")
    }
    */
    // line 2170  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault3.setValue(r2_1);
    {
    }
    label_7:;
    /*
    sFault3 = sFault3 + iFault31.toString()
    }
    */
    // line 2172  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r13 = r2_1;
    r2 = self->iFault31.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault3.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_6:;
    /*
    if(iFault32 >0)
    {
    */
    // line 2174  "qml/hmimain.qml"
    r2 = self->iFault32.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_8;};
    /*
    if(sFault3.length>0)
    {
    */
    // line 2176  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) goto label_9;;
    /*
    sFault3 = sFault3 + qsTr(",")
    }
    */
    // line 2178  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault3.setValue(r2_1);
    label_9:;
    /*
    sFault3 = sFault3 + iFault32.toString()
    }
    */
    // line 2180  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r13 = r2_1;
    r2 = self->iFault32.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault3.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_8:;
    /*
    if(iFault33 >0)
    {
    */
    // line 2182  "qml/hmimain.qml"
    r2 = self->iFault33.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_10;};
    /*
    if(sFault3.length>0)
    {
    */
    // line 2184  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) goto label_11;;
    /*
    sFault3 = sFault3 + qsTr(",")
    }
    */
    // line 2186  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault3.setValue(r2_1);
    label_11:;
    /*
    sFault3 = sFault3 + iFault33.toString()
    }
    */
    // line 2188  "qml/hmimain.qml"
    r2_1 = self->sFault3.value();
    r13 = r2_1;
    r2 = self->iFault33.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault3.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_10:;
    /*
    updatefaultInfo(sFault0,sFault1,sFault2,sFault3,sFault4)
    
    */
    // line 2190  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r14 = r2_1;
    r2_1 = self->sFault1.value();
    r15 = r2_1;
    r2_1 = self->sFault2.value();
    r16 = r2_1;
    r2_1 = self->sFault3.value();
    r17 = r2_1;
    r2_1 = self->sFault4.value();
    r18 = r2_1;
    self->mainscreen.updatefaultInfo(r14, r15, r16, r17, r18);
    /*
    if(benablefault == true)
    {
    */
    // line 2192  "qml/hmimain.qml"
    r2_2 = self->benablefault.value();
    r12_1 = r2_2;
    r2_2 = true;
    r2_2 = Qul::Private::testEqual(r12_1, r2_2);
    if (!r2_2) {
    goto label_4;};
    /*
    sfaultmsg = sFault
    }
    }
    */
    // line 2194  "qml/hmimain.qml"
    r2_1 = self->sFault.value();
    self->sfaultmsg.setValue(r2_1);
    {
    }
    label_4:;
    // }
    // line 2197  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onFault2StatusChanged_bindingFunctor::operator()(int mfault0, int mfault1, int mfault2, int mfault3) const
{
    int r13__length;
    QUL_DECL_UNUSED Qul::Private::String r13;
    QUL_DECL_UNUSED Qul::Private::String r16;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r12;
    bool r12_1;
    int r14_1;
    QUL_DECL_UNUSED Qul::Private::String r14;
    bool r11;
    int r11_1;
    QUL_DECL_UNUSED Qul::Private::String r17;
    QUL_DECL_UNUSED Qul::Private::String r15;
    QUL_DECL_UNUSED Qul::Private::String r18;
    QUL_UNUSED(mfault3);
    QUL_UNUSED(mfault2);
    QUL_UNUSED(mfault1);
    QUL_UNUSED(mfault0);
    // bFault2 =0
    // line 2074  "qml/hmimain.qml"
    r2 = 0;
    self->bFault2.setValue(r2);
    /*
    if(iFault20 != mfault0)
    {
    */
    // line 2075  "qml/hmimain.qml"
    r2 = self->iFault20.value();
    r11_1 = r2;
    r2 = mfault0;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_0;;
    // iFault20 = mfault0
    // line 2077  "qml/hmimain.qml"
    r2 = mfault0;
    self->iFault20.setValue(r2);
    /*
    bFault2 = 1
    }
    */
    // line 2078  "qml/hmimain.qml"
    r2 = 1;
    self->bFault2.setValue(r2);
    label_0:;
    /*
    if(iFault21 != mfault1)
    {
    */
    // line 2080  "qml/hmimain.qml"
    r2 = self->iFault21.value();
    r11_1 = r2;
    r2 = mfault1;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_1;;
    // iFault21 = mfault1
    // line 2082  "qml/hmimain.qml"
    r2 = mfault1;
    self->iFault21.setValue(r2);
    /*
    bFault2 = 1
    }
    */
    // line 2083  "qml/hmimain.qml"
    r2 = 1;
    self->bFault2.setValue(r2);
    label_1:;
    /*
    if(iFault22 != mfault2)
    {
    */
    // line 2085  "qml/hmimain.qml"
    r2 = self->iFault22.value();
    r11_1 = r2;
    r2 = mfault2;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_2;;
    // iFault22 = mfault2
    // line 2087  "qml/hmimain.qml"
    r2 = mfault2;
    self->iFault22.setValue(r2);
    /*
    bFault2 = 1
    }
    */
    // line 2088  "qml/hmimain.qml"
    r2 = 1;
    self->bFault2.setValue(r2);
    label_2:;
    /*
    if(iFault23 != mfault3)
    {
    */
    // line 2090  "qml/hmimain.qml"
    r2 = self->iFault23.value();
    r11_1 = r2;
    r2 = mfault3;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_3;;
    // iFault23 = mfault3
    // line 2092  "qml/hmimain.qml"
    r2 = mfault3;
    self->iFault23.setValue(r2);
    /*
    bFault2 = 1
    }
    
    */
    // line 2093  "qml/hmimain.qml"
    r2 = 1;
    self->bFault2.setValue(r2);
    label_3:;
    /*
    if(bFault2 == true)
    {
    */
    // line 2096  "qml/hmimain.qml"
    r2_2 = self->bFault2.value();
    r11 = r2_2;
    r2_2 = true;
    r2_2 = Qul::Private::testEqual(r11, r2_2);
    if (!r2_2) {
    goto label_4;};
    // sFault2 = qsTr("")
    // line 2098  "qml/hmimain.qml"
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("", 0));
    r14 = r2_1;
    r2_1 = qul_translation(14);
    self->sFault2.setValue(r2_1);
    /*
    if(iFault20 >0)
    {
    */
    // line 2099  "qml/hmimain.qml"
    r2 = self->iFault20.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_5;};
    /*
    sFault2 = sFault2 + iFault20.toString()
    }
    */
    // line 2101  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r13 = r2_1;
    r2 = self->iFault20.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault2.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_5:;
    /*
    if(iFault21 >0)
    {
    */
    // line 2103  "qml/hmimain.qml"
    r2 = self->iFault21.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_6;};
    /*
    if(sFault2.length>0)
    {
    */
    // line 2105  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) {
    goto label_7;};
    /*
    sFault2 = sFault2 + qsTr(",")
    }
    */
    // line 2107  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault2.setValue(r2_1);
    {
    }
    label_7:;
    /*
    sFault2 = sFault2 + iFault21.toString()
    }
    */
    // line 2109  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r13 = r2_1;
    r2 = self->iFault21.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault2.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_6:;
    /*
    if(iFault22 >0)
    {
    */
    // line 2111  "qml/hmimain.qml"
    r2 = self->iFault22.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_8;};
    /*
    if(sFault2.length>0)
    {
    */
    // line 2113  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) goto label_9;;
    /*
    sFault2 = sFault2 + qsTr(",")
    }
    */
    // line 2115  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault2.setValue(r2_1);
    label_9:;
    /*
    sFault2 = sFault2 + iFault22.toString()
    }
    */
    // line 2117  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r13 = r2_1;
    r2 = self->iFault22.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault2.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_8:;
    /*
    if(iFault23 >0)
    {
    */
    // line 2119  "qml/hmimain.qml"
    r2 = self->iFault23.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_10;};
    /*
    if(sFault2.length>0)
    {
    */
    // line 2121  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) goto label_11;;
    /*
    sFault2 = sFault2 + qsTr(",")
    }
    */
    // line 2123  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault2.setValue(r2_1);
    label_11:;
    /*
    sFault2 = sFault2 +iFault23.toString()
    }
    */
    // line 2125  "qml/hmimain.qml"
    r2_1 = self->sFault2.value();
    r13 = r2_1;
    r2 = self->iFault23.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault2.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_10:;
    // updatefaultInfo(sFault0,sFault1,sFault2,sFault3,sFault4)
    // line 2127  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r14 = r2_1;
    r2_1 = self->sFault1.value();
    r15 = r2_1;
    r2_1 = self->sFault2.value();
    r16 = r2_1;
    r2_1 = self->sFault3.value();
    r17 = r2_1;
    r2_1 = self->sFault4.value();
    r18 = r2_1;
    self->mainscreen.updatefaultInfo(r14, r15, r16, r17, r18);
    /*
    if(benablefault == true)
    {
    */
    // line 2128  "qml/hmimain.qml"
    r2_2 = self->benablefault.value();
    r12_1 = r2_2;
    r2_2 = true;
    r2_2 = Qul::Private::testEqual(r12_1, r2_2);
    if (!r2_2) {
    goto label_4;};
    /*
    sfaultmsg = sFault
    }
    }
    */
    // line 2130  "qml/hmimain.qml"
    r2_1 = self->sFault.value();
    self->sfaultmsg.setValue(r2_1);
    {
    }
    label_4:;
    // }
    // line 2133  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onFault1StatusChanged_bindingFunctor::operator()(int mfault0, int mfault1, int mfault2, int mfault3) const
{
    int r13__length;
    QUL_DECL_UNUSED Qul::Private::String r13;
    QUL_DECL_UNUSED Qul::Private::String r16;
    int r2;
    bool r2_1;
    QUL_DECL_UNUSED Qul::Private::String r2_2;
    int r12;
    bool r12_1;
    int r14_1;
    QUL_DECL_UNUSED Qul::Private::String r14;
    int r11;
    bool r11_1;
    QUL_DECL_UNUSED Qul::Private::String r17;
    QUL_DECL_UNUSED Qul::Private::String r15;
    QUL_DECL_UNUSED Qul::Private::String r18;
    QUL_UNUSED(mfault3);
    QUL_UNUSED(mfault2);
    QUL_UNUSED(mfault1);
    QUL_UNUSED(mfault0);
    /*
    if(iFault10 != mfault0)
    {
    */
    // line 2010  "qml/hmimain.qml"
    r2 = self->iFault10.value();
    r11 = r2;
    r2 = mfault0;
    r2_1 = !Qul::Private::testEqual(r11, r2);
    if (!r2_1) goto label_0;;
    // iFault10 = mfault0
    // line 2012  "qml/hmimain.qml"
    r2 = mfault0;
    self->iFault10.setValue(r2);
    /*
    bFault1 = 1
    }
    */
    // line 2013  "qml/hmimain.qml"
    r2 = 1;
    self->bFault1.setValue(r2);
    label_0:;
    /*
    if(iFault11 != mfault1)
    {
    */
    // line 2015  "qml/hmimain.qml"
    r2 = self->iFault11.value();
    r11 = r2;
    r2 = mfault1;
    r2_1 = !Qul::Private::testEqual(r11, r2);
    if (!r2_1) goto label_1;;
    // iFault11 = mfault1
    // line 2017  "qml/hmimain.qml"
    r2 = mfault1;
    self->iFault11.setValue(r2);
    /*
    bFault1 = 1
    }
    */
    // line 2018  "qml/hmimain.qml"
    r2 = 1;
    self->bFault1.setValue(r2);
    label_1:;
    /*
    if(iFault12 != mfault2)
    {
    */
    // line 2020  "qml/hmimain.qml"
    r2 = self->iFault12.value();
    r11 = r2;
    r2 = mfault2;
    r2_1 = !Qul::Private::testEqual(r11, r2);
    if (!r2_1) goto label_2;;
    // iFault12 = mfault2
    // line 2022  "qml/hmimain.qml"
    r2 = mfault2;
    self->iFault12.setValue(r2);
    /*
    bFault1 = 1
    }
    */
    // line 2023  "qml/hmimain.qml"
    r2 = 1;
    self->bFault1.setValue(r2);
    label_2:;
    /*
    if(iFault13 != mfault3)
    {
    */
    // line 2025  "qml/hmimain.qml"
    r2 = self->iFault13.value();
    r11 = r2;
    r2 = mfault3;
    r2_1 = !Qul::Private::testEqual(r11, r2);
    if (!r2_1) goto label_3;;
    // iFault13 = mfault3
    // line 2027  "qml/hmimain.qml"
    r2 = mfault3;
    self->iFault13.setValue(r2);
    /*
    bFault1 = 1
    }
    
    */
    // line 2028  "qml/hmimain.qml"
    r2 = 1;
    self->bFault1.setValue(r2);
    label_3:;
    /*
    if(bFault1 == true)
    {
    */
    // line 2031  "qml/hmimain.qml"
    r2_1 = self->bFault1.value();
    r11_1 = r2_1;
    r2_1 = true;
    r2_1 = Qul::Private::testEqual(r11_1, r2_1);
    if (!r2_1) {
    goto label_4;};
    // sFault1 = qsTr("")
    // line 2033  "qml/hmimain.qml"
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("", 0));
    r14 = r2_2;
    r2_2 = qul_translation(14);
    self->sFault1.setValue(r2_2);
    /*
    if(iFault10 >0)
    {
    */
    // line 2034  "qml/hmimain.qml"
    r2 = self->iFault10.value();
    r12 = r2;
    r2 = 0;
    r2_1 = r12 > r2;
    if (!r2_1) {
    goto label_5;};
    /*
    sFault1 = sFault1 + iFault10.toString()
    }
    */
    // line 2036  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r13 = r2_2;
    r2 = self->iFault10.value();
    r14_1 = r2;
    r2_2 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_2 = r13 + r2_2;
    self->sFault1.setValue(r2_2);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_5:;
    /*
    if(iFault11 >0)
    {
    */
    // line 2038  "qml/hmimain.qml"
    r2 = self->iFault11.value();
    r12 = r2;
    r2 = 0;
    r2_1 = r12 > r2;
    if (!r2_1) {
    goto label_6;};
    /*
    if(sFault1.length>0)
    {
    */
    // line 2040  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r2 = r2_2.length();
    r13__length = r2;
    r2 = 0;
    r2_1 = r13__length > r2;
    if (!r2_1) {
    goto label_7;};
    /*
    sFault1 = sFault1 + qsTr(",")
    }
    */
    // line 2042  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r14 = r2_2;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_2;
    r2_2 = qul_translation(13);
    r2_2 = r14 + r2_2;
    self->sFault1.setValue(r2_2);
    {
    }
    label_7:;
    /*
    sFault1 = sFault1 +iFault11.toString()
    }
    */
    // line 2044  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r13 = r2_2;
    r2 = self->iFault11.value();
    r14_1 = r2;
    r2_2 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_2 = r13 + r2_2;
    self->sFault1.setValue(r2_2);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_6:;
    /*
    if(iFault12 >0)
    {
    */
    // line 2046  "qml/hmimain.qml"
    r2 = self->iFault12.value();
    r12 = r2;
    r2 = 0;
    r2_1 = r12 > r2;
    if (!r2_1) {
    goto label_8;};
    /*
    if(sFault1.length>0)
    {
    */
    // line 2048  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r2 = r2_2.length();
    r13__length = r2;
    r2 = 0;
    r2_1 = r13__length > r2;
    if (!r2_1) goto label_9;;
    /*
    sFault1 = sFault1 + qsTr(",")
    }
    */
    // line 2050  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r14 = r2_2;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_2;
    r2_2 = qul_translation(13);
    r2_2 = r14 + r2_2;
    self->sFault1.setValue(r2_2);
    label_9:;
    /*
    sFault1 = sFault1 + iFault12.toString()
    }
    */
    // line 2052  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r13 = r2_2;
    r2 = self->iFault12.value();
    r14_1 = r2;
    r2_2 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_2 = r13 + r2_2;
    self->sFault1.setValue(r2_2);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_8:;
    /*
    if(iFault13 >0)
    {
    */
    // line 2054  "qml/hmimain.qml"
    r2 = self->iFault13.value();
    r12 = r2;
    r2 = 0;
    r2_1 = r12 > r2;
    if (!r2_1) {
    goto label_10;};
    /*
    if(sFault1.length>0)
    {
    */
    // line 2056  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r2 = r2_2.length();
    r13__length = r2;
    r2 = 0;
    r2_1 = r13__length > r2;
    if (!r2_1) goto label_11;;
    /*
    sFault1 = sFault1 + qsTr(",")
    }
    */
    // line 2058  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r14 = r2_2;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_2;
    r2_2 = qul_translation(13);
    r2_2 = r14 + r2_2;
    self->sFault1.setValue(r2_2);
    label_11:;
    /*
    sFault1 = sFault1 + iFault13.toString()
    }
    
    */
    // line 2060  "qml/hmimain.qml"
    r2_2 = self->sFault1.value();
    r13 = r2_2;
    r2 = self->iFault13.value();
    r14_1 = r2;
    r2_2 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_2 = r13 + r2_2;
    self->sFault1.setValue(r2_2);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_10:;
    /*
    updatefaultInfo(sFault0,sFault1,sFault2,sFault3,sFault4)
    
    */
    // line 2063  "qml/hmimain.qml"
    r2_2 = self->sFault0.value();
    r14 = r2_2;
    r2_2 = self->sFault1.value();
    r15 = r2_2;
    r2_2 = self->sFault2.value();
    r16 = r2_2;
    r2_2 = self->sFault3.value();
    r17 = r2_2;
    r2_2 = self->sFault4.value();
    r18 = r2_2;
    self->mainscreen.updatefaultInfo(r14, r15, r16, r17, r18);
    /*
    if(benablefault == true)
    {
    */
    // line 2065  "qml/hmimain.qml"
    r2_1 = self->benablefault.value();
    r12_1 = r2_1;
    r2_1 = true;
    r2_1 = Qul::Private::testEqual(r12_1, r2_1);
    if (!r2_1) {
    goto label_4;};
    /*
    sfaultmsg = sFault
    }
    }
    */
    // line 2067  "qml/hmimain.qml"
    r2_2 = self->sFault.value();
    self->sfaultmsg.setValue(r2_2);
    {
    }
    label_4:;
    // }
    // line 2070  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onFault0StatusChanged_bindingFunctor::operator()(int mfault0, int mfault1, int mfault2, int mfault3) const
{
    int r13__length;
    QUL_DECL_UNUSED Qul::Private::String r13;
    QUL_DECL_UNUSED Qul::Private::String r16;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r12;
    bool r12_1;
    int r14_1;
    QUL_DECL_UNUSED Qul::Private::String r14;
    bool r11;
    int r11_1;
    QUL_DECL_UNUSED Qul::Private::String r17;
    QUL_DECL_UNUSED Qul::Private::String r15;
    QUL_DECL_UNUSED Qul::Private::String r18;
    QUL_UNUSED(mfault3);
    QUL_UNUSED(mfault2);
    QUL_UNUSED(mfault1);
    QUL_UNUSED(mfault0);
    // bFault0 =0
    // line 1945  "qml/hmimain.qml"
    r2 = 0;
    self->bFault0.setValue(r2);
    /*
    if(iFault00 != mfault0)
    {
    */
    // line 1946  "qml/hmimain.qml"
    r2 = self->iFault00.value();
    r11_1 = r2;
    r2 = mfault0;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_0;;
    // iFault00 = mfault0
    // line 1948  "qml/hmimain.qml"
    r2 = mfault0;
    self->iFault00.setValue(r2);
    /*
    bFault0 = 1
    }
    */
    // line 1949  "qml/hmimain.qml"
    r2 = 1;
    self->bFault0.setValue(r2);
    label_0:;
    /*
    if(iFault01 != mfault1)
    {
    */
    // line 1951  "qml/hmimain.qml"
    r2 = self->iFault01.value();
    r11_1 = r2;
    r2 = mfault1;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_1;;
    // iFault01 = mfault1
    // line 1953  "qml/hmimain.qml"
    r2 = mfault1;
    self->iFault01.setValue(r2);
    /*
    bFault0 = 1
    }
    */
    // line 1954  "qml/hmimain.qml"
    r2 = 1;
    self->bFault0.setValue(r2);
    label_1:;
    /*
    if(iFault02 != mfault2)
    {
    */
    // line 1956  "qml/hmimain.qml"
    r2 = self->iFault02.value();
    r11_1 = r2;
    r2 = mfault2;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_2;;
    // iFault02 = mfault2
    // line 1958  "qml/hmimain.qml"
    r2 = mfault2;
    self->iFault02.setValue(r2);
    /*
    bFault0 = 1
    }
    */
    // line 1959  "qml/hmimain.qml"
    r2 = 1;
    self->bFault0.setValue(r2);
    label_2:;
    /*
    if(iFault03 != mfault3)
    {
    */
    // line 1961  "qml/hmimain.qml"
    r2 = self->iFault03.value();
    r11_1 = r2;
    r2 = mfault3;
    r2_2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2_2) goto label_3;;
    // iFault03 = mfault3
    // line 1963  "qml/hmimain.qml"
    r2 = mfault3;
    self->iFault03.setValue(r2);
    /*
    bFault0 = 1
    }
    
    */
    // line 1964  "qml/hmimain.qml"
    r2 = 1;
    self->bFault0.setValue(r2);
    label_3:;
    /*
    if(bFault0 == true)
    {
    */
    // line 1967  "qml/hmimain.qml"
    r2_2 = self->bFault0.value();
    r11 = r2_2;
    r2_2 = true;
    r2_2 = Qul::Private::testEqual(r11, r2_2);
    if (!r2_2) {
    goto label_4;};
    // sFault0 = qsTr("")
    // line 1969  "qml/hmimain.qml"
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("", 0));
    r14 = r2_1;
    r2_1 = qul_translation(14);
    self->sFault0.setValue(r2_1);
    /*
    if(iFault00 >0)
    {
    */
    // line 1970  "qml/hmimain.qml"
    r2 = self->iFault00.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_5;};
    /*
    sFault0 = sFault0 + iFault00.toString()
    }
    */
    // line 1972  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r13 = r2_1;
    r2 = self->iFault00.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault0.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_5:;
    /*
    if(iFault01 >0)
    {
    */
    // line 1974  "qml/hmimain.qml"
    r2 = self->iFault01.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_6;};
    /*
    if(sFault0.length>0)
    {
    */
    // line 1976  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) {
    goto label_7;};
    /*
    sFault0 = sFault0 + qsTr(",")
    }
    */
    // line 1978  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault0.setValue(r2_1);
    {
    }
    label_7:;
    /*
    sFault0 = sFault0 + iFault01.toString()
    }
    */
    // line 1980  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r13 = r2_1;
    r2 = self->iFault01.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault0.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_6:;
    /*
    if(iFault02 >0)
    {
    */
    // line 1982  "qml/hmimain.qml"
    r2 = self->iFault02.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_8;};
    /*
    if(sFault0.length>0)
    {
    */
    // line 1984  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) goto label_9;;
    /*
    sFault0 = sFault0 + qsTr(",")
    }
    */
    // line 1986  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault0.setValue(r2_1);
    label_9:;
    /*
    sFault0 = sFault0 +iFault02.toString()
    }
    */
    // line 1988  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r13 = r2_1;
    r2 = self->iFault02.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault0.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_8:;
    /*
    if(iFault03 >0)
    {
    */
    // line 1990  "qml/hmimain.qml"
    r2 = self->iFault03.value();
    r12 = r2;
    r2 = 0;
    r2_2 = r12 > r2;
    if (!r2_2) {
    goto label_10;};
    /*
    if(sFault0.length>0)
    {
    */
    // line 1992  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r2 = r2_1.length();
    r13__length = r2;
    r2 = 0;
    r2_2 = r13__length > r2;
    if (!r2_2) goto label_11;;
    /*
    sFault0 = sFault0 + qsTr(",")
    }
    */
    // line 1994  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r14 = r2_1;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String(",", 1));
    r17 = r2_1;
    r2_1 = qul_translation(13);
    r2_1 = r14 + r2_1;
    self->sFault0.setValue(r2_1);
    label_11:;
    /*
    sFault0 = sFault0 + iFault03.toString()
    }
    
    */
    // line 1996  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r13 = r2_1;
    r2 = self->iFault03.value();
    r14_1 = r2;
    r2_1 = Qul::Private::Builtins::Number(r14_1).toString();
    r2_1 = r13 + r2_1;
    self->sFault0.setValue(r2_1);
    {
    r14 = Qul::Private::Builtins::Number(r14_1).toString();
    }
    label_10:;
    /*
    updatefaultInfo(sFault0,sFault1,sFault2,sFault3,sFault4)
    
    */
    // line 1999  "qml/hmimain.qml"
    r2_1 = self->sFault0.value();
    r14 = r2_1;
    r2_1 = self->sFault1.value();
    r15 = r2_1;
    r2_1 = self->sFault2.value();
    r16 = r2_1;
    r2_1 = self->sFault3.value();
    r17 = r2_1;
    r2_1 = self->sFault4.value();
    r18 = r2_1;
    self->mainscreen.updatefaultInfo(r14, r15, r16, r17, r18);
    /*
    if(benablefault == true)
    {
    */
    // line 2001  "qml/hmimain.qml"
    r2_2 = self->benablefault.value();
    r12_1 = r2_2;
    r2_2 = true;
    r2_2 = Qul::Private::testEqual(r12_1, r2_2);
    if (!r2_2) {
    goto label_4;};
    /*
    sfaultmsg = sFault
    }
    }
    
    */
    // line 2003  "qml/hmimain.qml"
    r2_1 = self->sFault.value();
    self->sfaultmsg.setValue(r2_1);
    {
    }
    label_4:;
    // }
    // line 2007  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onDateTimeChanged_bindingFunctor::operator()(int mday, int mmonth, int myear, int mhour, int mminute, bool mPM, int medit, int mstate) const
{
    int r2;
    bool r2_3;
    QUL_DECL_UNUSED tday_Text * r2_4 = NULL;
    QUL_DECL_UNUSED thour_Text * r2_7 = NULL;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    QUL_DECL_UNUSED tmin_Text * r2_5 = NULL;
    QUL_DECL_UNUSED tyear_Text * r2_2 = NULL;
    QUL_DECL_UNUSED tmon_Text * r2_10 = NULL;
    QUL_DECL_UNUSED daterect_Rectangle * r2_8 = NULL;
    QUL_DECL_UNUSED tampm_Text * r2_6 = NULL;
    QUL_DECL_UNUSED timerect_Rectangle * r2_9 = NULL;
    int r15;
    bool r15_1;
    bool r17_3;
    QUL_DECL_UNUSED tday_Text * r17 = NULL;
    QUL_DECL_UNUSED tmon_Text * r17_2 = NULL;
    QUL_DECL_UNUSED thour_Text * r17_4 = NULL;
    QUL_DECL_UNUSED Qul::Private::String r17_6;
    QUL_DECL_UNUSED tmin_Text * r17_1 = NULL;
    QUL_DECL_UNUSED Qul::Private::String r18;
    int r16;
    QUL_DECL_UNUSED daterect_Rectangle * r16_3 = NULL;
    QUL_DECL_UNUSED tyear_Text * r16_1 = NULL;
    QUL_DECL_UNUSED tampm_Text * r16_2 = NULL;
    QUL_DECL_UNUSED timerect_Rectangle * r16_4 = NULL;
    QUL_UNUSED(mstate);
    QUL_UNUSED(medit);
    QUL_UNUSED(mPM);
    QUL_UNUSED(mminute);
    QUL_UNUSED(mhour);
    QUL_UNUSED(myear);
    QUL_UNUSED(mmonth);
    QUL_UNUSED(mday);
    /*
    isedit = medit
    
    */
    // line 1860  "qml/hmimain.qml"
    r2 = medit;
    self->isedit.setValue(r2);
    /*
    if(medit ==1)
    {
    */
    // line 1862  "qml/hmimain.qml"
    r2 = medit;
    r2_3 = Qul::Private::testEqual(1, r2);
    if (!r2_3) goto label_0;;
    /*
    istate = mstate
    }
    else
    {
    */
    // line 1864  "qml/hmimain.qml"
    r2 = mstate;
    self->istate.setValue(r2);
    goto label_1;;
    label_0:;
    /*
    istate = 0xFF
    }
    
    */
    // line 1868  "qml/hmimain.qml"
    r2 = 255;
    self->istate.setValue(r2);
    label_1:;
    /*
    if(icurday != mday)
    {
    */
    // line 1871  "qml/hmimain.qml"
    r2 = self->icurday.value();
    r15 = r2;
    r2 = mday;
    r2_3 = !Qul::Private::testEqual(r15, r2);
    if (!r2_3) {
    goto label_2;};
    /*
    icurday = mday
    
    */
    // line 1873  "qml/hmimain.qml"
    r2 = mday;
    self->icurday.setValue(r2);
    /*
    if(mday <10)
    {
    */
    // line 1875  "qml/hmimain.qml"
    r16 = mday;
    r2 = 10;
    r2_3 = r16 < r2;
    if (!r2_3) {
    goto label_3;};
    /*
    tday.text = qsTr("0")+mday.toString()
    }
    else
    {
    */
    // line 1877  "qml/hmimain.qml"
    r2_4 = &self->tday;
    r17 = r2_4;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("0", 1));
    r2_1 = qul_translation(0);
    r18 = r2_1;
    r2_1 = Qul::Private::Builtins::Number(mday).toString();
    r2_1 = r18 + r2_1;
    r17->text.setValue(r2_1);
    {
    goto label_2;};
    {
    }
    label_3:;
    /*
    tday.text = mday.toString()
    }
    }
    
    */
    // line 1881  "qml/hmimain.qml"
    r2_4 = &self->tday;
    r17 = r2_4;
    r2_1 = Qul::Private::Builtins::Number(mday).toString();
    r17->text.setValue(r2_1);
    {
    }
    label_2:;
    /*
    if(icurmon != mmonth)
    {
    */
    // line 1885  "qml/hmimain.qml"
    r2 = self->icurmon.value();
    r15 = r2;
    r2 = mmonth;
    r2_3 = !Qul::Private::testEqual(r15, r2);
    if (!r2_3) goto label_4;;
    // icurmon = mmonth
    // line 1887  "qml/hmimain.qml"
    r2 = mmonth;
    self->icurmon.setValue(r2);
    /*
    if(mmonth <10)
    {
    */
    // line 1888  "qml/hmimain.qml"
    r16 = mmonth;
    r2 = 10;
    r2_3 = r16 < r2;
    if (!r2_3) goto label_5;;
    /*
    tmon.text = qsTr("0")+mmonth.toString()
    }
    else
    {
    */
    // line 1890  "qml/hmimain.qml"
    r2_10 = &self->tmon;
    r17_2 = r2_10;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("0", 1));
    r2_1 = qul_translation(0);
    r18 = r2_1;
    r2_1 = Qul::Private::Builtins::Number(mmonth).toString();
    r2_1 = r18 + r2_1;
    r17_2->text.setValue(r2_1);
    goto label_4;;
    label_5:;
    /*
    tmon.text = mmonth.toString()
    }
    }
    
    */
    // line 1894  "qml/hmimain.qml"
    r2_10 = &self->tmon;
    r17_2 = r2_10;
    r2_1 = Qul::Private::Builtins::Number(mmonth).toString();
    r17_2->text.setValue(r2_1);
    label_4:;
    /*
    if(icuryear != myear)
    {
    */
    // line 1898  "qml/hmimain.qml"
    r2 = self->icuryear.value();
    r15 = r2;
    r2 = myear;
    r2_3 = !Qul::Private::testEqual(r15, r2);
    if (!r2_3) {
    goto label_6;};
    // icuryear = myear
    // line 1900  "qml/hmimain.qml"
    r2 = myear;
    self->icuryear.setValue(r2);
    /*
    tyear.text = qsTr("20")+myear.toString()
    }
    
    */
    // line 1901  "qml/hmimain.qml"
    r2_2 = &self->tyear;
    r16_1 = r2_2;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("20", 2));
    r2_1 = qul_translation(34);
    r17_6 = r2_1;
    r2_1 = Qul::Private::Builtins::Number(myear).toString();
    r2_1 = r17_6 + r2_1;
    r16_1->text.setValue(r2_1);
    {
    }
    label_6:;
    /*
    if(icurmin != mminute)
    {
    */
    // line 1904  "qml/hmimain.qml"
    r2 = self->icurmin.value();
    r15 = r2;
    r2 = mminute;
    r2_3 = !Qul::Private::testEqual(r15, r2);
    if (!r2_3) goto label_7;;
    // icurmin = mminute
    // line 1906  "qml/hmimain.qml"
    r2 = mminute;
    self->icurmin.setValue(r2);
    /*
    if(mminute <10)
    {
    */
    // line 1907  "qml/hmimain.qml"
    r16 = mminute;
    r2 = 10;
    r2_3 = r16 < r2;
    if (!r2_3) goto label_8;;
    /*
    tmin.text = qsTr("0")+mminute.toString()
    }
    else
    {
    */
    // line 1909  "qml/hmimain.qml"
    r2_5 = &self->tmin;
    r17_1 = r2_5;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("0", 1));
    r2_1 = qul_translation(0);
    r18 = r2_1;
    r2_1 = Qul::Private::Builtins::Number(mminute).toString();
    r2_1 = r18 + r2_1;
    r17_1->text.setValue(r2_1);
    goto label_7;;
    label_8:;
    /*
    tmin.text = mminute.toString()
    }
    }
    
    */
    // line 1913  "qml/hmimain.qml"
    r2_5 = &self->tmin;
    r17_1 = r2_5;
    r2_1 = Qul::Private::Builtins::Number(mminute).toString();
    r17_1->text.setValue(r2_1);
    label_7:;
    /*
    if(icurhour != mhour)
    {
    */
    // line 1917  "qml/hmimain.qml"
    r2 = self->icurhour.value();
    r15 = r2;
    r2 = mhour;
    r2_3 = !Qul::Private::testEqual(r15, r2);
    if (!r2_3) {
    goto label_9;};
    // icurhour = mhour
    // line 1919  "qml/hmimain.qml"
    r2 = mhour;
    self->icurhour.setValue(r2);
    /*
    if(mhour <10)
    {
    */
    // line 1920  "qml/hmimain.qml"
    r16 = mhour;
    r2 = 10;
    r2_3 = r16 < r2;
    if (!r2_3) {
    goto label_10;};
    /*
    thour.text = qsTr("0")+mhour.toString()
    }
    else
    {
    */
    // line 1922  "qml/hmimain.qml"
    r2_7 = &self->thour;
    r17_4 = r2_7;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("0", 1));
    r2_1 = qul_translation(0);
    r18 = r2_1;
    r2_1 = Qul::Private::Builtins::Number(mhour).toString();
    r2_1 = r18 + r2_1;
    r17_4->text.setValue(r2_1);
    {
    goto label_9;};
    {
    }
    label_10:;
    /*
    thour.text = mhour.toString()
    }
    }
    
    */
    // line 1926  "qml/hmimain.qml"
    r2_7 = &self->thour;
    r17_4 = r2_7;
    r2_1 = Qul::Private::Builtins::Number(mhour).toString();
    r17_4->text.setValue(r2_1);
    {
    }
    label_9:;
    /*
    if(bcurpm != mPM)
    {
    */
    // line 1930  "qml/hmimain.qml"
    r2_3 = self->bcurpm.value();
    r15_1 = r2_3;
    r2_3 = mPM;
    r2_3 = !Qul::Private::testEqual(r15_1, r2_3);
    if (!r2_3) {
    goto label_11;};
    // bcurpm = mPM
    // line 1932  "qml/hmimain.qml"
    r2_3 = mPM;
    self->bcurpm.setValue(r2_3);
    /*
    tampm.text = (mPM == false)?qsTr("AM") :qsTr("PM")
    }
    
    */
    // line 1933  "qml/hmimain.qml"
    r2_6 = &self->tampm;
    r16_2 = r2_6;
    r17_3 = mPM;
    r2_3 = false;
    r2_3 = Qul::Private::testEqual(r17_3, r2_3);
    if (!r2_3) goto label_12;;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("AM", 2));
    r2_1 = qul_translation(9);
    goto label_13;;
    label_12:;
    r2_1 = Qul::Private::String(Qul::Private::Latin1String("PM", 2));
    r2_1 = qul_translation(35);
    label_13:;
    r16_2->text.setValue(r2_1);
    {
    }
    label_11:;
    /*
    if(daterect.visible == false)
    {
    */
    // line 1936  "qml/hmimain.qml"
    r2_8 = &self->daterect;
    r2_3 = r2_8->visible.value();
    r15_1 = r2_3;
    r2_3 = false;
    r2_3 = Qul::Private::testEqual(r15_1, r2_3);
    if (!r2_3) goto label_14;;
    // daterect.visible = true
    // line 1938  "qml/hmimain.qml"
    r2_8 = &self->daterect;
    r16_3 = r2_8;
    r2_3 = true;
    r16_3->visible.setValue(r2_3);
    /*
    timerect.visible = true
    }
    */
    // line 1939  "qml/hmimain.qml"
    r2_9 = &self->timerect;
    r16_4 = r2_9;
    r2_3 = true;
    r16_4->visible.setValue(r2_3);
    label_14:;
    // }
    // line 1941  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onDeviceInfoChanged_bindingFunctor::operator()(int mswversion, int mhwversion, int mslnum) const
{
    QUL_DECL_UNUSED slnumtxt_Text * r13 = NULL;
    int r13_1;
    QUL_DECL_UNUSED Qul::Private::String r13_2;
    int r10;
    QUL_DECL_UNUSED deviceinfotimer_Timer * r10_2 = NULL;
    QUL_DECL_UNUSED Qul::Private::String r10_1;
    int r12;
    QUL_DECL_UNUSED slnumtxt_Text * r12_3 = NULL;
    Qul::qreal r12_1;
    QUL_DECL_UNUSED Qul::Private::String r12_2;
    int r2_2;
    bool r2_3;
    QUL_DECL_UNUSED slnumtxt_Text * r2_4 = NULL;
    QUL_DECL_UNUSED deviceinfotimer_Timer * r2_5 = NULL;
    QUL_DECL_UNUSED Qul::Private::String r2;
    Qul::qreal r2_1;
    int r11;
    QUL_DECL_UNUSED slnumtxt_Text * r11_1 = NULL;
    QUL_DECL_UNUSED slnumtxt_Text * r14_1 = NULL;
    QUL_DECL_UNUSED Qul::Private::String r14;
    int r15_1;
    QUL_DECL_UNUSED Qul::Private::String r15;
    QUL_UNUSED(mslnum);
    QUL_UNUSED(mhwversion);
    QUL_UNUSED(mswversion);
    /*
    if(mslnum <10)
    {
    */
    // line 1825  "qml/hmimain.qml"
    r10 = mslnum;
    r2_2 = 10;
    r2_3 = r10 < r2_2;
    if (!r2_3) {
    goto label_0;};
    /*
    slnumtxt.text  = qsTr("OM7NT1L0000")+mslnum.toString()
    }
    */
    // line 1827  "qml/hmimain.qml"
    r2_4 = &self->slnumtxt;
    r11_1 = r2_4;
    r2 = Qul::Private::String(Qul::Private::Latin1String("OM7NT1L0000", 11));
    r14 = r2;
    r2 = qul_translation(28);
    r12_2 = r2;
    r2 = Qul::Private::Builtins::Number(mslnum).toString();
    r2 = r12_2 + r2;
    r11_1->text.setValue(r2);
    {
    goto label_1;};
    {
    }
    label_0:;
    /*
    else if(mslnum <100)
    {
    */
    // line 1829  "qml/hmimain.qml"
    r11 = mslnum;
    r2_2 = 100;
    r2_3 = r11 < r2_2;
    if (!r2_3) {
    goto label_2;};
    /*
    slnumtxt.text  = qsTr("OM7NT1L000")+mslnum.toString()
    }
    */
    // line 1831  "qml/hmimain.qml"
    r2_4 = &self->slnumtxt;
    r12_3 = r2_4;
    r2 = Qul::Private::String(Qul::Private::Latin1String("OM7NT1L000", 10));
    r15 = r2;
    r2 = qul_translation(29);
    r13_2 = r2;
    r2 = Qul::Private::Builtins::Number(mslnum).toString();
    r2 = r13_2 + r2;
    r12_3->text.setValue(r2);
    {
    goto label_1;};
    {
    }
    label_2:;
    /*
    else if(mslnum <1000)
    {
    */
    // line 1833  "qml/hmimain.qml"
    r12 = mslnum;
    r2_2 = 1000;
    r2_3 = r12 < r2_2;
    if (!r2_3) {
    goto label_3;};
    /*
    slnumtxt.text  = qsTr("OM7NT1L00")+mslnum.toString()
    }
    */
    // line 1835  "qml/hmimain.qml"
    r2_4 = &self->slnumtxt;
    r13 = r2_4;
    r2 = Qul::Private::String(Qul::Private::Latin1String("OM7NT1L00", 9));
    r2 = qul_translation(30);
    r14 = r2;
    r2 = Qul::Private::Builtins::Number(mslnum).toString();
    r2 = r14 + r2;
    r13->text.setValue(r2);
    {
    goto label_1;};
    {
    }
    label_3:;
    /*
    else if(mslnum <10000)
    {
    */
    // line 1837  "qml/hmimain.qml"
    r13_1 = mslnum;
    r2_2 = 10000;
    r2_3 = r13_1 < r2_2;
    if (!r2_3) {
    goto label_4;};
    /*
    slnumtxt.text  = qsTr("OM7NT1L0")+mslnum.toString()
    }
    else
    {
    */
    // line 1839  "qml/hmimain.qml"
    r2_4 = &self->slnumtxt;
    r14_1 = r2_4;
    r2 = Qul::Private::String(Qul::Private::Latin1String("OM7NT1L0", 8));
    r2 = qul_translation(31);
    r15 = r2;
    r2 = Qul::Private::Builtins::Number(mslnum).toString();
    r2 = r15 + r2;
    r14_1->text.setValue(r2);
    {
    goto label_1;};
    {
    }
    label_4:;
    /*
    slnumtxt.text  = qsTr("OM7NT1L")+mslnum.toString()
    }
    
    */
    // line 1843  "qml/hmimain.qml"
    r2_4 = &self->slnumtxt;
    r14_1 = r2_4;
    r2 = Qul::Private::String(Qul::Private::Latin1String("OM7NT1L", 7));
    r2 = qul_translation(32);
    r15 = r2;
    r2 = Qul::Private::Builtins::Number(mslnum).toString();
    r2 = r15 + r2;
    r14_1->text.setValue(r2);
    {
    }
    label_1:;
    // rhwvermsg=  ((1.0*mhwversion)/100).toFixed(2)
    // line 1846  "qml/hmimain.qml"
    r10 = 1;
    r2_2 = mhwversion;
    r2_2 = r10 * r2_2;
    r11 = r2_2;
    r2_2 = 100;
    r2_1 = Qul::qreal(r11) / r2_2;
    r12_1 = r2_1;
    r15_1 = 2;
    r2 = Qul::Private::Builtins::Number(r12_1).toFixed(r15_1);
    self->rhwvermsg.setValue(r2);
    /*
    rswvermsg =  ((1.0*mswversion)/100).toFixed(2)
    
    */
    // line 1847  "qml/hmimain.qml"
    r10 = 1;
    r2_2 = mswversion;
    r2_2 = r10 * r2_2;
    r11 = r2_2;
    r2_2 = 100;
    r2_1 = Qul::qreal(r11) / r2_2;
    r12_1 = r2_1;
    r15_1 = 2;
    r2 = Qul::Private::Builtins::Number(r12_1).toFixed(r15_1);
    self->rswvermsg.setValue(r2);
    // shwvermsg = qsTr("Xavion_V")+rhwvermsg
    // line 1849  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("Xavion_V", 8));
    r12_2 = r2;
    r2 = qul_translation(33);
    r10_1 = r2;
    r2 = self->rhwvermsg.value();
    r2 = r10_1 + r2;
    self->shwvermsg.setValue(r2);
    /*
    sswvermsg = qsTr("Xavion_V")+rswvermsg
    
    */
    // line 1850  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("Xavion_V", 8));
    r12_2 = r2;
    r2 = qul_translation(33);
    r10_1 = r2;
    r2 = self->rswvermsg.value();
    r2 = r10_1 + r2;
    self->sswvermsg.setValue(r2);
    // bdeviceinfo = true
    // line 1852  "qml/hmimain.qml"
    r2_3 = true;
    self->bdeviceinfo.setValue(r2_3);
    /*
    deviceinfotimer.start()
    
    */
    // line 1853  "qml/hmimain.qml"
    r2_5 = &self->deviceinfotimer;
    r10_2 = r2_5;
    r10_2->start();
    // }
    // line 1855  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onAlertInfoChanged_bindingFunctor::operator()(int mid, int mcode) const
{
    int r9;
    bool r2;
    int r2_1;
    QUL_DECL_UNUSED Qul::Private::String r2_2;
    QUL_DECL_UNUSED triptimer_Timer * r2_3 = NULL;
    bool r10;
    QUL_DECL_UNUSED triptimer_Timer * r10_1 = NULL;
    QUL_UNUSED(mcode);
    QUL_UNUSED(mid);
    // btripreset = false
    // line 1724  "qml/hmimain.qml"
    r2 = false;
    self->btripreset.setValue(r2);
    /*
    switch(mid)
    {
    case 0x100:
    */
    // line 1725  "qml/hmimain.qml"
    r9 = mid;
    r2_1 = 256;
    r2 = r9 == r2_1;
    if (r2) goto label_0;;
    r2_1 = 257;
    r2 = r9 == r2_1;
    if (r2) goto label_1;;
    r2_1 = 258;
    r2 = r9 == r2_1;
    if (r2) goto label_2;;
    r2_1 = 259;
    r2 = r9 == r2_1;
    if (r2) {
    goto label_3;};
    {
    goto label_4;};
    label_0:;
    /*
    if(mcode == 0x01)
    {
    */
    // line 1728  "qml/hmimain.qml"
    r2_1 = mcode;
    r2 = Qul::Private::testEqual(1, r2_1);
    if (!r2) goto label_5;;
    // smessage = stxtmesNoCanData
    // line 1730  "qml/hmimain.qml"
    r2_2 = self->stxtmesNoCanData.value();
    self->smessage.setValue(r2_2);
    /*
    bwarning = true
    }
    */
    // line 1731  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    goto label_6;;
    label_5:;
    /*
    else if (mcode == 0x02)
    {
    */
    // line 1733  "qml/hmimain.qml"
    r2_1 = mcode;
    r2 = Qul::Private::testEqual(2, r2_1);
    if (!r2) goto label_7;;
    // smessage = stxtmesCanError
    // line 1735  "qml/hmimain.qml"
    r2_2 = self->stxtmesCanError.value();
    self->smessage.setValue(r2_2);
    /*
    bwarning = true
    }
    else
    {
    */
    // line 1736  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    goto label_6;;
    label_7:;
    /*
    bwarning = false
    }
    
    */
    // line 1740  "qml/hmimain.qml"
    r2 = false;
    self->bwarning.setValue(r2);
    label_6:;
    /*
    break
    case 0x101:
    */
    // line 1743  "qml/hmimain.qml"
    goto label_8;;
    label_1:;
    /*
    if(mcode == 0x01)
    {
    */
    // line 1745  "qml/hmimain.qml"
    r2_1 = mcode;
    r2 = Qul::Private::testEqual(1, r2_1);
    if (!r2) goto label_9;;
    // smessage = stxtmesRtcSetError
    // line 1747  "qml/hmimain.qml"
    r2_2 = self->stxtmesRtcSetError.value();
    self->smessage.setValue(r2_2);
    /*
    bwarning = true
    }
    */
    // line 1748  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    goto label_10;;
    label_9:;
    /*
    else if(mcode == 0x02)
    {
    */
    // line 1750  "qml/hmimain.qml"
    r2_1 = mcode;
    r2 = Qul::Private::testEqual(2, r2_1);
    if (!r2) goto label_11;;
    // smessage = stxtmesRtcError
    // line 1752  "qml/hmimain.qml"
    r2_2 = self->stxtmesRtcError.value();
    self->smessage.setValue(r2_2);
    /*
    bwarning = true
    }
    else
    {
    */
    // line 1753  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    goto label_10;;
    label_11:;
    /*
    bwarning = false
    }
    
    */
    // line 1757  "qml/hmimain.qml"
    r2 = false;
    self->bwarning.setValue(r2);
    label_10:;
    /*
    break
    case 0x102:
    {
    
    */
    // line 1760  "qml/hmimain.qml"
    goto label_8;;
    label_2:;
    /*
    if(benablefault == true)
    {
    */
    // line 1764  "qml/hmimain.qml"
    r2 = self->benablefault.value();
    r10 = r2;
    r2 = true;
    r2 = Qul::Private::testEqual(r10, r2);
    if (!r2) goto label_12;;
    /*
    if(mcode >0)
    {
    */
    // line 1766  "qml/hmimain.qml"
    r2_1 = 0;
    r2 = mcode > r2_1;
    if (!r2) goto label_12;;
    // benablefault = 0;
    // line 1768  "qml/hmimain.qml"
    r2_1 = 0;
    self->benablefault.setValue(r2_1);
    /*
    iscreen = (bchargerStatus ==1)?1:0
    }
    }
    */
    // line 1769  "qml/hmimain.qml"
    r2 = self->bchargerStatus.value();
    r2 = Qul::Private::testEqual(1, r2);
    if (!r2) goto label_13;;
    r2_1 = 1;
    goto label_14;;
    label_13:;
    r2_1 = 0;
    label_14:;
    self->iscreen.setValue(r2_1);
    label_12:;
    /*
    switch(mcode)
    {
    case 0x0:
    */
    // line 1772  "qml/hmimain.qml"
    r2_1 = 0;
    r2 = mcode == r2_1;
    if (r2) goto label_15;;
    r2_1 = 1;
    r2 = mcode == r2_1;
    if (r2) goto label_16;;
    r2_1 = 2;
    r2 = mcode == r2_1;
    if (r2) {
    goto label_17;};
    r2_1 = 3;
    r2 = mcode == r2_1;
    if (r2) {
    goto label_18;};
    r2_1 = 4;
    r2 = mcode == r2_1;
    if (r2) {
    goto label_19;};
    r2_1 = 5;
    r2 = mcode == r2_1;
    if (r2) {
    goto label_20;};
    r2_1 = 6;
    r2 = mcode == r2_1;
    if (r2) {
    goto label_21;};
    r2_1 = 7;
    r2 = mcode == r2_1;
    if (r2) {
    goto label_22;};
    {
    goto label_23;};
    label_15:;
    // bwarning = false
    // line 1775  "qml/hmimain.qml"
    r2 = false;
    self->bwarning.setValue(r2);
    /*
    break
    case 0x01:
    */
    // line 1776  "qml/hmimain.qml"
    {
    goto label_23;};
    label_16:;
    // smessage = qsTr("Left button is stuck")
    // line 1778  "qml/hmimain.qml"
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("Left button is stuck", 20));
    r2_2 = qul_translation(21);
    self->smessage.setValue(r2_2);
    // bwarning = true
    // line 1779  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    /*
    break
    case 0x2:
    */
    // line 1780  "qml/hmimain.qml"
    {
    goto label_23;};
    {
    }
    label_17:;
    // smessage = qsTr("OK button is stuck")
    // line 1782  "qml/hmimain.qml"
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("OK button is stuck", 18));
    r2_2 = qul_translation(22);
    self->smessage.setValue(r2_2);
    // bwarning = true
    // line 1783  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    /*
    break
    case 0x3:
    */
    // line 1784  "qml/hmimain.qml"
    {
    goto label_23;};
    {
    }
    label_18:;
    // smessage = qsTr("OK and Left buttons are stuck")
    // line 1786  "qml/hmimain.qml"
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("OK and Left buttons are stuck", 29));
    r2_2 = qul_translation(23);
    self->smessage.setValue(r2_2);
    // bwarning = true
    // line 1787  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    /*
    break
    case 0x4:
    */
    // line 1788  "qml/hmimain.qml"
    {
    goto label_23;};
    {
    }
    label_19:;
    // smessage = qsTr("Right button is stuck")
    // line 1790  "qml/hmimain.qml"
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("Right button is stuck", 21));
    r2_2 = qul_translation(24);
    self->smessage.setValue(r2_2);
    // bwarning = true
    // line 1791  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    /*
    break
    case 0x5:
    */
    // line 1792  "qml/hmimain.qml"
    {
    goto label_23;};
    {
    }
    label_20:;
    // smessage = qsTr("Right and left buttons are stuck")
    // line 1794  "qml/hmimain.qml"
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("Right and left buttons are stuck", 32));
    r2_2 = qul_translation(25);
    self->smessage.setValue(r2_2);
    // bwarning = true
    // line 1795  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    /*
    break
    case 0x6:
    */
    // line 1796  "qml/hmimain.qml"
    {
    goto label_23;};
    {
    }
    label_21:;
    // smessage = qsTr("OK and Right buttons are stuck")
    // line 1798  "qml/hmimain.qml"
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("OK and Right buttons are stuck", 30));
    r2_2 = qul_translation(26);
    self->smessage.setValue(r2_2);
    // bwarning = true
    // line 1799  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    /*
    break
    case 0x7:
    */
    // line 1800  "qml/hmimain.qml"
    {
    goto label_23;};
    {
    }
    label_22:;
    // smessage = qsTr("All buttons are stuck")
    // line 1802  "qml/hmimain.qml"
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("All buttons are stuck", 21));
    r2_2 = qul_translation(27);
    self->smessage.setValue(r2_2);
    // bwarning = true
    // line 1803  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    /*
    break
    }
    }
    */
    // line 1804  "qml/hmimain.qml"
    {
    };
    {
    }
    label_23:;
    /*
    break
    case 0x103:
    */
    // line 1807  "qml/hmimain.qml"
    goto label_8;;
    {
    }
    label_3:;
    // smessage = stxtmestripResetSuccess
    // line 1809  "qml/hmimain.qml"
    r2_2 = self->stxtmestripResetSuccess.value();
    self->smessage.setValue(r2_2);
    // bwarning = true
    // line 1810  "qml/hmimain.qml"
    r2 = true;
    self->bwarning.setValue(r2);
    // btripreset = true
    // line 1811  "qml/hmimain.qml"
    r2 = true;
    self->btripreset.setValue(r2);
    // triptimer.start()
    // line 1812  "qml/hmimain.qml"
    r2_3 = &self->triptimer;
    r10_1 = r2_3;
    r10_1->start();
    /*
    break
    
    default:
    */
    // line 1813  "qml/hmimain.qml"
    goto label_8;;
    {
    }
    label_4:;
    /*
    bwarning = false
    //					smessage =qsTr(" ")
    */
    // line 1816  "qml/hmimain.qml"
    r2 = false;
    self->bwarning.setValue(r2);
    /*
    break;
    }
    */
    // line 1818  "qml/hmimain.qml"
    ;
    label_8:;
    // }
    // line 1820  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onDriveModeChanged_bindingFunctor::operator()(int mdrivemode, int mgearmode) const
{
    int r9;
    int r2;
    bool r2_1;
    QUL_DECL_UNUSED drivemode_Text * r2_3 = NULL;
    QUL_DECL_UNUSED Qul::Private::String r2_2;
    int r10;
    QUL_DECL_UNUSED drivemode_Text * r11 = NULL;
    QUL_UNUSED(mgearmode);
    QUL_UNUSED(mdrivemode);
    /*
    if(iGearMode  != mgearmode)
    {
    */
    // line 1698  "qml/hmimain.qml"
    r2 = self->iGearMode.value();
    r9 = r2;
    r2 = mgearmode;
    r2_1 = !Qul::Private::testEqual(r9, r2);
    if (!r2_1) goto label_0;;
    /*
    if((mgearmode > 0)  && (mgearmode <4))
    {
    */
    // line 1700  "qml/hmimain.qml"
    r2 = 0;
    r2_1 = mgearmode > r2;
    if (!r2_1) goto label_0;;
    r2 = 4;
    r2_1 = mgearmode < r2;
    if (!r2_1) goto label_0;;
    /*
    iGearMode  = mgearmode
    }
    }
    
    */
    // line 1702  "qml/hmimain.qml"
    r2 = mgearmode;
    self->iGearMode.setValue(r2);
    label_0:;
    /*
    if(iDriveMode != mdrivemode)
    {
    */
    // line 1706  "qml/hmimain.qml"
    r2 = self->iDriveMode.value();
    r9 = r2;
    r2 = mdrivemode;
    r2_1 = !Qul::Private::testEqual(r9, r2);
    if (!r2_1) {
    goto label_1;};
    /*
    iDriveMode = mdrivemode
    
    */
    // line 1708  "qml/hmimain.qml"
    r2 = mdrivemode;
    self->iDriveMode.setValue(r2);
    /*
    if (iDriveMode === 1)
    {
    */
    // line 1710  "qml/hmimain.qml"
    r2 = self->iDriveMode.value();
    r10 = r2;
    r2 = 1;
    r2_1 = r10 == r2;
    if (!r2_1) {
    goto label_2;};
    /*
    drivemode.text  = qsTr("BOOST")
    }
    else
    {
    */
    // line 1712  "qml/hmimain.qml"
    r2_3 = &self->drivemode;
    r11 = r2_3;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("BOOST", 5));
    r2_2 = qul_translation(20);
    r11->text.setValue(r2_2);
    {
    goto label_1;};
    {
    }
    label_2:;
    /*
    drivemode.text  = qsTr("ECO")
    }
    }
    */
    // line 1716  "qml/hmimain.qml"
    r2_3 = &self->drivemode;
    r11 = r2_3;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("ECO", 3));
    r2_2 = qul_translation(5);
    r11->text.setValue(r2_2);
    {
    }
    label_1:;
    // }
    // line 1719  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onHwStatusChanged_bindingFunctor::operator()(bool mleftind, bool mrightind, bool mhighbeam, bool mlowbeam, bool mhazard, bool mbrakefailed, bool msafetybelt, bool mhandbrake, bool mfoglight) const
{
    bool r2;
    bool r16;
    QUL_UNUSED(mfoglight);
    QUL_UNUSED(mhandbrake);
    QUL_UNUSED(msafetybelt);
    QUL_UNUSED(mbrakefailed);
    QUL_UNUSED(mhazard);
    QUL_UNUSED(mlowbeam);
    QUL_UNUSED(mhighbeam);
    QUL_UNUSED(mrightind);
    QUL_UNUSED(mleftind);
    /*
    if(bHighBeam != mhighbeam)
    {
    */
    // line 1650  "qml/hmimain.qml"
    r2 = self->bHighBeam.value();
    r16 = r2;
    r2 = mhighbeam;
    r2 = !Qul::Private::testEqual(r16, r2);
    if (!r2) goto label_0;;
    /*
    bHighBeam = mhighbeam
    }
    
    */
    // line 1652  "qml/hmimain.qml"
    r2 = mhighbeam;
    self->bHighBeam.setValue(r2);
    label_0:;
    /*
    if(bLowBeam  != mlowbeam)
    {
    */
    // line 1655  "qml/hmimain.qml"
    r2 = self->bLowBeam.value();
    r16 = r2;
    r2 = mlowbeam;
    r2 = !Qul::Private::testEqual(r16, r2);
    if (!r2) goto label_1;;
    /*
    bLowBeam  = mlowbeam
    }
    
    */
    // line 1657  "qml/hmimain.qml"
    r2 = mlowbeam;
    self->bLowBeam.setValue(r2);
    label_1:;
    /*
    if(bLeftInd  != mleftind)
    {
    */
    // line 1660  "qml/hmimain.qml"
    r2 = self->bLeftInd.value();
    r16 = r2;
    r2 = mleftind;
    r2 = !Qul::Private::testEqual(r16, r2);
    if (!r2) goto label_2;;
    /*
    bLeftInd  = mleftind
    }
    
    */
    // line 1662  "qml/hmimain.qml"
    r2 = mleftind;
    self->bLeftInd.setValue(r2);
    label_2:;
    /*
    if(bRightInd != mrightind)
    {
    */
    // line 1665  "qml/hmimain.qml"
    r2 = self->bRightInd.value();
    r16 = r2;
    r2 = mrightind;
    r2 = !Qul::Private::testEqual(r16, r2);
    if (!r2) goto label_3;;
    /*
    bRightInd = mrightind
    }
    
    */
    // line 1667  "qml/hmimain.qml"
    r2 = mrightind;
    self->bRightInd.setValue(r2);
    label_3:;
    /*
    if(bHazard	!= mhazard)
    {
    */
    // line 1670  "qml/hmimain.qml"
    r2 = self->bHazard.value();
    r16 = r2;
    r2 = mhazard;
    r2 = !Qul::Private::testEqual(r16, r2);
    if (!r2) goto label_4;;
    /*
    bHazard	  = mhazard
    }
    
    */
    // line 1672  "qml/hmimain.qml"
    r2 = mhazard;
    self->bHazard.setValue(r2);
    label_4:;
    /*
    if(bSafetyBelt != msafetybelt)
    {
    */
    // line 1675  "qml/hmimain.qml"
    r2 = self->bSafetyBelt.value();
    r16 = r2;
    r2 = msafetybelt;
    r2 = !Qul::Private::testEqual(r16, r2);
    if (!r2) goto label_5;;
    /*
    bSafetyBelt =msafetybelt
    }
    
    */
    // line 1677  "qml/hmimain.qml"
    r2 = msafetybelt;
    self->bSafetyBelt.setValue(r2);
    label_5:;
    /*
    if(bHandBrake != mhandbrake)
    {
    */
    // line 1680  "qml/hmimain.qml"
    r2 = self->bHandBrake.value();
    r16 = r2;
    r2 = mhandbrake;
    r2 = !Qul::Private::testEqual(r16, r2);
    if (!r2) goto label_6;;
    /*
    bHandBrake = mhandbrake
    }
    
    */
    // line 1682  "qml/hmimain.qml"
    r2 = mhandbrake;
    self->bHandBrake.setValue(r2);
    label_6:;
    /*
    if(bBrakeFailed != mbrakefailed)
    {
    */
    // line 1685  "qml/hmimain.qml"
    r2 = self->bBrakeFailed.value();
    r16 = r2;
    r2 = mbrakefailed;
    r2 = !Qul::Private::testEqual(r16, r2);
    if (!r2) goto label_7;;
    /*
    bBrakeFailed = mbrakefailed
    }
    
    */
    // line 1687  "qml/hmimain.qml"
    r2 = mbrakefailed;
    self->bBrakeFailed.setValue(r2);
    label_7:;
    /*
    if(bFoglight != mfoglight)
    {
    */
    // line 1690  "qml/hmimain.qml"
    r2 = self->bFoglight.value();
    r16 = r2;
    r2 = mfoglight;
    r2 = !Qul::Private::testEqual(r16, r2);
    if (!r2) goto label_8;;
    /*
    bFoglight = mfoglight
    }
    */
    // line 1692  "qml/hmimain.qml"
    r2 = mfoglight;
    self->bFoglight.setValue(r2);
    label_8:;
    // }
    // line 1694  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onChargerInfoChanged_bindingFunctor::operator()(bool mtype, bool mstatus, bool mgunlock, int mctime) const
{
    bool r2;
    int r2_1;
    QUL_DECL_UNUSED ttcharge_Text * r2_4 = NULL;
    QUL_DECL_UNUSED Qul::Private::String r2_2;
    Qul::qreal r2_5;
    QUL_DECL_UNUSED batcharging_Text * r2_3 = NULL;
    QUL_DECL_UNUSED ttcharge_Text * r12_1 = NULL;
    QUL_DECL_UNUSED batcharging_Text * r12 = NULL;
    int r15_1;
    QUL_DECL_UNUSED Qul::Private::String r15;
    int r11;
    bool r11_1;
    QUL_DECL_UNUSED Qul::Private::String r14;
    int r13_1;
    QUL_DECL_UNUSED Qul::Private::String r13;
    QUL_UNUSED(mctime);
    QUL_UNUSED(mgunlock);
    QUL_UNUSED(mstatus);
    QUL_UNUSED(mtype);
    /*
    if(bchargerStatus !=  mstatus)
    {
    */
    // line 1611  "qml/hmimain.qml"
    r2 = self->bchargerStatus.value();
    r11_1 = r2;
    r2 = mstatus;
    r2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2) goto label_0;;
    // bchargerStatus =  mstatus
    // line 1613  "qml/hmimain.qml"
    r2 = mstatus;
    self->bchargerStatus.setValue(r2);
    /*
    if(bchargerStatus == 1)
    {
    */
    // line 1614  "qml/hmimain.qml"
    r2 = self->bchargerStatus.value();
    r2 = Qul::Private::testEqual(1, r2);
    if (!r2) goto label_1;;
    /*
    iscreen = 1
    }
    else
    {
    */
    // line 1616  "qml/hmimain.qml"
    r2_1 = 1;
    self->iscreen.setValue(r2_1);
    goto label_0;;
    label_1:;
    /*
    iscreen = (benablefault ==1)?2:0
    }
    }
    
    */
    // line 1620  "qml/hmimain.qml"
    r2 = self->benablefault.value();
    r2 = Qul::Private::testEqual(1, r2);
    if (!r2) goto label_2;;
    r2_1 = 2;
    goto label_3;;
    label_2:;
    r2_1 = 0;
    label_3:;
    self->iscreen.setValue(r2_1);
    label_0:;
    /*
    if(bGunlock != mgunlock)
    {
    */
    // line 1624  "qml/hmimain.qml"
    r2 = self->bGunlock.value();
    r11_1 = r2;
    r2 = mgunlock;
    r2 = !Qul::Private::testEqual(r11_1, r2);
    if (!r2) goto label_4;;
    /*
    bGunlock = mgunlock
    }
    
    */
    // line 1626  "qml/hmimain.qml"
    r2 = mgunlock;
    self->bGunlock.setValue(r2);
    label_4:;
    /*
    if(mtype == false)
    {
    */
    // line 1629  "qml/hmimain.qml"
    r11_1 = mtype;
    r2 = false;
    r2 = Qul::Private::testEqual(r11_1, r2);
    if (!r2) {
    goto label_5;};
    /*
    batcharging.text = qsTr("Charging : AC")
    }
    else
    {
    */
    // line 1631  "qml/hmimain.qml"
    r2_3 = &self->batcharging;
    r12 = r2_3;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("Charging : AC", 13));
    r15 = r2_2;
    r2_2 = qul_translation(4);
    r12->text.setValue(r2_2);
    goto label_6;;
    {
    }
    label_5:;
    /*
    batcharging.text = qsTr("Charging : DC")
    }
    
    */
    // line 1635  "qml/hmimain.qml"
    r2_3 = &self->batcharging;
    r12 = r2_3;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("Charging : DC", 13));
    r15 = r2_2;
    r2_2 = qul_translation(17);
    r12->text.setValue(r2_2);
    label_6:;
    /*
    if(mctime != ichargeTime)
    {
    */
    // line 1638  "qml/hmimain.qml"
    r11 = mctime;
    r2_1 = self->ichargeTime.value();
    r2 = !Qul::Private::testEqual(r11, r2_1);
    if (!r2) {
    goto label_7;};
    // ichargeTime = mctime;
    // line 1640  "qml/hmimain.qml"
    r2_1 = mctime;
    self->ichargeTime.setValue(r2_1);
    // ichargehrs  = mctime/60
    // line 1641  "qml/hmimain.qml"
    r2_1 = 60;
    r2_5 = Qul::qreal(mctime) / r2_1;
    self->ichargehrs.setValue(int(r2_5));
    // ichargemin  = mctime%60
    // line 1642  "qml/hmimain.qml"
    r2_1 = 60;
    r2_1 = int(mctime) % r2_1;
    self->ichargemin.setValue(r2_1);
    /*
    ttcharge.text = ichargehrs.toString()+qsTr("h ")+ichargemin.toString()+qsTr("min")
    }
    */
    // line 1643  "qml/hmimain.qml"
    r2_4 = &self->ttcharge;
    r12_1 = r2_4;
    r2_1 = self->ichargehrs.value();
    r13_1 = r2_1;
    r2_2 = Qul::Private::Builtins::Number(r13_1).toString();
    r13 = r2_2;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("h ", 2));
    r2_2 = qul_translation(18);
    r2_2 = r13 + r2_2;
    r14 = r2_2;
    r2_1 = self->ichargemin.value();
    r15_1 = r2_1;
    r2_2 = Qul::Private::Builtins::Number(r15_1).toString();
    r2_2 = r14 + r2_2;
    r15 = r2_2;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("min", 3));
    r2_2 = qul_translation(19);
    r2_2 = r15 + r2_2;
    r12_1->text.setValue(r2_2);
    {
    }
    label_7:;
    // }
    // line 1645  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onStatusInfoChanged_bindingFunctor::operator()(bool mbatfault, bool mbatmalfunc, bool mptfault, bool mptmalfunc, bool mhvil, bool mcoolent) const
{
    bool r2;
    bool r13;
    QUL_UNUSED(mcoolent);
    QUL_UNUSED(mhvil);
    QUL_UNUSED(mptmalfunc);
    QUL_UNUSED(mptfault);
    QUL_UNUSED(mbatmalfunc);
    QUL_UNUSED(mbatfault);
    /*
    if(bBatfault !=  mbatfault)
    {
    */
    // line 1577  "qml/hmimain.qml"
    r2 = self->bBatfault.value();
    r13 = r2;
    r2 = mbatfault;
    r2 = !Qul::Private::testEqual(r13, r2);
    if (!r2) goto label_0;;
    /*
    bBatfault =  mbatfault
    }
    
    */
    // line 1579  "qml/hmimain.qml"
    r2 = mbatfault;
    self->bBatfault.setValue(r2);
    label_0:;
    /*
    if(bBatMalfunc != mbatmalfunc)
    {
    */
    // line 1582  "qml/hmimain.qml"
    r2 = self->bBatMalfunc.value();
    r13 = r2;
    r2 = mbatmalfunc;
    r2 = !Qul::Private::testEqual(r13, r2);
    if (!r2) goto label_1;;
    /*
    bBatMalfunc = mbatmalfunc
    }
    
    */
    // line 1584  "qml/hmimain.qml"
    r2 = mbatmalfunc;
    self->bBatMalfunc.setValue(r2);
    label_1:;
    /*
    if( bMotorfault !=  mptfault)
    {
    */
    // line 1587  "qml/hmimain.qml"
    r2 = self->bMotorfault.value();
    r13 = r2;
    r2 = mptfault;
    r2 = !Qul::Private::testEqual(r13, r2);
    if (!r2) goto label_2;;
    /*
    bMotorfault =  mptfault
    }
    
    */
    // line 1589  "qml/hmimain.qml"
    r2 = mptfault;
    self->bMotorfault.setValue(r2);
    label_2:;
    /*
    if(bMotorMalfunc != mptmalfunc)
    {
    */
    // line 1592  "qml/hmimain.qml"
    r2 = self->bMotorMalfunc.value();
    r13 = r2;
    r2 = mptmalfunc;
    r2 = !Qul::Private::testEqual(r13, r2);
    if (!r2) goto label_3;;
    /*
    bMotorMalfunc = mptmalfunc
    }
    
    */
    // line 1594  "qml/hmimain.qml"
    r2 = mptmalfunc;
    self->bMotorMalfunc.setValue(r2);
    label_3:;
    /*
    if(bHvil !=  mhvil)
    {
    */
    // line 1597  "qml/hmimain.qml"
    r2 = self->bHvil.value();
    r13 = r2;
    r2 = mhvil;
    r2 = !Qul::Private::testEqual(r13, r2);
    if (!r2) goto label_4;;
    /*
    bHvil =  mhvil
    }
    
    */
    // line 1599  "qml/hmimain.qml"
    r2 = mhvil;
    self->bHvil.setValue(r2);
    label_4:;
    /*
    if(bCoolent != mcoolent)
    {
    */
    // line 1602  "qml/hmimain.qml"
    r2 = self->bCoolent.value();
    r13 = r2;
    r2 = mcoolent;
    r2 = !Qul::Private::testEqual(r13, r2);
    if (!r2) goto label_5;;
    /*
    bCoolent = mcoolent
    }
    */
    // line 1604  "qml/hmimain.qml"
    r2 = mcoolent;
    self->bCoolent.setValue(r2);
    label_5:;
    // }
    // line 1606  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onBattInfoChanged_bindingFunctor::operator()(int msoc, int mbattemp) const
{
    int r9;
    int r2;
    bool r2_1;
    Qul::qreal r2_2;
    int r10;
    int r11;
    QUL_UNUSED(mbattemp);
    QUL_UNUSED(msoc);
    /*
    if(icursoc != msoc)
    {
    */
    // line 1560  "qml/hmimain.qml"
    r2 = self->icursoc.value();
    r9 = r2;
    r2 = msoc;
    r2_1 = !Qul::Private::testEqual(r9, r2);
    if (!r2_1) {
    goto label_0;};
    /*
    if(msoc < 101)
    {
    */
    // line 1562  "qml/hmimain.qml"
    r2 = 101;
    r2_1 = msoc < r2;
    if (!r2_1) {
    goto label_0;};
    // icursoc = msoc
    // line 1564  "qml/hmimain.qml"
    r2 = msoc;
    self->icursoc.setValue(r2);
    // iSocval = msoc
    // line 1565  "qml/hmimain.qml"
    r2 = msoc;
    self->iSocval.setValue(r2);
    /*
    socAniVal = (iSocval*36)/10
    }
    }
    */
    // line 1566  "qml/hmimain.qml"
    r2 = self->iSocval.value();
    r10 = r2;
    r2 = 36;
    r2 = r10 * r2;
    r11 = r2;
    r2 = 10;
    r2_2 = Qul::qreal(r11) / r2;
    self->socAniVal.setValue(int(r2_2));
    {
    }
    label_0:;
    /*
    if(battempval != mbattemp)
    {
    */
    // line 1569  "qml/hmimain.qml"
    r2 = self->battempval.value();
    r9 = r2;
    r2 = mbattemp;
    r2_1 = !Qul::Private::testEqual(r9, r2);
    if (!r2_1) goto label_1;;
    /*
    battempval   = mbattemp
    }
    */
    // line 1571  "qml/hmimain.qml"
    r2 = mbattemp;
    self->battempval.setValue(r2);
    label_1:;
    // }
    // line 1573  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onMotorInfoChanged_bindingFunctor::operator()(int mspeed, int mrange, int mtrip, int modo, int mrpm, int mpower, bool mregen) const
{
    int r2;
    bool r2_1;
    int r19;
    int r20;
    int r17;
    int r21;
    bool r22;
    int r18;
    int r16;
    QUL_UNUSED(mregen);
    QUL_UNUSED(mpower);
    QUL_UNUSED(mrpm);
    QUL_UNUSED(modo);
    QUL_UNUSED(mtrip);
    QUL_UNUSED(mrange);
    QUL_UNUSED(mspeed);
    /*
    if(mspeed <200)
    {
    
    */
    // line 1551  "qml/hmimain.qml"
    r2 = 200;
    r2_1 = mspeed < r2;
    if (!r2_1) {
    goto label_0;};
    /*
    updateSpeedInfo(mspeed,mtrip,modo,mrange,mpower,mrpm,mregen)
    }
    */
    // line 1554  "qml/hmimain.qml"
    r16 = mspeed;
    r17 = mtrip;
    r18 = modo;
    r19 = mrange;
    r20 = mpower;
    r21 = mrpm;
    r22 = mregen;
    self->mainscreen.updateSpeedInfo(r16, r17, r18, r19, r20, r21, r22);
    {
    }
    label_0:;
    // }
    // line 1556  "qml/hmimain.qml"
    return ;
    
}
void hmimain::mainscreen__onNavSwitchStatusChanged_bindingFunctor::operator()(int mkey) const
{
    int r9__length;
    QUL_DECL_UNUSED deviceinfotimer_Timer * r9 = NULL;
    bool r2;
    int r2__length;
    QUL_DECL_UNUSED deviceinfotimer_Timer * r2_3 = NULL;
    QUL_DECL_UNUSED Qul::Private::String r2_2;
    QUL_DECL_UNUSED dtcmsg_Text * r2_4 = NULL;
    bool r8;
    QUL_DECL_UNUSED dtcmsg_Text * r10 = NULL;
    QUL_UNUSED(mkey);
    /*
    if(bdeviceinfo == true)
    {
    */
    // line 1509  "qml/hmimain.qml"
    r2 = self->bdeviceinfo.value();
    r8 = r2;
    r2 = true;
    r2 = Qul::Private::testEqual(r8, r2);
    if (!r2) {
    goto label_0;};
    // bdeviceinfo = false
    // line 1511  "qml/hmimain.qml"
    r2 = false;
    self->bdeviceinfo.setValue(r2);
    /*
    deviceinfotimer.stop()
    }
    
    */
    // line 1512  "qml/hmimain.qml"
    r2_3 = &self->deviceinfotimer;
    r9 = r2_3;
    r9->stop();
    {
    }
    label_0:;
    /*
    if(mkey == 4)
    {
    */
    // line 1515  "qml/hmimain.qml"
    r2__length = mkey;
    r2 = Qul::Private::testEqual(4, r2__length);
    if (!r2) goto label_1;;
    /*
    if(benablefault == false)
    {
    */
    // line 1517  "qml/hmimain.qml"
    r2 = self->benablefault.value();
    r8 = r2;
    r2 = false;
    r2 = Qul::Private::testEqual(r8, r2);
    if (!r2) {
    goto label_2;};
    /*
    iFaultCount = sFault.length
    
    */
    // line 1519  "qml/hmimain.qml"
    r2_2 = self->sFault.value();
    r2__length = r2_2.length();
    self->iFaultCount.setValue(r2__length);
    // benablefault = 1;
    // line 1521  "qml/hmimain.qml"
    r2__length = 1;
    self->benablefault.setValue(r2__length);
    /*
    iscreen = 2
    
    */
    // line 1522  "qml/hmimain.qml"
    r2__length = 2;
    self->iscreen.setValue(r2__length);
    /*
    if(sFault.length >0)
    {
    
    */
    // line 1524  "qml/hmimain.qml"
    r2_2 = self->sFault.value();
    r2__length = r2_2.length();
    r9__length = r2__length;
    r2__length = 0;
    r2 = r9__length > r2__length;
    if (!r2) {
    goto label_3;};
    // dtcmsg.text = qsTr("DTC Found")
    // line 1527  "qml/hmimain.qml"
    r2_4 = &self->dtcmsg;
    r10 = r2_4;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("DTC Found", 9));
    r2_2 = qul_translation(16);
    r10->text.setValue(r2_2);
    /*
    sfaultmsg = sFault
    }
    else
    {
    */
    // line 1528  "qml/hmimain.qml"
    r2_2 = self->sFault.value();
    self->sfaultmsg.setValue(r2_2);
    {
    goto label_4;};
    {
    }
    label_3:;
    // dtcmsg.text = qsTr("No Faults")
    // line 1532  "qml/hmimain.qml"
    r2_4 = &self->dtcmsg;
    r10 = r2_4;
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("No Faults", 9));
    r2_2 = qul_translation(15);
    r10->text.setValue(r2_2);
    /*
    sfaultmsg=qsTr("")
    }
    }
    else
    {
    */
    // line 1533  "qml/hmimain.qml"
    r2_2 = Qul::Private::String(Qul::Private::Latin1String("", 0));
    r2_2 = qul_translation(14);
    self->sfaultmsg.setValue(r2_2);
    {
    }
    label_4:;
    goto label_5;;
    {
    }
    label_2:;
    // benablefault = 0;
    // line 1538  "qml/hmimain.qml"
    r2__length = 0;
    self->benablefault.setValue(r2__length);
    /*
    iscreen = (bchargerStatus ==1)?1:0
    }
    */
    // line 1539  "qml/hmimain.qml"
    r2 = self->bchargerStatus.value();
    r2 = Qul::Private::testEqual(1, r2);
    if (!r2) goto label_6;;
    r2__length = 1;
    goto label_7;;
    label_6:;
    r2__length = 0;
    label_7:;
    self->iscreen.setValue(r2__length);
    label_5:;
    /*
    iFaultCount = sFault.length;
    }
    */
    // line 1541  "qml/hmimain.qml"
    r2_2 = self->sFault.value();
    r2__length = r2_2.length();
    self->iFaultCount.setValue(r2__length);
    goto label_8;;
    label_1:;
    /*
    else if(mkey == 2)
    {
    */
    // line 1543  "qml/hmimain.qml"
    r2__length = mkey;
    r2 = Qul::Private::testEqual(2, r2__length);
    if (!r2) goto label_8;;
    /*
    isdarktheme = (isdarktheme ? 0 : 1 )
    }
    */
    // line 1545  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_9;;
    r2__length = 0;
    goto label_10;;
    label_9:;
    r2__length = 1;
    label_10:;
    self->isdarktheme.setValue(r2__length);
    label_8:;
    // }
    // line 1547  "qml/hmimain.qml"
    return ;
    
}
int hmimain::mainscreen_width_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->width.value());
}
int hmimain::mainscreen_height_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->height.value());
}
int hmimain::splashscreen_width_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->mainscreen.width.value());
}
int hmimain::splashscreen_height_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->mainscreen.height.value());
}
int hmimain::splashlogo_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->splashscreen.width.value()) + 1)/2 - ((self->splashlogo.width.value())/2.));
}
int hmimain::splashlogo_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->splashscreen.height.value()) + 1)/2 - ((self->splashlogo.height.value())/2.));
}
int hmimain::splashlogo_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 285  "qml/hmimain.qml"
    r2 = self->splashlogo.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::splashlogo_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 284  "qml/hmimain.qml"
    r2 = self->splashlogo.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::splashlogo_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source: bg_splash
    // line 283  "qml/hmimain.qml"
    r2 = self->bg_splash.value();
    return r2;
    
}
int hmimain::homescreen_width_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->mainscreen.width.value());
}
int hmimain::homescreen_height_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->mainscreen.height.value());
}
int hmimain::bgmain_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 302  "qml/hmimain.qml"
    r2 = self->bgmain.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::bgmain_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 301  "qml/hmimain.qml"
    r2 = self->bgmain.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::bgmain_width_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value());
}
int hmimain::bgmain_height_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value());
}
Qul::SharedImage hmimain::bgmain_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    // source:(isdarktheme)?bg_dark_main:bg_light_main
    // line 299  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->bg_dark_main.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_light_main.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::socring_dark_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    int r2_1;
    // visible:  (isdarktheme)?1:0
    // line 316  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = 1;
    goto label_1;;
    label_0:;
    r2_1 = 0;
    label_1:;
    return r2_1;
    
}
int hmimain::socring_dark_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 315  "qml/hmimain.qml"
    r2 = self->socring_dark.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::socring_dark_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 314  "qml/hmimain.qml"
    r2 = self->socring_dark.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::socring_dark_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->socring_dark.height.value())/2.));
}
Qul::SharedImage hmimain::socring_dark_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source:  (socAniVal > 72)?bg_dark_ring_green:bg_dark_ring_red
    // line 309  "qml/hmimain.qml"
    r2 = self->socAniVal.value();
    r7 = r2;
    r2 = 72;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->bg_dark_ring_green.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_dark_ring_red.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::rangering_dark_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    int r2_1;
    // visible:  (isdarktheme)?1:0
    // line 328  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = 1;
    goto label_1;;
    label_0:;
    r2_1 = 0;
    label_1:;
    return r2_1;
    
}
int hmimain::rangering_dark_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 327  "qml/hmimain.qml"
    r2 = self->rangering_dark.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::rangering_dark_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 326  "qml/hmimain.qml"
    r2 = self->rangering_dark.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::rangering_dark_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (self->rangering_dark.width.value()));
}
int hmimain::rangering_dark_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->rangering_dark.height.value())/2.));
}
Qul::SharedImage hmimain::rangering_dark_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source:  (rangeAniVal > 28)?bg_dark_ring_green:bg_dark_ring_red
    // line 321  "qml/hmimain.qml"
    r2 = self->rangeAniVal.value();
    r7 = r2;
    r2 = 28;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->bg_dark_ring_green.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_dark_ring_red.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::socring_light_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    int r2_1;
    // visible:  (isdarktheme)?0:1
    // line 340  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = 0;
    goto label_1;;
    label_0:;
    r2_1 = 1;
    label_1:;
    return r2_1;
    
}
int hmimain::socring_light_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 339  "qml/hmimain.qml"
    r2 = self->socring_light.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::socring_light_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 338  "qml/hmimain.qml"
    r2 = self->socring_light.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::socring_light_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 + (-2) - ((self->socring_light.height.value())/2.));
}
Qul::SharedImage hmimain::socring_light_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source:  (socAniVal > 72)?bg_light_ring_green:bg_light_ring_red
    // line 333  "qml/hmimain.qml"
    r2 = self->socAniVal.value();
    r7 = r2;
    r2 = 72;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->bg_light_ring_green.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_light_ring_red.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::rangering_light_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    int r2_1;
    // visible:  (isdarktheme)?0:1
    // line 352  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = 0;
    goto label_1;;
    label_0:;
    r2_1 = 1;
    label_1:;
    return r2_1;
    
}
int hmimain::rangering_light_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 351  "qml/hmimain.qml"
    r2 = self->rangering_light.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::rangering_light_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 350  "qml/hmimain.qml"
    r2 = self->rangering_light.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::rangering_light_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (1) - (self->rangering_light.width.value()));
}
int hmimain::rangering_light_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 + (-2) - ((self->rangering_light.height.value())/2.));
}
Qul::SharedImage hmimain::rangering_light_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source:  (rangeAniVal >28)?bg_light_ring_green:bg_light_ring_red
    // line 345  "qml/hmimain.qml"
    r2 = self->rangeAniVal.value();
    r7 = r2;
    r2 = 28;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->bg_light_ring_green.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_light_ring_red.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::hbeam_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bHighBeam
    // line 364  "qml/hmimain.qml"
    r2 = self->bHighBeam.value();
    return r2;
    
}
int hmimain::hbeam_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 363  "qml/hmimain.qml"
    r2 = self->hbeam.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::hbeam_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 362  "qml/hmimain.qml"
    r2 = self->hbeam.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::hbeam_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_highbeam
    // line 357  "qml/hmimain.qml"
    r2 = self->icon_highbeam.value();
    return r2;
    
}
int hmimain::socindicator_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->socindicator.height.value())/2.));
}
int hmimain::leftArcClipper_width_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->socindicator.width.value()) + 1)/2);
}
int hmimain::leftArcClipper_height_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->socindicator.height.value());
}
Qul::qreal hmimain::leftArc_rotation_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2_1;
    Qul::qreal r2_2;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r2 = NULL;
    int r10;
    int r11;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r7 = NULL;
    // rotation: Math.min(180, socAniVal)
    // line 394  "qml/hmimain.qml"
    r2 = &Qul::Private::Builtins::Math ::instance();
    r7 = r2;
    r10 = 180;
    r2_1 = self->socAniVal.value();
    r11 = r2_1;
    r2_2 = r7->min(r10, r11);
    return r2_2;
    
}
Qul::SharedImage hmimain::leftArc_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source: (socAniVal >72)?icon_timebar_green:icon_timebar_red
    // line 393  "qml/hmimain.qml"
    r2 = self->socAniVal.value();
    r7 = r2;
    r2 = 72;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->icon_timebar_green.value();
    goto label_1;;
    label_0:;
    r2_1 = self->icon_timebar_red.value();
    label_1:;
    return r2_1;
    
}
int hmimain::leftArc_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: width
    // line 392  "qml/hmimain.qml"
    r2 = self->leftArc.width.value();
    return r2;
    
}
int hmimain::leftArc_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2__width;
    QUL_DECL_UNUSED socindicator_Item * r2 = NULL;
    // width: socindicator.width
    // line 391  "qml/hmimain.qml"
    r2 = &self->socindicator;
    r2__width = r2->width.value();
    return r2__width;
    
}
int hmimain::rightArcClipper_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->socindicator.width.value()) + 1)/2);
}
int hmimain::rightArcClipper_width_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->socindicator.width.value() - (self->rightArcClipper.x.value()));
}
int hmimain::rightArcClipper_height_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->socindicator.height.value());
}
Qul::qreal hmimain::rightArc_rotation_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2_1;
    Qul::qreal r2_2;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r2 = NULL;
    int r10;
    int r11;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r7 = NULL;
    // rotation: Math.max(180, socAniVal)
    // line 418  "qml/hmimain.qml"
    r2 = &Qul::Private::Builtins::Math ::instance();
    r7 = r2;
    r10 = 180;
    r2_1 = self->socAniVal.value();
    r11 = r2_1;
    r2_2 = r7->max(r10, r11);
    return r2_2;
    
}
Qul::SharedImage hmimain::rightArc_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source: (socAniVal > 72)?icon_timebar_green:icon_timebar_red
    // line 417  "qml/hmimain.qml"
    r2 = self->socAniVal.value();
    r7 = r2;
    r2 = 72;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->icon_timebar_green.value();
    goto label_1;;
    label_0:;
    r2_1 = self->icon_timebar_red.value();
    label_1:;
    return r2_1;
    
}
int hmimain::rightArc_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: width
    // line 416  "qml/hmimain.qml"
    r2 = self->rightArc.width.value();
    return r2;
    
}
int hmimain::rightArc_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2__width;
    QUL_DECL_UNUSED socindicator_Item * r2 = NULL;
    // width: socindicator.width
    // line 415  "qml/hmimain.qml"
    r2 = &self->socindicator;
    r2__width = r2->width.value();
    return r2__width;
    
}
int hmimain::rightArc_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int( - ((self->rightArc.width.value())/2.));
}
int hmimain::rightArc_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->rightArcClipper.height.value()) + 1)/2 - ((self->rightArc.height.value())/2.));
}
int hmimain::rangeIndicator_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (23) - (self->rangeIndicator.width.value()));
}
int hmimain::rangeIndicator_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->rangeIndicator.height.value())/2.));
}
int hmimain::rangeleftArcClipper_width_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->rangeIndicator.width.value()) + 1)/2);
}
int hmimain::rangeleftArcClipper_height_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->rangeIndicator.height.value());
}
Qul::qreal hmimain::rangeLeftArc_rotation_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2_1;
    Qul::qreal r2_2;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r2 = NULL;
    int r10;
    int r11;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r7 = NULL;
    // rotation: Math.min(180, rangeAniVal)
    // line 450  "qml/hmimain.qml"
    r2 = &Qul::Private::Builtins::Math ::instance();
    r7 = r2;
    r10 = 180;
    r2_1 = self->rangeAniVal.value();
    r11 = r2_1;
    r2_2 = r7->min(r10, r11);
    return r2_2;
    
}
Qul::SharedImage hmimain::rangeLeftArc_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source: (rangeAniVal > 28)?icon_timebar_green:icon_timebar_red
    // line 449  "qml/hmimain.qml"
    r2 = self->rangeAniVal.value();
    r7 = r2;
    r2 = 28;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->icon_timebar_green.value();
    goto label_1;;
    label_0:;
    r2_1 = self->icon_timebar_red.value();
    label_1:;
    return r2_1;
    
}
int hmimain::rangeLeftArc_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: width
    // line 448  "qml/hmimain.qml"
    r2 = self->rangeLeftArc.width.value();
    return r2;
    
}
int hmimain::rangeLeftArc_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2__width;
    QUL_DECL_UNUSED rangeIndicator_Item * r2 = NULL;
    // width: rangeIndicator.width
    // line 447  "qml/hmimain.qml"
    r2 = &self->rangeIndicator;
    r2__width = r2->width.value();
    return r2__width;
    
}
int hmimain::rangeRightArcClipper_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->rangeIndicator.width.value()) + 1)/2);
}
int hmimain::rangeRightArcClipper_width_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->rangeIndicator.width.value() - (self->rangeRightArcClipper.x.value()));
}
int hmimain::rangeRightArcClipper_height_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->rangeIndicator.height.value());
}
Qul::qreal hmimain::rangeRightArc_rotation_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2_1;
    Qul::qreal r2_2;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r2 = NULL;
    int r10;
    int r11;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r7 = NULL;
    // rotation: Math.max(180, rangeAniVal)
    // line 475  "qml/hmimain.qml"
    r2 = &Qul::Private::Builtins::Math ::instance();
    r7 = r2;
    r10 = 180;
    r2_1 = self->rangeAniVal.value();
    r11 = r2_1;
    r2_2 = r7->max(r10, r11);
    return r2_2;
    
}
Qul::SharedImage hmimain::rangeRightArc_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source: (rangeAniVal > 28)?icon_timebar_green:icon_timebar_red
    // line 474  "qml/hmimain.qml"
    r2 = self->rangeAniVal.value();
    r7 = r2;
    r2 = 28;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->icon_timebar_green.value();
    goto label_1;;
    label_0:;
    r2_1 = self->icon_timebar_red.value();
    label_1:;
    return r2_1;
    
}
int hmimain::rangeRightArc_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: width
    // line 473  "qml/hmimain.qml"
    r2 = self->rangeRightArc.width.value();
    return r2;
    
}
int hmimain::rangeRightArc_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2__width;
    QUL_DECL_UNUSED rangeIndicator_Item * r2 = NULL;
    // width: rangeIndicator.width
    // line 472  "qml/hmimain.qml"
    r2 = &self->rangeIndicator;
    r2__width = r2->width.value();
    return r2__width;
    
}
int hmimain::rangeRightArc_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int( - ((self->rangeRightArc.width.value())/2.));
}
int hmimain::rangeRightArc_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->rangeRightArcClipper.height.value()) + 1)/2 - ((self->rangeRightArc.height.value())/2.));
}
bool hmimain::lbeam_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    int r2_1;
    // visible: (bHighBeam) ? 0: bLowBeam
    // line 489  "qml/hmimain.qml"
    r2 = self->bHighBeam.value();
    if (!r2) goto label_0;;
    r2_1 = 0;
    {
    goto label_1;};
    label_0:;
    r2 = self->bLowBeam.value();
    {
    r2_1 = r2;
    }
    label_1:;
    return r2_1;
    
}
int hmimain::lbeam_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 488  "qml/hmimain.qml"
    r2 = self->lbeam.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::lbeam_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 487  "qml/hmimain.qml"
    r2 = self->lbeam.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::lbeam_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source: icon_lowbeam
    // line 482  "qml/hmimain.qml"
    r2 = self->icon_lowbeam.value();
    return r2;
    
}
bool hmimain::handbreak_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bHandBrake
    // line 501  "qml/hmimain.qml"
    r2 = self->bHandBrake.value();
    return r2;
    
}
int hmimain::handbreak_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 500  "qml/hmimain.qml"
    r2 = self->handbreak.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::handbreak_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 499  "qml/hmimain.qml"
    r2 = self->handbreak.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::handbreak_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (300) - (self->handbreak.width.value()));
}
Qul::SharedImage hmimain::handbreak_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_handbreak
    // line 494  "qml/hmimain.qml"
    r2 = self->icon_handbreak.value();
    return r2;
    
}
bool hmimain::hazard_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bHazard
    // line 513  "qml/hmimain.qml"
    r2 = self->bHazard.value();
    return r2;
    
}
int hmimain::hazard_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 512  "qml/hmimain.qml"
    r2 = self->hazard.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::hazard_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 511  "qml/hmimain.qml"
    r2 = self->hazard.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::hazard_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->handbreak.x.value() + self->handbreak.width.value() + (25));
}
Qul::SharedImage hmimain::hazard_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_hazard
    // line 506  "qml/hmimain.qml"
    r2 = self->icon_hazard.value();
    return r2;
    
}
bool hmimain::seatbelt_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible: bSafetyBelt
    // line 525  "qml/hmimain.qml"
    r2 = self->bSafetyBelt.value();
    return r2;
    
}
int hmimain::seatbelt_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 524  "qml/hmimain.qml"
    r2 = self->seatbelt.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::seatbelt_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 523  "qml/hmimain.qml"
    r2 = self->seatbelt.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::seatbelt_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->hazard.x.value() + self->hazard.width.value() + (25));
}
Qul::SharedImage hmimain::seatbelt_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_seatbelt
    // line 518  "qml/hmimain.qml"
    r2 = self->icon_seatbelt.value();
    return r2;
    
}
bool hmimain::indfoglight_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible: bFoglight
    // line 537  "qml/hmimain.qml"
    r2 = self->bFoglight.value();
    return r2;
    
}
int hmimain::indfoglight_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 536  "qml/hmimain.qml"
    r2 = self->indfoglight.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::indfoglight_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 535  "qml/hmimain.qml"
    r2 = self->indfoglight.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::indfoglight_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->hbeam.x.value() - (self->indfoglight.width.value()));
}
Qul::SharedImage hmimain::indfoglight_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:icon_foglight
    // line 530  "qml/hmimain.qml"
    r2 = self->icon_foglight.value();
    return r2;
    
}
bool hmimain::indgunlock_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible: bGunlock
    // line 549  "qml/hmimain.qml"
    r2 = self->bGunlock.value();
    return r2;
    
}
int hmimain::indgunlock_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 548  "qml/hmimain.qml"
    r2 = self->indgunlock.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::indgunlock_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 547  "qml/hmimain.qml"
    r2 = self->indgunlock.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::indgunlock_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->indfoglight.x.value() - (30) - (self->indgunlock.width.value()));
}
Qul::SharedImage hmimain::indgunlock_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:icon_gunlock
    // line 542  "qml/hmimain.qml"
    r2 = self->icon_gunlock.value();
    return r2;
    
}
bool hmimain::indright_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible: bRightInd
    // line 562  "qml/hmimain.qml"
    r2 = self->bRightInd.value();
    return r2;
    
}
int hmimain::indright_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 561  "qml/hmimain.qml"
    r2 = self->indright.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::indright_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 560  "qml/hmimain.qml"
    r2 = self->indright.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::indright_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (200) - (self->indright.width.value()));
}
Qul::SharedImage hmimain::indright_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source: icon_indicatorright
    // line 554  "qml/hmimain.qml"
    r2 = self->icon_indicatorright.value();
    return r2;
    
}
bool hmimain::indleft_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible: bLeftInd
    // line 575  "qml/hmimain.qml"
    r2 = self->bLeftInd.value();
    return r2;
    
}
int hmimain::indleft_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 574  "qml/hmimain.qml"
    r2 = self->indleft.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::indleft_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 573  "qml/hmimain.qml"
    r2 = self->indleft.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::indleft_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:icon_indicatorleft
    // line 567  "qml/hmimain.qml"
    r2 = self->icon_indicatorleft.value();
    return r2;
    
}
bool hmimain::motormalfunc_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bMotorMalfunc
    // line 588  "qml/hmimain.qml"
    r2 = self->bMotorMalfunc.value();
    return r2;
    
}
int hmimain::motormalfunc_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 587  "qml/hmimain.qml"
    r2 = self->motormalfunc.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::motormalfunc_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 586  "qml/hmimain.qml"
    r2 = self->motormalfunc.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::motormalfunc_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (60) - (self->motormalfunc.width.value()));
}
int hmimain::motormalfunc_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (100) - (self->motormalfunc.height.value()));
}
Qul::SharedImage hmimain::motormalfunc_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_motormalfun
    // line 581  "qml/hmimain.qml"
    r2 = self->icon_motormalfun.value();
    return r2;
    
}
bool hmimain::motorfault_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bMotorfault
    // line 600  "qml/hmimain.qml"
    r2 = self->bMotorfault.value();
    return r2;
    
}
int hmimain::motorfault_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 599  "qml/hmimain.qml"
    r2 = self->motorfault.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::motorfault_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 598  "qml/hmimain.qml"
    r2 = self->motorfault.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::motorfault_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (60) - (self->motorfault.width.value()));
}
int hmimain::motorfault_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->motormalfunc.y.value() + self->motormalfunc.height.value() + (25));
}
Qul::SharedImage hmimain::motorfault_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_motorfault
    // line 593  "qml/hmimain.qml"
    r2 = self->icon_motorfault.value();
    return r2;
    
}
bool hmimain::hvil_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bHvil
    // line 614  "qml/hmimain.qml"
    r2 = self->bHvil.value();
    return r2;
    
}
int hmimain::hvil_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 613  "qml/hmimain.qml"
    r2 = self->hvil.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::hvil_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 612  "qml/hmimain.qml"
    r2 = self->hvil.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::hvil_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (60) - (self->hvil.width.value()));
}
Qul::SharedImage hmimain::hvil_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_hvil
    // line 607  "qml/hmimain.qml"
    r2 = self->icon_hvil.value();
    return r2;
    
}
bool hmimain::iconfault_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    int r7;
    // visible:  (iFaultCount > 0)?1:0
    // line 626  "qml/hmimain.qml"
    r2 = self->iFaultCount.value();
    r7 = r2;
    r2 = 0;
    r2_1 = r7 > r2;
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::iconfault_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 625  "qml/hmimain.qml"
    r2 = self->iconfault.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::iconfault_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 624  "qml/hmimain.qml"
    r2 = self->iconfault.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::iconfault_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (120) - (self->iconfault.width.value()));
}
Qul::SharedImage hmimain::iconfault_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_fault
    // line 619  "qml/hmimain.qml"
    r2 = self->icon_fault.value();
    return r2;
    
}
bool hmimain::batterywarning_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bBatMalfunc
    // line 638  "qml/hmimain.qml"
    r2 = self->bBatMalfunc.value();
    return r2;
    
}
int hmimain::batterywarning_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 637  "qml/hmimain.qml"
    r2 = self->batterywarning.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::batterywarning_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 636  "qml/hmimain.qml"
    r2 = self->batterywarning.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::batterywarning_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (100) - (self->batterywarning.height.value()));
}
Qul::SharedImage hmimain::batterywarning_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_batterywarning
    // line 631  "qml/hmimain.qml"
    r2 = self->icon_batterywarning.value();
    return r2;
    
}
bool hmimain::batteryfault_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bBatfault
    // line 650  "qml/hmimain.qml"
    r2 = self->bBatfault.value();
    return r2;
    
}
int hmimain::batteryfault_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 649  "qml/hmimain.qml"
    r2 = self->batteryfault.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::batteryfault_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 648  "qml/hmimain.qml"
    r2 = self->batteryfault.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::batteryfault_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->batterywarning.y.value() + self->batterywarning.height.value() + (25));
}
Qul::SharedImage hmimain::batteryfault_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_batteryfailure
    // line 643  "qml/hmimain.qml"
    r2 = self->icon_batteryfailure.value();
    return r2;
    
}
bool hmimain::coolenttemp_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bCoolent
    // line 661  "qml/hmimain.qml"
    r2 = self->bCoolent.value();
    return r2;
    
}
int hmimain::coolenttemp_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 660  "qml/hmimain.qml"
    r2 = self->coolenttemp.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::coolenttemp_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 659  "qml/hmimain.qml"
    r2 = self->coolenttemp.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::coolenttemp_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_coolenttemp
    // line 654  "qml/hmimain.qml"
    r2 = self->icon_coolenttemp.value();
    return r2;
    
}
bool hmimain::bgspeed_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:(iscreen==0)?1:0
    // line 673  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(0, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::bgspeed_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 672  "qml/hmimain.qml"
    r2 = self->bgspeed.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::bgspeed_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 671  "qml/hmimain.qml"
    r2 = self->bgspeed.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::bgspeed_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->bgspeed.width.value())/2.));
}
int hmimain::bgspeed_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->bgspeed.height.value())/2.));
}
Qul::SharedImage hmimain::bgspeed_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    // source:  (isdarktheme)?bg_dark_speed:bg_light_speed
    // line 666  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->bg_dark_speed.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_light_speed.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::faultdark_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:  (iscreen==2)?((isdarktheme)?1:0):0
    // line 685  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2_1 = self->isdarktheme.value();
    if (!r2_1) goto label_1;;
    r2 = 1;
    goto label_2;;
    label_1:;
    r2 = 0;
    label_2:;
    goto label_3;;
    label_0:;
    r2 = 0;
    label_3:;
    return r2;
    
}
int hmimain::faultdark_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 684  "qml/hmimain.qml"
    r2 = self->faultdark.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::faultdark_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 683  "qml/hmimain.qml"
    r2 = self->faultdark.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::faultdark_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->faultdark.width.value())/2.));
}
int hmimain::faultdark_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->faultdark.height.value())/2.));
}
Qul::SharedImage hmimain::faultdark_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source:  (iFaultCount >0)?bg_dark_fault:bg_dark_green
    // line 678  "qml/hmimain.qml"
    r2 = self->iFaultCount.value();
    r7 = r2;
    r2 = 0;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->bg_dark_fault.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_dark_green.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::faultlight_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible: (iscreen==2)?((isdarktheme)?0:1):0
    // line 697  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2_1 = self->isdarktheme.value();
    if (!r2_1) goto label_1;;
    r2 = 0;
    goto label_2;;
    label_1:;
    r2 = 1;
    label_2:;
    goto label_3;;
    label_0:;
    r2 = 0;
    label_3:;
    return r2;
    
}
int hmimain::faultlight_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 696  "qml/hmimain.qml"
    r2 = self->faultlight.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::faultlight_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 695  "qml/hmimain.qml"
    r2 = self->faultlight.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::faultlight_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->faultlight.width.value())/2.));
}
int hmimain::faultlight_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->faultlight.height.value())/2.));
}
Qul::SharedImage hmimain::faultlight_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    int r7;
    // source:  (iFaultCount >0)?bg_light_fault:bg_light_green
    // line 690  "qml/hmimain.qml"
    r2 = self->iFaultCount.value();
    r7 = r2;
    r2 = 0;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->bg_light_fault.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_light_green.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::charge_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:(iscreen==1)?1:0
    // line 709  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(1, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::charge_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 708  "qml/hmimain.qml"
    r2 = self->charge.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::charge_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 707  "qml/hmimain.qml"
    r2 = self->charge.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::charge_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->charge.width.value())/2.));
}
int hmimain::charge_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->charge.height.value())/2.));
}
Qul::SharedImage hmimain::charge_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    // source:(isdarktheme)?bg_dark_charge_blue:bg_light_charge_blue
    // line 702  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->bg_dark_charge_blue.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_light_charge_blue.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::breakfailed_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible:  bBrakeFailed
    // line 721  "qml/hmimain.qml"
    r2 = self->bBrakeFailed.value();
    return r2;
    
}
int hmimain::breakfailed_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 720  "qml/hmimain.qml"
    r2 = self->breakfailed.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::breakfailed_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 719  "qml/hmimain.qml"
    r2 = self->breakfailed.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
int hmimain::breakfailed_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (300) - (self->breakfailed.width.value()));
}
Qul::SharedImage hmimain::breakfailed_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:  icon_breakfailed
    // line 714  "qml/hmimain.qml"
    r2 = self->icon_breakfailed.value();
    return r2;
    
}
bool hmimain::speedid_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible: (iscreen ==0) ?1:0
    // line 732  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(0, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::speedid_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->speedid.width.value())/2.));
}
int hmimain::speedid_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 + (-20) - ((self->speedid.height.value())/2.));
}
Qul::PlatformInterface::Rgba32 hmimain::speedid_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r7;
    // color: (speed < 80) ? "#17a81a": "red"
    // line 726  "qml/hmimain.qml"
    r2 = self->speed.value();
    r7 = r2;
    r2 = 80;
    r2_2 = r7 < r2;
    if (!r2_2) goto label_0;;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("#17a81a", 7, 0xff17a81a));
    goto label_1;;
    label_0:;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("red", 3, 0xffff0000));
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::speedid_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // text: speed
    // line 725  "qml/hmimain.qml"
    r2 = self->speed.value();
    return Qul::Private::Builtins::Number(r2).toString();
    
}
bool hmimain::speedunit_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible: (iscreen ==0) ?1:0
    // line 744  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(0, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::speedunit_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->speedid.x.value() + (int(self->speedid.width.value()) + 1)/2 - ((self->speedunit.width.value())/2.));
}
int hmimain::speedunit_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->speedid.y.value() + self->speedid.height.value());
}
Qul::PlatformInterface::Rgba32 hmimain::speedunit_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::PlatformInterface::Rgba32 r2__color;
    QUL_DECL_UNUSED speedid_Text * r2 = NULL;
    // color:speedid.color
    // line 738  "qml/hmimain.qml"
    r2 = &self->speedid;
    r2__color = r2->color.value();
    return r2__color;
    
}
bool hmimain::ttcname_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:(iscreen ==1) ?1:0
    // line 758  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(1, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::ttcname_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->ttcname.width.value())/2.));
}
int hmimain::ttcname_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 + (-50) - ((self->ttcname.height.value())/2.));
}
Qul::PlatformInterface::Rgba32 hmimain::ttcname_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 752  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
bool hmimain::ttcharge_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible: (iscreen ==1) ?1:0
    // line 770  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(1, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::ttcharge_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->ttcname.x.value() + (int(self->ttcname.width.value()) + 1)/2 - ((self->ttcharge.width.value())/2.));
}
int hmimain::ttcharge_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->ttcname.y.value() + self->ttcname.height.value() + (30));
}
Qul::PlatformInterface::Rgba32 hmimain::ttcharge_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 764  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
int hmimain::socrect_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 + (2) - ((self->socrect.height.value())/2.));
}
int hmimain::socid_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->socrect.width.value()) + 1)/2 - ((self->socid.width.value())/2.));
}
int hmimain::socid_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->socrect.height.value()) + 1)/2 - ((self->socid.height.value())/2.));
}
Qul::PlatformInterface::Rgba32 hmimain::socid_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r7;
    // color: (iSocval > 20) ? "#17a81a": "red"
    // line 785  "qml/hmimain.qml"
    r2 = self->iSocval.value();
    r7 = r2;
    r2 = 20;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("#17a81a", 7, 0xff17a81a));
    goto label_1;;
    label_0:;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("red", 3, 0xffff0000));
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::socid_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // text: iSocval
    // line 784  "qml/hmimain.qml"
    r2 = self->iSocval.value();
    return Qul::Private::Builtins::Number(r2).toString();
    
}
int hmimain::socunit_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->socid.x.value() + self->socid.width.value());
}
int hmimain::socunit_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->socid.y.value() + self->socid.height.value() - (10) - (self->socunit.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::socunit_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::PlatformInterface::Rgba32 r2__color;
    QUL_DECL_UNUSED socid_Text * r2 = NULL;
    // color:socid.color
    // line 796  "qml/hmimain.qml"
    r2 = &self->socid;
    r2__color = r2->color.value();
    return r2__color;
    
}
int hmimain::socname_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->socrect.width.value()) + 1)/2 - ((self->socname.width.value())/2.));
}
int hmimain::socname_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->socid.y.value() - (-10) - (self->socname.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::socname_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::PlatformInterface::Rgba32 r2__color;
    QUL_DECL_UNUSED socid_Text * r2 = NULL;
    // color:socid.color
    // line 807  "qml/hmimain.qml"
    r2 = &self->socid;
    r2__color = r2->color.value();
    return r2__color;
    
}
int hmimain::rectangle_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (80) - (self->rectangle.width.value()));
}
int hmimain::rectangle_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->rectangle.height.value())/2.));
}
int hmimain::rangeval_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->rectangle.width.value()) + 1)/2 - ((self->rangeval.width.value())/2.));
}
int hmimain::rangeval_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->rectangle.height.value()) + 1)/2 - ((self->rangeval.height.value())/2.));
}
Qul::PlatformInterface::Rgba32 hmimain::rangeval_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r7;
    // color:(irange > 20)?"#17a81a":"red"
    // line 829  "qml/hmimain.qml"
    r2 = self->irange.value();
    r7 = r2;
    r2 = 20;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("#17a81a", 7, 0xff17a81a));
    goto label_1;;
    label_0:;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("red", 3, 0xffff0000));
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::rangeval_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("0")
    // line 828  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("0", 1));
    r2 = qul_translation(0);
    return r2;
    
}
int hmimain::rangeunit_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->rangeval.x.value() + (int(self->rangeval.width.value()) + 1)/2 - ((self->rangeunit.width.value())/2.));
}
int hmimain::rangeunit_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->rangeval.y.value() + self->rangeval.height.value());
}
Qul::PlatformInterface::Rgba32 hmimain::rangeunit_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::PlatformInterface::Rgba32 r2__color;
    QUL_DECL_UNUSED rangeval_Text * r2 = NULL;
    // color:rangeval.color
    // line 840  "qml/hmimain.qml"
    r2 = &self->rangeval;
    r2__color = r2->color.value();
    return r2__color;
    
}
int hmimain::rangename_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->rectangle.width.value()) + 1)/2 - ((self->rangename.width.value())/2.));
}
int hmimain::rangename_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->rangeval.y.value() - (-10) - (self->rangename.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::rangename_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::PlatformInterface::Rgba32 r2__color;
    QUL_DECL_UNUSED rangeval_Text * r2 = NULL;
    // color:rangeval.color
    // line 851  "qml/hmimain.qml"
    r2 = &self->rangeval;
    r2__color = r2->color.value();
    return r2__color;
    
}
int hmimain::modedrive_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 + (113) - ((self->modedrive.width.value())/2.));
}
bool hmimain::modedrive_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible: (iGearMode == 2)?1:0
    // line 866  "qml/hmimain.qml"
    r2 = self->iGearMode.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::modedrive_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 865  "qml/hmimain.qml"
    r2 = self->modedrive.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::modedrive_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 864  "qml/hmimain.qml"
    r2 = self->modedrive.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::modedrive_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:icon_drive
    // line 863  "qml/hmimain.qml"
    r2 = self->icon_drive.value();
    return r2;
    
}
int hmimain::modeneutral_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 + (113) - ((self->modeneutral.width.value())/2.));
}
bool hmimain::modeneutral_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:  (iGearMode == 1)?1:0
    // line 877  "qml/hmimain.qml"
    r2 = self->iGearMode.value();
    r2_1 = Qul::Private::testEqual(1, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::modeneutral_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 876  "qml/hmimain.qml"
    r2 = self->modeneutral.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::modeneutral_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 875  "qml/hmimain.qml"
    r2 = self->modeneutral.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::modeneutral_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:icon_neutral
    // line 874  "qml/hmimain.qml"
    r2 = self->icon_neutral.value();
    return r2;
    
}
int hmimain::modereverse_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 + (113) - ((self->modereverse.width.value())/2.));
}
bool hmimain::modereverse_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:  (iGearMode == 3)?1:0
    // line 889  "qml/hmimain.qml"
    r2 = self->iGearMode.value();
    r2_1 = Qul::Private::testEqual(3, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::modereverse_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 888  "qml/hmimain.qml"
    r2 = self->modereverse.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::modereverse_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 887  "qml/hmimain.qml"
    r2 = self->modereverse.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::modereverse_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::SharedImage r2;
    // source:icon_reverse
    // line 886  "qml/hmimain.qml"
    r2 = self->icon_reverse.value();
    return r2;
    
}
int hmimain::powerid_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (140) - (self->powerid.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::powerval_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(bregen)?"green":"red"
    // line 906  "qml/hmimain.qml"
    r2 = self->bregen.value();
    if (!r2) goto label_0;;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("green", 5, 0xff008000));
    goto label_1;;
    label_0:;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("red", 3, 0xffff0000));
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::powerval_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("0")
    // line 905  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("0", 1));
    r2 = qul_translation(0);
    return r2;
    
}
int hmimain::powerunit_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->powerid.height.value() - (5) - (self->powerunit.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::powerunit_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::PlatformInterface::Rgba32 r2__color;
    QUL_DECL_UNUSED powerval_Text * r2 = NULL;
    // color:powerval.color
    // line 914  "qml/hmimain.qml"
    r2 = &self->powerval;
    r2__color = r2->color.value();
    return r2__color;
    
}
Qul::Private::String hmimain::powerunit_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("W")
    // line 913  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("W", 1));
    r2 = qul_translation(1);
    return r2;
    
}
int hmimain::rpmid_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (140) - (self->rpmid.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::rpmval_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 931  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::rpmval_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("0")
    // line 930  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("0", 1));
    r2 = qul_translation(0);
    return r2;
    
}
int hmimain::rpmunit_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->rpmid.height.value() - (5) - (self->rpmunit.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::rpmunit_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 939  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
bool hmimain::tripname_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible :(iscreen ==2) ?0:1
    // line 957  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 0;
    goto label_1;;
    label_0:;
    r2 = 1;
    label_1:;
    return r2;
    
}
int hmimain::tripname_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (40) - (self->tripname.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::tripname_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 951  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::tripname_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("TRIP (km)")
    // line 950  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("TRIP (km)", 9));
    r2 = qul_translation(2);
    return r2;
    
}
bool hmimain::tripval_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible :(iscreen ==2) ?0:1
    // line 969  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 0;
    goto label_1;;
    label_0:;
    r2 = 1;
    label_1:;
    return r2;
    
}
int hmimain::tripval_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->tripname.x.value() + (int(self->tripname.width.value()) + 1)/2 - ((self->tripval.width.value())/2.));
}
int hmimain::tripval_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->tripname.y.value() + self->tripname.height.value() + (5));
}
Qul::PlatformInterface::Rgba32 hmimain::tripval_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 963  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::tripval_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("0")
    // line 962  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("0", 1));
    r2 = qul_translation(0);
    return r2;
    
}
bool hmimain::odoname_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible :(iscreen ==2) ?0:1
    // line 981  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 0;
    goto label_1;;
    label_0:;
    r2 = 1;
    label_1:;
    return r2;
    
}
int hmimain::odoname_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (150) - (self->odoname.width.value()));
}
int hmimain::odoname_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (40) - (self->odoname.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::odoname_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 975  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::odoname_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("ODO (km)")
    // line 974  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("ODO (km)", 8));
    r2 = qul_translation(3);
    return r2;
    
}
bool hmimain::odoval_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible :(iscreen ==2) ?0:1
    // line 993  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 0;
    goto label_1;;
    label_0:;
    r2 = 1;
    label_1:;
    return r2;
    
}
int hmimain::odoval_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->odoname.x.value() + (int(self->odoname.width.value()) + 1)/2 - ((self->odoval.width.value())/2.));
}
int hmimain::odoval_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->odoname.y.value() + self->odoname.height.value() + (5));
}
Qul::PlatformInterface::Rgba32 hmimain::odoval_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 987  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::odoval_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("0")
    // line 986  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("0", 1));
    r2 = qul_translation(0);
    return r2;
    
}
bool hmimain::bgmode_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible: (iscreen == 2)?0:1
    // line 1007  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 0;
    goto label_1;;
    label_0:;
    r2 = 1;
    label_1:;
    return r2;
    
}
int hmimain::bgmode_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->bgmode.width.value())/2.));
}
int hmimain::bgmode_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (self->bgmode.height.value()));
}
int hmimain::bgmode_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 1002  "qml/hmimain.qml"
    r2 = self->bgmode.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::bgmode_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 1001  "qml/hmimain.qml"
    r2 = self->bgmode.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::bgmode_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    // source:(isdarktheme)?bg_dark_mode:bg_light_mode
    // line 1000  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->bg_dark_mode.value();
    goto label_1;;
    label_0:;
    r2_1 = self->bg_light_mode.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::batcharging_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible: (iscreen ==1) ?1:0
    // line 1020  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(1, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::batcharging_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_dark:scolor_light
    // line 1017  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
int hmimain::batcharging_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->batcharging.width.value())/2.));
}
int hmimain::batcharging_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (20) - (self->batcharging.height.value()));
}
Qul::Private::String hmimain::batcharging_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("Charging : AC")
    // line 1012  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("Charging : AC", 13));
    r2 = qul_translation(4);
    return r2;
    
}
bool hmimain::drivemode_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible: (iscreen==0)?1:0
    // line 1033  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(0, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::drivemode_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->drivemode.width.value())/2.));
}
int hmimain::drivemode_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (20) - (self->drivemode.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::drivemode_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_dark:scolor_light
    // line 1026  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::drivemode_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("ECO")
    // line 1025  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("ECO", 3));
    r2 = qul_translation(5);
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::battempidval_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r7;
    // color: (battempval >40 )?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1045  "qml/hmimain.qml"
    r2 = self->battempval.value();
    r7 = r2;
    r2 = 40;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = self->scolor_red.value();
    goto label_1;;
    label_0:;
    r2_2 = self->isdarktheme.value();
    if (!r2_2) goto label_2;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_2:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::battempidval_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r7;
    // text: battempval.toString()
    // line 1044  "qml/hmimain.qml"
    r2 = self->battempval.value();
    r7 = r2;
    r2_1 = Qul::Private::Builtins::Number(r7).toString();
    return r2_1;
    
}
int hmimain::tempunit_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->battempid.height.value() - (self->tempunit.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::tempunit_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::PlatformInterface::Rgba32 r2__color;
    QUL_DECL_UNUSED battempidval_Text * r2 = NULL;
    // color: battempidval.color
    // line 1052  "qml/hmimain.qml"
    r2 = &self->battempidval;
    r2__color = r2->color.value();
    return r2__color;
    
}
Qul::Private::String hmimain::tempunit_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("°C")
    // line 1051  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("\xb0" "C", 2));
    r2 = qul_translation(6);
    return r2;
    
}
int hmimain::row_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->daterect.width.value()) + 1)/2 - ((self->row.width.value())/2.));
}
int hmimain::row_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->daterect.height.value() - (self->row.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::tday_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(istate ==0)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1079  "qml/hmimain.qml"
    r2 = self->istate.value();
    r2_2 = Qul::Private::testEqual(0, r2);
    if (!r2_2) goto label_0;;
    r2_1 = self->scolor_red.value();
    goto label_1;;
    label_0:;
    r2_2 = self->isdarktheme.value();
    if (!r2_2) goto label_2;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_2:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::tday_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("00")
    // line 1078  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("00", 2));
    r2 = qul_translation(7);
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::statictext_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:((isdarktheme)?scolor_light:scolor_dark)
    // line 1085  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::PlatformInterface::Rgba32 hmimain::tmon_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(istate ==1)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1092  "qml/hmimain.qml"
    r2 = self->istate.value();
    r2_2 = Qul::Private::testEqual(1, r2);
    if (!r2_2) goto label_0;;
    r2_1 = self->scolor_red.value();
    goto label_1;;
    label_0:;
    r2_2 = self->isdarktheme.value();
    if (!r2_2) goto label_2;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_2:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::tmon_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("00")
    // line 1091  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("00", 2));
    r2 = qul_translation(7);
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::statictext_2_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:((isdarktheme)?scolor_light:scolor_dark)
    // line 1098  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::PlatformInterface::Rgba32 hmimain::tyear_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(istate ==2)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1105  "qml/hmimain.qml"
    r2 = self->istate.value();
    r2_2 = Qul::Private::testEqual(2, r2);
    if (!r2_2) goto label_0;;
    r2_1 = self->scolor_red.value();
    goto label_1;;
    label_0:;
    r2_2 = self->isdarktheme.value();
    if (!r2_2) goto label_2;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_2:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::tyear_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("2024")
    // line 1104  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("2024", 4));
    r2 = qul_translation(8);
    return r2;
    
}
int hmimain::timerect_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->timerect.width.value())/2.));
}
int hmimain::row_2_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->timerect.width.value()) + 1)/2 - ((self->row_2.width.value())/2.));
}
int hmimain::row_2_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->timerect.height.value() - (self->row_2.height.value()));
}
Qul::PlatformInterface::Rgba32 hmimain::thour_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(istate ==3)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1130  "qml/hmimain.qml"
    r2 = self->istate.value();
    r2_2 = Qul::Private::testEqual(3, r2);
    if (!r2_2) goto label_0;;
    r2_1 = self->scolor_red.value();
    goto label_1;;
    label_0:;
    r2_2 = self->isdarktheme.value();
    if (!r2_2) goto label_2;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_2:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::thour_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("00")
    // line 1129  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("00", 2));
    r2 = qul_translation(7);
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::statictext_3_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:((isdarktheme)?scolor_light:scolor_dark)
    // line 1136  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::PlatformInterface::Rgba32 hmimain::tmin_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(istate ==4)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1143  "qml/hmimain.qml"
    r2 = self->istate.value();
    r2_2 = Qul::Private::testEqual(4, r2);
    if (!r2_2) goto label_0;;
    r2_1 = self->scolor_red.value();
    goto label_1;;
    label_0:;
    r2_2 = self->isdarktheme.value();
    if (!r2_2) goto label_2;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_2:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::tmin_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("00")
    // line 1142  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("00", 2));
    r2 = qul_translation(7);
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::tampm_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(istate ==5)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1150  "qml/hmimain.qml"
    r2 = self->istate.value();
    r2_2 = Qul::Private::testEqual(5, r2);
    if (!r2_2) goto label_0;;
    r2_1 = self->scolor_red.value();
    goto label_1;;
    label_0:;
    r2_2 = self->isdarktheme.value();
    if (!r2_2) goto label_2;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_2:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::tampm_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("AM")
    // line 1149  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("AM", 2));
    r2 = qul_translation(9);
    return r2;
    
}
bool hmimain::alertmsg_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:(iscreen==2)?0:bwarning
    // line 1167  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 0;
    {
    goto label_1;};
    label_0:;
    r2_1 = self->bwarning.value();
    {
    r2 = r2_1;
    }
    label_1:;
    return r2;
    
}
int hmimain::alertmsg_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->alertmsg.width.value())/2.));
}
int hmimain::alertmsg_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (80) - (self->alertmsg.height.value()));
}
Qul::Private::String hmimain::alertmsg_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: smessage
    // line 1159  "qml/hmimain.qml"
    r2 = self->smessage.value();
    return r2;
    
}
bool hmimain::dtcmsg_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:(iscreen==2)?1:0
    // line 1180  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::dtcmsg_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->dtcmsg.width.value())/2.));
}
Qul::PlatformInterface::Rgba32 hmimain::dtcmsg_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    int r7;
    // color:(iFaultCount >0)?"red":((isdarktheme)?scolor_light:scolor_dark)
    // line 1173  "qml/hmimain.qml"
    r2 = self->iFaultCount.value();
    r7 = r2;
    r2 = 0;
    r2_2 = r7 > r2;
    if (!r2_2) goto label_0;;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("red", 3, 0xffff0000));
    goto label_1;;
    label_0:;
    r2_2 = self->isdarktheme.value();
    if (!r2_2) goto label_2;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_2:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::dtcmsg_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: qsTr("No faults")
    // line 1172  "qml/hmimain.qml"
    r2 = Qul::Private::String(Qul::Private::Latin1String("No faults", 9));
    r2 = qul_translation(10);
    return r2;
    
}
bool hmimain::faultmsg_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:(iscreen==2)?1:0
    // line 1193  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::faultmsg_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->faultmsg.width.value())/2.));
}
Qul::Private::String hmimain::faultmsg_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text: sfaultmsg
    // line 1185  "qml/hmimain.qml"
    r2 = self->sfaultmsg.value();
    return r2;
    
}
bool hmimain::selmain_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:(iscreen==0)?1:0
    // line 1205  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(0, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::selmain_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (self->selmain.width.value()));
}
int hmimain::selmain_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (70) - (self->selmain.height.value()));
}
int hmimain::selmain_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 1200  "qml/hmimain.qml"
    r2 = self->selmain.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::selmain_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 1199  "qml/hmimain.qml"
    r2 = self->selmain.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::selmain_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    // source:(isdarktheme)?icon_dark_sel0:icon_light_sel0
    // line 1198  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->icon_dark_sel0.value();
    goto label_1;;
    label_0:;
    r2_1 = self->icon_light_sel0.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::selcharge_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:(iscreen==1)?1:0
    // line 1217  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(1, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::selcharge_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (self->selcharge.width.value()));
}
int hmimain::selcharge_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (70) - (self->selcharge.height.value()));
}
int hmimain::selcharge_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 1212  "qml/hmimain.qml"
    r2 = self->selcharge.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::selcharge_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 1211  "qml/hmimain.qml"
    r2 = self->selcharge.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::selcharge_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    // source:(isdarktheme)?icon_dark_sel1:icon_light_sel1
    // line 1210  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->icon_dark_sel1.value();
    goto label_1;;
    label_0:;
    r2_1 = self->icon_light_sel1.value();
    label_1:;
    return r2_1;
    
}
bool hmimain::selfault_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    bool r2_1;
    // visible:(iscreen==2)?1:0
    // line 1228  "qml/hmimain.qml"
    r2 = self->iscreen.value();
    r2_1 = Qul::Private::testEqual(2, r2);
    if (!r2_1) goto label_0;;
    r2 = 1;
    goto label_1;;
    label_0:;
    r2 = 0;
    label_1:;
    return r2;
    
}
int hmimain::selfault_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.width.value() - (self->selfault.width.value()));
}
int hmimain::selfault_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int(self->homescreen.height.value() - (70) - (self->selfault.height.value()));
}
int hmimain::selfault_height_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // height: implicitHeight
    // line 1223  "qml/hmimain.qml"
    r2 = self->selfault.itemExtraProperties->implicitHeight.value();
    return r2;
    
}
int hmimain::selfault_width_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    int r2;
    // width: implicitWidth
    // line 1222  "qml/hmimain.qml"
    r2 = self->selfault.itemExtraProperties->implicitWidth.value();
    return r2;
    
}
Qul::SharedImage hmimain::selfault_source_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::SharedImage r2_1;
    // source:(isdarktheme)?icon_dark_sel2:icon_light_sel2
    // line 1221  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->icon_dark_sel2.value();
    goto label_1;;
    label_0:;
    r2_1 = self->icon_light_sel2.value();
    label_1:;
    return r2_1;
    
}
int hmimain::deviceinfo_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.width.value()) + 1)/2 - ((self->deviceinfo.width.value())/2.));
}
int hmimain::deviceinfo_y_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->homescreen.height.value()) + 1)/2 - ((self->deviceinfo.height.value())/2.));
}
bool hmimain::deviceinfo_visible_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    // visible :bdeviceinfo
    // line 1235  "qml/hmimain.qml"
    r2 = self->bdeviceinfo.value();
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::deviceinfo_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 1234  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_light.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_dark.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::PlatformInterface::Rgba32 hmimain::devicdetails_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1244  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
int hmimain::devicdetails_x_anchor_bindingFunctor::operator()(hmimain *self) const {
        return int((int(self->deviceinfo.width.value()) + 1)/2 - ((self->devicdetails.width.value())/2.));
}
Qul::PlatformInterface::Rgba32 hmimain::swver_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1267  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::PlatformInterface::Rgba32 hmimain::seversion_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1275  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::seversion_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text:sswvermsg
    // line 1273  "qml/hmimain.qml"
    r2 = self->sswvermsg.value();
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::hwver_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1292  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::PlatformInterface::Rgba32 hmimain::hwversion_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color:(isdarktheme)?scolor_dark:scolor_light
    // line 1301  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::hwversion_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text:shwvermsg
    // line 1299  "qml/hmimain.qml"
    r2 = self->shwvermsg.value();
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::slnum_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1318  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::PlatformInterface::Rgba32 hmimain::slnumtxt_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1327  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::slnumtxt_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text:sslnummsg
    // line 1325  "qml/hmimain.qml"
    r2 = self->sslnummsg.value();
    return r2;
    
}
Qul::PlatformInterface::Rgba32 hmimain::vinnum_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1344  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::PlatformInterface::Rgba32 hmimain::vinnumtxt_color_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1353  "qml/hmimain.qml"
    r2 = self->isdarktheme.value();
    if (!r2) goto label_0;;
    r2_1 = self->scolor_dark.value();
    goto label_1;;
    label_0:;
    r2_1 = self->scolor_light.value();
    label_1:;
    return (r2_1).toRgba32();
    
}
Qul::Private::String hmimain::vinnumtxt_text_bindingFunctor::operator()(hmimain *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2;
    // text:svinnummsg
    // line 1351  "qml/hmimain.qml"
    r2 = self->svinnummsg.value();
    return r2;
    
}

hmimain::hmimain()

    : Qul::Private::Items::ItemBase ::ExtraStorage_itemExtraProperties<Qul::Private::Items::Item  >(this)
    , ComponentAttachedType_node_onCompleted_binding(this, ComponentAttachedType_node_onCompleted_binding_slot, &ComponentAttachedType_node.completed)
    , timer_onTriggered_binding(this, timer_onTriggered_binding_slot, &timer.triggered)
    , triptimer_onTriggered_binding(this, triptimer_onTriggered_binding_slot, &triptimer.triggered)
    , deviceinfotimer_onTriggered_binding(this, deviceinfotimer_onTriggered_binding_slot, &deviceinfotimer.triggered)
    , mainscreen__onFault4StatusChanged_binding(this, mainscreen__onFault4StatusChanged_binding_slot, &HmiHandler ::instance().fault4StatusChanged)
    , mainscreen__onFault3StatusChanged_binding(this, mainscreen__onFault3StatusChanged_binding_slot, &HmiHandler ::instance().fault3StatusChanged)
    , mainscreen__onFault2StatusChanged_binding(this, mainscreen__onFault2StatusChanged_binding_slot, &HmiHandler ::instance().fault2StatusChanged)
    , mainscreen__onFault1StatusChanged_binding(this, mainscreen__onFault1StatusChanged_binding_slot, &HmiHandler ::instance().fault1StatusChanged)
    , mainscreen__onFault0StatusChanged_binding(this, mainscreen__onFault0StatusChanged_binding_slot, &HmiHandler ::instance().fault0StatusChanged)
    , mainscreen__onDateTimeChanged_binding(this, mainscreen__onDateTimeChanged_binding_slot, &HmiHandler ::instance().dateTimeChanged)
    , mainscreen__onDeviceInfoChanged_binding(this, mainscreen__onDeviceInfoChanged_binding_slot, &HmiHandler ::instance().deviceInfoChanged)
    , mainscreen__onAlertInfoChanged_binding(this, mainscreen__onAlertInfoChanged_binding_slot, &HmiHandler ::instance().alertInfoChanged)
    , mainscreen__onDriveModeChanged_binding(this, mainscreen__onDriveModeChanged_binding_slot, &HmiHandler ::instance().driveModeChanged)
    , mainscreen__onHwStatusChanged_binding(this, mainscreen__onHwStatusChanged_binding_slot, &HmiHandler ::instance().hwStatusChanged)
    , mainscreen__onChargerInfoChanged_binding(this, mainscreen__onChargerInfoChanged_binding_slot, &HmiHandler ::instance().chargerInfoChanged)
    , mainscreen__onStatusInfoChanged_binding(this, mainscreen__onStatusInfoChanged_binding_slot, &HmiHandler ::instance().statusInfoChanged)
    , mainscreen__onBattInfoChanged_binding(this, mainscreen__onBattInfoChanged_binding_slot, &HmiHandler ::instance().battInfoChanged)
    , mainscreen__onMotorInfoChanged_binding(this, mainscreen__onMotorInfoChanged_binding_slot, &HmiHandler ::instance().motorInfoChanged)
    , mainscreen__onNavSwitchStatusChanged_binding(this, mainscreen__onNavSwitchStatusChanged_binding_slot, &HmiHandler ::instance().navSwitchStatusChanged)
    , mainscreen_width_anchor_binding(mainscreen_width_anchor_bindingFunctor())
    , mainscreen_height_anchor_binding(mainscreen_height_anchor_bindingFunctor())
    , splashscreen_width_anchor_binding(splashscreen_width_anchor_bindingFunctor())
    , splashscreen_height_anchor_binding(splashscreen_height_anchor_bindingFunctor())
    , splashlogo_x_anchor_binding(splashlogo_x_anchor_bindingFunctor())
    , splashlogo_y_anchor_binding(splashlogo_y_anchor_bindingFunctor())
    , splashlogo_height_binding(splashlogo_height_bindingFunctor())
    , splashlogo_width_binding(splashlogo_width_bindingFunctor())
    , splashlogo_source_binding(splashlogo_source_bindingFunctor())
    , homescreen_width_anchor_binding(homescreen_width_anchor_bindingFunctor())
    , homescreen_height_anchor_binding(homescreen_height_anchor_bindingFunctor())
    , bgmain_height_binding(bgmain_height_bindingFunctor())
    , bgmain_width_binding(bgmain_width_bindingFunctor())
    , bgmain_width_anchor_binding(bgmain_width_anchor_bindingFunctor())
    , bgmain_height_anchor_binding(bgmain_height_anchor_bindingFunctor())
    , bgmain_source_binding(bgmain_source_bindingFunctor())
    , socring_dark_visible_binding(socring_dark_visible_bindingFunctor())
    , socring_dark_height_binding(socring_dark_height_bindingFunctor())
    , socring_dark_width_binding(socring_dark_width_bindingFunctor())
    , socring_dark_y_anchor_binding(socring_dark_y_anchor_bindingFunctor())
    , socring_dark_source_binding(socring_dark_source_bindingFunctor())
    , rangering_dark_visible_binding(rangering_dark_visible_bindingFunctor())
    , rangering_dark_height_binding(rangering_dark_height_bindingFunctor())
    , rangering_dark_width_binding(rangering_dark_width_bindingFunctor())
    , rangering_dark_x_anchor_binding(rangering_dark_x_anchor_bindingFunctor())
    , rangering_dark_y_anchor_binding(rangering_dark_y_anchor_bindingFunctor())
    , rangering_dark_source_binding(rangering_dark_source_bindingFunctor())
    , socring_light_visible_binding(socring_light_visible_bindingFunctor())
    , socring_light_height_binding(socring_light_height_bindingFunctor())
    , socring_light_width_binding(socring_light_width_bindingFunctor())
    , socring_light_y_anchor_binding(socring_light_y_anchor_bindingFunctor())
    , socring_light_source_binding(socring_light_source_bindingFunctor())
    , rangering_light_visible_binding(rangering_light_visible_bindingFunctor())
    , rangering_light_height_binding(rangering_light_height_bindingFunctor())
    , rangering_light_width_binding(rangering_light_width_bindingFunctor())
    , rangering_light_x_anchor_binding(rangering_light_x_anchor_bindingFunctor())
    , rangering_light_y_anchor_binding(rangering_light_y_anchor_bindingFunctor())
    , rangering_light_source_binding(rangering_light_source_bindingFunctor())
    , hbeam_visible_binding(hbeam_visible_bindingFunctor())
    , hbeam_height_binding(hbeam_height_bindingFunctor())
    , hbeam_width_binding(hbeam_width_bindingFunctor())
    , hbeam_source_binding(hbeam_source_bindingFunctor())
    , socindicator_y_anchor_binding(socindicator_y_anchor_bindingFunctor())
    , leftArcClipper_width_anchor_binding(leftArcClipper_width_anchor_bindingFunctor())
    , leftArcClipper_height_anchor_binding(leftArcClipper_height_anchor_bindingFunctor())
    , leftArc_rotation_binding(leftArc_rotation_bindingFunctor())
    , leftArc_source_binding(leftArc_source_bindingFunctor())
    , leftArc_height_binding(leftArc_height_bindingFunctor())
    , leftArc_width_binding(leftArc_width_bindingFunctor())
    , rightArcClipper_x_anchor_binding(rightArcClipper_x_anchor_bindingFunctor())
    , rightArcClipper_width_anchor_binding(rightArcClipper_width_anchor_bindingFunctor())
    , rightArcClipper_height_anchor_binding(rightArcClipper_height_anchor_bindingFunctor())
    , rightArc_rotation_binding(rightArc_rotation_bindingFunctor())
    , rightArc_source_binding(rightArc_source_bindingFunctor())
    , rightArc_height_binding(rightArc_height_bindingFunctor())
    , rightArc_width_binding(rightArc_width_bindingFunctor())
    , rightArc_x_anchor_binding(rightArc_x_anchor_bindingFunctor())
    , rightArc_y_anchor_binding(rightArc_y_anchor_bindingFunctor())
    , rangeIndicator_x_anchor_binding(rangeIndicator_x_anchor_bindingFunctor())
    , rangeIndicator_y_anchor_binding(rangeIndicator_y_anchor_bindingFunctor())
    , rangeleftArcClipper_width_anchor_binding(rangeleftArcClipper_width_anchor_bindingFunctor())
    , rangeleftArcClipper_height_anchor_binding(rangeleftArcClipper_height_anchor_bindingFunctor())
    , rangeLeftArc_rotation_binding(rangeLeftArc_rotation_bindingFunctor())
    , rangeLeftArc_source_binding(rangeLeftArc_source_bindingFunctor())
    , rangeLeftArc_height_binding(rangeLeftArc_height_bindingFunctor())
    , rangeLeftArc_width_binding(rangeLeftArc_width_bindingFunctor())
    , rangeRightArcClipper_x_anchor_binding(rangeRightArcClipper_x_anchor_bindingFunctor())
    , rangeRightArcClipper_width_anchor_binding(rangeRightArcClipper_width_anchor_bindingFunctor())
    , rangeRightArcClipper_height_anchor_binding(rangeRightArcClipper_height_anchor_bindingFunctor())
    , rangeRightArc_rotation_binding(rangeRightArc_rotation_bindingFunctor())
    , rangeRightArc_source_binding(rangeRightArc_source_bindingFunctor())
    , rangeRightArc_height_binding(rangeRightArc_height_bindingFunctor())
    , rangeRightArc_width_binding(rangeRightArc_width_bindingFunctor())
    , rangeRightArc_x_anchor_binding(rangeRightArc_x_anchor_bindingFunctor())
    , rangeRightArc_y_anchor_binding(rangeRightArc_y_anchor_bindingFunctor())
    , lbeam_visible_binding(lbeam_visible_bindingFunctor())
    , lbeam_height_binding(lbeam_height_bindingFunctor())
    , lbeam_width_binding(lbeam_width_bindingFunctor())
    , lbeam_source_binding(lbeam_source_bindingFunctor())
    , handbreak_visible_binding(handbreak_visible_bindingFunctor())
    , handbreak_height_binding(handbreak_height_bindingFunctor())
    , handbreak_width_binding(handbreak_width_bindingFunctor())
    , handbreak_x_anchor_binding(handbreak_x_anchor_bindingFunctor())
    , handbreak_source_binding(handbreak_source_bindingFunctor())
    , hazard_visible_binding(hazard_visible_bindingFunctor())
    , hazard_height_binding(hazard_height_bindingFunctor())
    , hazard_width_binding(hazard_width_bindingFunctor())
    , hazard_x_anchor_binding(hazard_x_anchor_bindingFunctor())
    , hazard_source_binding(hazard_source_bindingFunctor())
    , seatbelt_visible_binding(seatbelt_visible_bindingFunctor())
    , seatbelt_height_binding(seatbelt_height_bindingFunctor())
    , seatbelt_width_binding(seatbelt_width_bindingFunctor())
    , seatbelt_x_anchor_binding(seatbelt_x_anchor_bindingFunctor())
    , seatbelt_source_binding(seatbelt_source_bindingFunctor())
    , indfoglight_visible_binding(indfoglight_visible_bindingFunctor())
    , indfoglight_height_binding(indfoglight_height_bindingFunctor())
    , indfoglight_width_binding(indfoglight_width_bindingFunctor())
    , indfoglight_x_anchor_binding(indfoglight_x_anchor_bindingFunctor())
    , indfoglight_source_binding(indfoglight_source_bindingFunctor())
    , indgunlock_visible_binding(indgunlock_visible_bindingFunctor())
    , indgunlock_height_binding(indgunlock_height_bindingFunctor())
    , indgunlock_width_binding(indgunlock_width_bindingFunctor())
    , indgunlock_x_anchor_binding(indgunlock_x_anchor_bindingFunctor())
    , indgunlock_source_binding(indgunlock_source_bindingFunctor())
    , indright_visible_binding(indright_visible_bindingFunctor())
    , indright_height_binding(indright_height_bindingFunctor())
    , indright_width_binding(indright_width_bindingFunctor())
    , indright_x_anchor_binding(indright_x_anchor_bindingFunctor())
    , indright_source_binding(indright_source_bindingFunctor())
    , indleft_visible_binding(indleft_visible_bindingFunctor())
    , indleft_height_binding(indleft_height_bindingFunctor())
    , indleft_width_binding(indleft_width_bindingFunctor())
    , indleft_source_binding(indleft_source_bindingFunctor())
    , motormalfunc_visible_binding(motormalfunc_visible_bindingFunctor())
    , motormalfunc_height_binding(motormalfunc_height_bindingFunctor())
    , motormalfunc_width_binding(motormalfunc_width_bindingFunctor())
    , motormalfunc_x_anchor_binding(motormalfunc_x_anchor_bindingFunctor())
    , motormalfunc_y_anchor_binding(motormalfunc_y_anchor_bindingFunctor())
    , motormalfunc_source_binding(motormalfunc_source_bindingFunctor())
    , motorfault_visible_binding(motorfault_visible_bindingFunctor())
    , motorfault_height_binding(motorfault_height_bindingFunctor())
    , motorfault_width_binding(motorfault_width_bindingFunctor())
    , motorfault_x_anchor_binding(motorfault_x_anchor_bindingFunctor())
    , motorfault_y_anchor_binding(motorfault_y_anchor_bindingFunctor())
    , motorfault_source_binding(motorfault_source_bindingFunctor())
    , hvil_visible_binding(hvil_visible_bindingFunctor())
    , hvil_height_binding(hvil_height_bindingFunctor())
    , hvil_width_binding(hvil_width_bindingFunctor())
    , hvil_x_anchor_binding(hvil_x_anchor_bindingFunctor())
    , hvil_source_binding(hvil_source_bindingFunctor())
    , iconfault_visible_binding(iconfault_visible_bindingFunctor())
    , iconfault_height_binding(iconfault_height_bindingFunctor())
    , iconfault_width_binding(iconfault_width_bindingFunctor())
    , iconfault_x_anchor_binding(iconfault_x_anchor_bindingFunctor())
    , iconfault_source_binding(iconfault_source_bindingFunctor())
    , batterywarning_visible_binding(batterywarning_visible_bindingFunctor())
    , batterywarning_height_binding(batterywarning_height_bindingFunctor())
    , batterywarning_width_binding(batterywarning_width_bindingFunctor())
    , batterywarning_y_anchor_binding(batterywarning_y_anchor_bindingFunctor())
    , batterywarning_source_binding(batterywarning_source_bindingFunctor())
    , batteryfault_visible_binding(batteryfault_visible_bindingFunctor())
    , batteryfault_height_binding(batteryfault_height_bindingFunctor())
    , batteryfault_width_binding(batteryfault_width_bindingFunctor())
    , batteryfault_y_anchor_binding(batteryfault_y_anchor_bindingFunctor())
    , batteryfault_source_binding(batteryfault_source_bindingFunctor())
    , coolenttemp_visible_binding(coolenttemp_visible_bindingFunctor())
    , coolenttemp_height_binding(coolenttemp_height_bindingFunctor())
    , coolenttemp_width_binding(coolenttemp_width_bindingFunctor())
    , coolenttemp_source_binding(coolenttemp_source_bindingFunctor())
    , bgspeed_visible_binding(bgspeed_visible_bindingFunctor())
    , bgspeed_height_binding(bgspeed_height_bindingFunctor())
    , bgspeed_width_binding(bgspeed_width_bindingFunctor())
    , bgspeed_x_anchor_binding(bgspeed_x_anchor_bindingFunctor())
    , bgspeed_y_anchor_binding(bgspeed_y_anchor_bindingFunctor())
    , bgspeed_source_binding(bgspeed_source_bindingFunctor())
    , faultdark_visible_binding(faultdark_visible_bindingFunctor())
    , faultdark_height_binding(faultdark_height_bindingFunctor())
    , faultdark_width_binding(faultdark_width_bindingFunctor())
    , faultdark_x_anchor_binding(faultdark_x_anchor_bindingFunctor())
    , faultdark_y_anchor_binding(faultdark_y_anchor_bindingFunctor())
    , faultdark_source_binding(faultdark_source_bindingFunctor())
    , faultlight_visible_binding(faultlight_visible_bindingFunctor())
    , faultlight_height_binding(faultlight_height_bindingFunctor())
    , faultlight_width_binding(faultlight_width_bindingFunctor())
    , faultlight_x_anchor_binding(faultlight_x_anchor_bindingFunctor())
    , faultlight_y_anchor_binding(faultlight_y_anchor_bindingFunctor())
    , faultlight_source_binding(faultlight_source_bindingFunctor())
    , charge_visible_binding(charge_visible_bindingFunctor())
    , charge_height_binding(charge_height_bindingFunctor())
    , charge_width_binding(charge_width_bindingFunctor())
    , charge_x_anchor_binding(charge_x_anchor_bindingFunctor())
    , charge_y_anchor_binding(charge_y_anchor_bindingFunctor())
    , charge_source_binding(charge_source_bindingFunctor())
    , breakfailed_visible_binding(breakfailed_visible_bindingFunctor())
    , breakfailed_height_binding(breakfailed_height_bindingFunctor())
    , breakfailed_width_binding(breakfailed_width_bindingFunctor())
    , breakfailed_x_anchor_binding(breakfailed_x_anchor_bindingFunctor())
    , breakfailed_source_binding(breakfailed_source_bindingFunctor())
    , speedid_visible_binding(speedid_visible_bindingFunctor())
    , speedid_x_anchor_binding(speedid_x_anchor_bindingFunctor())
    , speedid_y_anchor_binding(speedid_y_anchor_bindingFunctor())
    , speedid_color_binding(speedid_color_bindingFunctor())
    , speedid_text_binding(speedid_text_bindingFunctor())
    , speedunit_visible_binding(speedunit_visible_bindingFunctor())
    , speedunit_x_anchor_binding(speedunit_x_anchor_bindingFunctor())
    , speedunit_y_anchor_binding(speedunit_y_anchor_bindingFunctor())
    , speedunit_color_binding(speedunit_color_bindingFunctor())
    , ttcname_visible_binding(ttcname_visible_bindingFunctor())
    , ttcname_x_anchor_binding(ttcname_x_anchor_bindingFunctor())
    , ttcname_y_anchor_binding(ttcname_y_anchor_bindingFunctor())
    , ttcname_color_binding(ttcname_color_bindingFunctor())
    , ttcharge_visible_binding(ttcharge_visible_bindingFunctor())
    , ttcharge_x_anchor_binding(ttcharge_x_anchor_bindingFunctor())
    , ttcharge_y_anchor_binding(ttcharge_y_anchor_bindingFunctor())
    , ttcharge_color_binding(ttcharge_color_bindingFunctor())
    , socrect_y_anchor_binding(socrect_y_anchor_bindingFunctor())
    , socid_x_anchor_binding(socid_x_anchor_bindingFunctor())
    , socid_y_anchor_binding(socid_y_anchor_bindingFunctor())
    , socid_color_binding(socid_color_bindingFunctor())
    , socid_text_binding(socid_text_bindingFunctor())
    , socunit_x_anchor_binding(socunit_x_anchor_bindingFunctor())
    , socunit_y_anchor_binding(socunit_y_anchor_bindingFunctor())
    , socunit_color_binding(socunit_color_bindingFunctor())
    , socname_x_anchor_binding(socname_x_anchor_bindingFunctor())
    , socname_y_anchor_binding(socname_y_anchor_bindingFunctor())
    , socname_color_binding(socname_color_bindingFunctor())
    , rectangle_x_anchor_binding(rectangle_x_anchor_bindingFunctor())
    , rectangle_y_anchor_binding(rectangle_y_anchor_bindingFunctor())
    , rangeval_x_anchor_binding(rangeval_x_anchor_bindingFunctor())
    , rangeval_y_anchor_binding(rangeval_y_anchor_bindingFunctor())
    , rangeval_color_binding(rangeval_color_bindingFunctor())
    , rangeval_text_binding(rangeval_text_bindingFunctor())
    , rangeunit_x_anchor_binding(rangeunit_x_anchor_bindingFunctor())
    , rangeunit_y_anchor_binding(rangeunit_y_anchor_bindingFunctor())
    , rangeunit_color_binding(rangeunit_color_bindingFunctor())
    , rangename_x_anchor_binding(rangename_x_anchor_bindingFunctor())
    , rangename_y_anchor_binding(rangename_y_anchor_bindingFunctor())
    , rangename_color_binding(rangename_color_bindingFunctor())
    , modedrive_x_anchor_binding(modedrive_x_anchor_bindingFunctor())
    , modedrive_visible_binding(modedrive_visible_bindingFunctor())
    , modedrive_height_binding(modedrive_height_bindingFunctor())
    , modedrive_width_binding(modedrive_width_bindingFunctor())
    , modedrive_source_binding(modedrive_source_bindingFunctor())
    , modeneutral_x_anchor_binding(modeneutral_x_anchor_bindingFunctor())
    , modeneutral_visible_binding(modeneutral_visible_bindingFunctor())
    , modeneutral_height_binding(modeneutral_height_bindingFunctor())
    , modeneutral_width_binding(modeneutral_width_bindingFunctor())
    , modeneutral_source_binding(modeneutral_source_bindingFunctor())
    , modereverse_x_anchor_binding(modereverse_x_anchor_bindingFunctor())
    , modereverse_visible_binding(modereverse_visible_bindingFunctor())
    , modereverse_height_binding(modereverse_height_bindingFunctor())
    , modereverse_width_binding(modereverse_width_bindingFunctor())
    , modereverse_source_binding(modereverse_source_bindingFunctor())
    , powerid_y_anchor_binding(powerid_y_anchor_bindingFunctor())
    , powerval_color_binding(powerval_color_bindingFunctor())
    , powerval_text_binding(powerval_text_bindingFunctor())
    , powerunit_y_anchor_binding(powerunit_y_anchor_bindingFunctor())
    , powerunit_color_binding(powerunit_color_bindingFunctor())
    , powerunit_text_binding(powerunit_text_bindingFunctor())
    , rpmid_y_anchor_binding(rpmid_y_anchor_bindingFunctor())
    , rpmval_color_binding(rpmval_color_bindingFunctor())
    , rpmval_text_binding(rpmval_text_bindingFunctor())
    , rpmunit_y_anchor_binding(rpmunit_y_anchor_bindingFunctor())
    , rpmunit_color_binding(rpmunit_color_bindingFunctor())
    , tripname_visible_binding(tripname_visible_bindingFunctor())
    , tripname_y_anchor_binding(tripname_y_anchor_bindingFunctor())
    , tripname_color_binding(tripname_color_bindingFunctor())
    , tripname_text_binding(tripname_text_bindingFunctor())
    , tripval_visible_binding(tripval_visible_bindingFunctor())
    , tripval_x_anchor_binding(tripval_x_anchor_bindingFunctor())
    , tripval_y_anchor_binding(tripval_y_anchor_bindingFunctor())
    , tripval_color_binding(tripval_color_bindingFunctor())
    , tripval_text_binding(tripval_text_bindingFunctor())
    , odoname_visible_binding(odoname_visible_bindingFunctor())
    , odoname_x_anchor_binding(odoname_x_anchor_bindingFunctor())
    , odoname_y_anchor_binding(odoname_y_anchor_bindingFunctor())
    , odoname_color_binding(odoname_color_bindingFunctor())
    , odoname_text_binding(odoname_text_bindingFunctor())
    , odoval_visible_binding(odoval_visible_bindingFunctor())
    , odoval_x_anchor_binding(odoval_x_anchor_bindingFunctor())
    , odoval_y_anchor_binding(odoval_y_anchor_bindingFunctor())
    , odoval_color_binding(odoval_color_bindingFunctor())
    , odoval_text_binding(odoval_text_bindingFunctor())
    , bgmode_visible_binding(bgmode_visible_bindingFunctor())
    , bgmode_x_anchor_binding(bgmode_x_anchor_bindingFunctor())
    , bgmode_y_anchor_binding(bgmode_y_anchor_bindingFunctor())
    , bgmode_height_binding(bgmode_height_bindingFunctor())
    , bgmode_width_binding(bgmode_width_bindingFunctor())
    , bgmode_source_binding(bgmode_source_bindingFunctor())
    , batcharging_visible_binding(batcharging_visible_bindingFunctor())
    , batcharging_color_binding(batcharging_color_bindingFunctor())
    , batcharging_x_anchor_binding(batcharging_x_anchor_bindingFunctor())
    , batcharging_y_anchor_binding(batcharging_y_anchor_bindingFunctor())
    , batcharging_text_binding(batcharging_text_bindingFunctor())
    , drivemode_visible_binding(drivemode_visible_bindingFunctor())
    , drivemode_x_anchor_binding(drivemode_x_anchor_bindingFunctor())
    , drivemode_y_anchor_binding(drivemode_y_anchor_bindingFunctor())
    , drivemode_color_binding(drivemode_color_bindingFunctor())
    , drivemode_text_binding(drivemode_text_bindingFunctor())
    , battempidval_color_binding(battempidval_color_bindingFunctor())
    , battempidval_text_binding(battempidval_text_bindingFunctor())
    , tempunit_y_anchor_binding(tempunit_y_anchor_bindingFunctor())
    , tempunit_color_binding(tempunit_color_bindingFunctor())
    , tempunit_text_binding(tempunit_text_bindingFunctor())
    , row_x_anchor_binding(row_x_anchor_bindingFunctor())
    , row_y_anchor_binding(row_y_anchor_bindingFunctor())
    , tday_color_binding(tday_color_bindingFunctor())
    , tday_text_binding(tday_text_bindingFunctor())
    , statictext_color_binding(statictext_color_bindingFunctor())
    , tmon_color_binding(tmon_color_bindingFunctor())
    , tmon_text_binding(tmon_text_bindingFunctor())
    , statictext_2_color_binding(statictext_2_color_bindingFunctor())
    , tyear_color_binding(tyear_color_bindingFunctor())
    , tyear_text_binding(tyear_text_bindingFunctor())
    , timerect_x_anchor_binding(timerect_x_anchor_bindingFunctor())
    , row_2_x_anchor_binding(row_2_x_anchor_bindingFunctor())
    , row_2_y_anchor_binding(row_2_y_anchor_bindingFunctor())
    , thour_color_binding(thour_color_bindingFunctor())
    , thour_text_binding(thour_text_bindingFunctor())
    , statictext_3_color_binding(statictext_3_color_bindingFunctor())
    , tmin_color_binding(tmin_color_bindingFunctor())
    , tmin_text_binding(tmin_text_bindingFunctor())
    , tampm_color_binding(tampm_color_bindingFunctor())
    , tampm_text_binding(tampm_text_bindingFunctor())
    , alertmsg_visible_binding(alertmsg_visible_bindingFunctor())
    , alertmsg_x_anchor_binding(alertmsg_x_anchor_bindingFunctor())
    , alertmsg_y_anchor_binding(alertmsg_y_anchor_bindingFunctor())
    , alertmsg_text_binding(alertmsg_text_bindingFunctor())
    , dtcmsg_visible_binding(dtcmsg_visible_bindingFunctor())
    , dtcmsg_x_anchor_binding(dtcmsg_x_anchor_bindingFunctor())
    , dtcmsg_color_binding(dtcmsg_color_bindingFunctor())
    , dtcmsg_text_binding(dtcmsg_text_bindingFunctor())
    , faultmsg_visible_binding(faultmsg_visible_bindingFunctor())
    , faultmsg_x_anchor_binding(faultmsg_x_anchor_bindingFunctor())
    , faultmsg_text_binding(faultmsg_text_bindingFunctor())
    , selmain_visible_binding(selmain_visible_bindingFunctor())
    , selmain_x_anchor_binding(selmain_x_anchor_bindingFunctor())
    , selmain_y_anchor_binding(selmain_y_anchor_bindingFunctor())
    , selmain_height_binding(selmain_height_bindingFunctor())
    , selmain_width_binding(selmain_width_bindingFunctor())
    , selmain_source_binding(selmain_source_bindingFunctor())
    , selcharge_visible_binding(selcharge_visible_bindingFunctor())
    , selcharge_x_anchor_binding(selcharge_x_anchor_bindingFunctor())
    , selcharge_y_anchor_binding(selcharge_y_anchor_bindingFunctor())
    , selcharge_height_binding(selcharge_height_bindingFunctor())
    , selcharge_width_binding(selcharge_width_bindingFunctor())
    , selcharge_source_binding(selcharge_source_bindingFunctor())
    , selfault_visible_binding(selfault_visible_bindingFunctor())
    , selfault_x_anchor_binding(selfault_x_anchor_bindingFunctor())
    , selfault_y_anchor_binding(selfault_y_anchor_bindingFunctor())
    , selfault_height_binding(selfault_height_bindingFunctor())
    , selfault_width_binding(selfault_width_bindingFunctor())
    , selfault_source_binding(selfault_source_bindingFunctor())
    , deviceinfo_x_anchor_binding(deviceinfo_x_anchor_bindingFunctor())
    , deviceinfo_y_anchor_binding(deviceinfo_y_anchor_bindingFunctor())
    , deviceinfo_visible_binding(deviceinfo_visible_bindingFunctor())
    , deviceinfo_color_binding(deviceinfo_color_bindingFunctor())
    , devicdetails_color_binding(devicdetails_color_bindingFunctor())
    , devicdetails_x_anchor_binding(devicdetails_x_anchor_bindingFunctor())
    , swver_color_binding(swver_color_bindingFunctor())
    , seversion_color_binding(seversion_color_bindingFunctor())
    , seversion_text_binding(seversion_text_bindingFunctor())
    , hwver_color_binding(hwver_color_bindingFunctor())
    , hwversion_color_binding(hwversion_color_bindingFunctor())
    , hwversion_text_binding(hwversion_text_bindingFunctor())
    , slnum_color_binding(slnum_color_bindingFunctor())
    , slnumtxt_color_binding(slnumtxt_color_bindingFunctor())
    , slnumtxt_text_binding(slnumtxt_text_bindingFunctor())
    , vinnum_color_binding(vinnum_color_bindingFunctor())
    , vinnumtxt_color_binding(vinnumtxt_color_bindingFunctor())
    , vinnumtxt_text_binding(vinnumtxt_text_bindingFunctor())
{
    appendChild(this, &ComponentAttachedType_node);
    // property image icon_timebar_red : "assets/1024x600/icon_timebar_red.svg"
    // line 214  "qml/hmimain.qml"
    icon_timebar_red.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Ftimebar_5Fred_10581680189072318016_handle));
    // property image icon_timebar_green : "assets/1024x600/icon_timebar_green.svg"
    // line 213  "qml/hmimain.qml"
    icon_timebar_green.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Ftimebar_5Fgreen_3424730075918112142_handle));
    // property image icon_light_sel2 : "assets/1024x600/icon_light_sel2.png"
    // line 212  "qml/hmimain.qml"
    icon_light_sel2.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Flight_5Fsel2_5227814172742466945_handle));
    // property image icon_light_sel1 : "assets/1024x600/icon_light_sel1.png"
    // line 211  "qml/hmimain.qml"
    icon_light_sel1.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Flight_5Fsel1_12672939284137474243_handle));
    // property image icon_light_sel0 : "assets/1024x600/icon_light_sel0.png"
    // line 210  "qml/hmimain.qml"
    icon_light_sel0.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Flight_5Fsel0_17660927272431493077_handle));
    // property image icon_dark_sel2 : "assets/1024x600/icon_dark_sel2.png"
    // line 209  "qml/hmimain.qml"
    icon_dark_sel2.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fdark_5Fsel2_5414158481472900161_handle));
    // property image icon_dark_sel1 : "assets/1024x600/icon_dark_sel1.png"
    // line 208  "qml/hmimain.qml"
    icon_dark_sel1.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fdark_5Fsel1_8972954664291827559_handle));
    // property image icon_dark_sel0 : "assets/1024x600/icon_dark_sel0.png"
    // line 207  "qml/hmimain.qml"
    icon_dark_sel0.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fdark_5Fsel0_3618032118870097789_handle));
    // property image bg_dark_mode : "assets/1024x600/bg_dark_mode.png"
    // line 206  "qml/hmimain.qml"
    bg_dark_mode.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Fdark_5Fmode_10741302608000416473_handle));
    // property image bg_light_mode : "assets/1024x600/bg_light_mode.png"
    // line 205  "qml/hmimain.qml"
    bg_light_mode.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Flight_5Fmode_2490986634729007414_handle));
    // property image icon_reverse : "assets/1024x600/icon_reverse.png"
    // line 203  "qml/hmimain.qml"
    icon_reverse.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Freverse_17416783858259955841_handle));
    // property image icon_neutral : "assets/1024x600/icon_neutral.png"
    // line 202  "qml/hmimain.qml"
    icon_neutral.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fneutral_11758454277432732924_handle));
    // property image icon_drive : "assets/1024x600/icon_drive.png"
    // line 201  "qml/hmimain.qml"
    icon_drive.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fdrive_13663725601868292502_handle));
    // property image icon_indicatorright : "assets/1024x600/icon_indicatorright.png"
    // line 196  "qml/hmimain.qml"
    icon_indicatorright.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Findicatorright_16367534964096713469_handle));
    // property image icon_indicatorleft : "assets/1024x600/icon_indicatorleft.png"
    // line 195  "qml/hmimain.qml"
    icon_indicatorleft.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Findicatorleft_11280704117166167349_handle));
    // property image icon_breakfailed : "assets/1024x600/icon_breakfailed.png"
    // line 194  "qml/hmimain.qml"
    icon_breakfailed.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fbreakfailed_9978985468916230188_handle));
    // property image icon_gunlock : "assets/1024x600/icon_gunlock.png"
    // line 193  "qml/hmimain.qml"
    icon_gunlock.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fgunlock_2496129977020822111_handle));
    // property image icon_batterywarning : "assets/1024x600/icon_batterywarning.png"
    // line 192  "qml/hmimain.qml"
    icon_batterywarning.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fbatterywarning_15221464043060138405_handle));
    // property image icon_batteryfailure : "assets/1024x600/icon_batteryfailure.png"
    // line 191  "qml/hmimain.qml"
    icon_batteryfailure.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fbatteryfailure_8857017888184466976_handle));
    // property image icon_fault : "assets/1024x600/icon_fault.png"
    // line 190  "qml/hmimain.qml"
    icon_fault.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Ffault_461058326346938906_handle));
    // property image icon_hvil : "assets/1024x600/icon_hvil.png"
    // line 189  "qml/hmimain.qml"
    icon_hvil.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fhvil_8301420484188515714_handle));
    // property image icon_seatbelt : "assets/1024x600/icon_seatbelt.png"
    // line 188  "qml/hmimain.qml"
    icon_seatbelt.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fseatbelt_3539755803749815478_handle));
    // property image icon_handbreak : "assets/1024x600/icon_handbreak.png"
    // line 187  "qml/hmimain.qml"
    icon_handbreak.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fhandbreak_11812009499601886511_handle));
    // property image icon_coolenttemp: "assets/1024x600/icon_coolenttemp.png"
    // line 186  "qml/hmimain.qml"
    icon_coolenttemp.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fcoolenttemp_267475776831725821_handle));
    // property image icon_motormalfun: "assets/1024x600/icon_motormalfun.png"
    // line 185  "qml/hmimain.qml"
    icon_motormalfun.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fmotormalfun_6794933055433336268_handle));
    // property image icon_motorfault: "assets/1024x600/icon_motorfault.png"
    // line 184  "qml/hmimain.qml"
    icon_motorfault.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fmotorfault_925797647956377049_handle));
    // property image icon_hazard : "assets/1024x600/icon_hazard.png"
    // line 183  "qml/hmimain.qml"
    icon_hazard.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fhazard_16444777003624801327_handle));
    // property image icon_highbeam : "assets/1024x600/icon_highbeam.png"
    // line 182  "qml/hmimain.qml"
    icon_highbeam.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Fhighbeam_1719669687734742552_handle));
    // property image icon_lowbeam : "assets/1024x600/icon_lowbeam.png"
    // line 181  "qml/hmimain.qml"
    icon_lowbeam.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Flowbeam_4238623879086857656_handle));
    // property image icon_foglight: "assets/1024x600/icon_foglight.png"
    // line 180  "qml/hmimain.qml"
    icon_foglight.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_icon_5Ffoglight_528535705063815764_handle));
    // property image bg_dark_ring_red : "assets/1024x600/bg_dark_ring_red.png"
    // line 178  "qml/hmimain.qml"
    bg_dark_ring_red.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Fdark_5Fring_5Fred_11597768771768360761_handle));
    // property image bg_dark_ring_green : "assets/1024x600/bg_dark_ring_green.png"
    // line 177  "qml/hmimain.qml"
    bg_dark_ring_green.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Fdark_5Fring_5Fgreen_1894783914989045776_handle));
    // property image bg_light_ring_red : "assets/1024x600/bg_light_ring_red.png"
    // line 175  "qml/hmimain.qml"
    bg_light_ring_red.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Flight_5Fring_5Fred_16037564956433745116_handle));
    // property image bg_light_ring_green : "assets/1024x600/bg_light_ring_green.png"
    // line 174  "qml/hmimain.qml"
    bg_light_ring_green.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Flight_5Fring_5Fgreen_5497126269234903875_handle));
    // property image bg_light_charge_blue : "assets/1024x600/bg_light_charge_blue.png"
    // line 171  "qml/hmimain.qml"
    bg_light_charge_blue.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Flight_5Fcharge_5Fblue_16831047445036315738_handle));
    // property image bg_dark_charge_blue : "assets/1024x600/bg_dark_charge_blue.png"
    // line 170  "qml/hmimain.qml"
    bg_dark_charge_blue.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Fdark_5Fcharge_5Fblue_8874542188519920752_handle));
    // property image bg_dark_green : "assets/1024x600/bg_dark_green.png"
    // line 167  "qml/hmimain.qml"
    bg_dark_green.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Fdark_5Fgreen_9690728259582573138_handle));
    // property image bg_light_green : "assets/1024x600/bg_light_green.png"
    // line 166  "qml/hmimain.qml"
    bg_light_green.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Flight_5Fgreen_13604947674073245280_handle));
    // property image bg_light_fault : "assets/1024x600/bg_light_fault_yellow.png"
    // line 165  "qml/hmimain.qml"
    bg_light_fault.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Flight_5Ffault_5Fyellow_6874303195522552643_handle));
    // property image bg_dark_fault : "assets/1024x600/bg_dark_fault_yellow.png"
    // line 164  "qml/hmimain.qml"
    bg_dark_fault.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Fdark_5Ffault_5Fyellow_7871725417570526092_handle));
    // property image bg_splash:  "assets/1024x600/bg_splash.png"
    // line 161  "qml/hmimain.qml"
    bg_splash.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Fsplash_3284188603857149310_handle));
    // property image bg_light_speed:  "assets/1024x600/bg_light_speed.png"
    // line 159  "qml/hmimain.qml"
    bg_light_speed.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Flight_5Fspeed_13090697642961798291_handle));
    // property image bg_dark_speed:  "assets/1024x600/bg_dark_speed.png"
    // line 158  "qml/hmimain.qml"
    bg_dark_speed.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Fdark_5Fspeed_8900206339527240340_handle));
    // property image bg_light_main:  "assets/1024x600/bg_light_main.png"
    // line 157  "qml/hmimain.qml"
    bg_light_main.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Flight_5Fmain_2063180190131945813_handle));
    // property image bg_dark_main:  "assets/1024x600/bg_dark_main.png"
    // line 156  "qml/hmimain.qml"
    bg_dark_main.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_bg_5Fdark_5Fmain_3603716216601726774_handle));
    // readonly property string  sVersion : "Cluster_Xavion_HMI_V12.00_14032025"
    // line 154  "qml/hmimain.qml"
    sVersion.setValue(Qul::Private::String(Qul::Private::Latin1String("Cluster_Xavion_HMI_V12.00_14032025", 34)));
    // readonly property string  scolor_red :"red"
    // line 152  "qml/hmimain.qml"
    scolor_red.setValue(Qul::Private::String(Qul::Private::ColorIdString("red", 3, 0xffff0000)));
    // readonly property string  scolor_dark :"#303030"
    // line 151  "qml/hmimain.qml"
    scolor_dark.setValue(Qul::Private::String(Qul::Private::ColorIdString("#303030", 7, 0xff303030)));
    // readonly property string  scolor_light :"#FFFFFF"
    // line 150  "qml/hmimain.qml"
    scolor_light.setValue(Qul::Private::String(Qul::Private::ColorIdString("#FFFFFF", 7, 0xffffffff)));
    // readonly property string  scolor :"#FFFFFF"
    // line 149  "qml/hmimain.qml"
    scolor.setValue(Qul::Private::String(Qul::Private::ColorIdString("#FFFFFF", 7, 0xffffffff)));
    // property string  sFault4:""
    // line 147  "qml/hmimain.qml"
    sFault4.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  sFault3:""
    // line 146  "qml/hmimain.qml"
    sFault3.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  sFault2:""
    // line 145  "qml/hmimain.qml"
    sFault2.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  sFault1:""
    // line 144  "qml/hmimain.qml"
    sFault1.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  sFault0:""
    // line 143  "qml/hmimain.qml"
    sFault0.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  sFault:""
    // line 142  "qml/hmimain.qml"
    sFault.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  sswvermsg:""
    // line 139  "qml/hmimain.qml"
    sswvermsg.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  shwvermsg:""
    // line 138  "qml/hmimain.qml"
    shwvermsg.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  sslnummsg:""
    // line 137  "qml/hmimain.qml"
    sslnummsg.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  svinnummsg:""
    // line 136  "qml/hmimain.qml"
    svinnummsg.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  smin :"0"
    // line 133  "qml/hmimain.qml"
    smin.setValue(Qul::Private::String(Qul::Private::Latin1String("0", 1)));
    // property string  shour :"0"
    // line 132  "qml/hmimain.qml"
    shour.setValue(Qul::Private::String(Qul::Private::Latin1String("0", 1)));
    // property string  smonth :"0"
    // line 131  "qml/hmimain.qml"
    smonth.setValue(Qul::Private::String(Qul::Private::Latin1String("0", 1)));
    // property string  sday :"0"
    // line 130  "qml/hmimain.qml"
    sday.setValue(Qul::Private::String(Qul::Private::Latin1String("0", 1)));
    // property string  sPM :"PM"
    // line 129  "qml/hmimain.qml"
    sPM.setValue(Qul::Private::String(Qul::Private::Latin1String("PM", 2)));
    // readonly property string  stxtmesbuttonError :"Button Stuck"
    // line 128  "qml/hmimain.qml"
    stxtmesbuttonError.setValue(Qul::Private::String(Qul::Private::Latin1String("Button Stuck", 12)));
    // readonly property string  stxtmestripResetSuccess :"Trip Reset Success"
    // line 127  "qml/hmimain.qml"
    stxtmestripResetSuccess.setValue(Qul::Private::String(Qul::Private::Latin1String("Trip Reset Success", 18)));
    // property string    sAlertRtcBat : "Alert!! : Bat Low, Date and time disabled"
    // line 125  "qml/hmimain.qml"
    sAlertRtcBat.setValue(Qul::Private::String(Qul::Private::Latin1String("Alert!! : Bat Low, Date and time disabled", 41)));
    // readonly property string  stxtmesRtcError :"RTC not working,"
    // line 123  "qml/hmimain.qml"
    stxtmesRtcError.setValue(Qul::Private::String(Qul::Private::Latin1String("RTC not working,", 16)));
    // readonly property string  stxtmesRtcSetError :"RTC not Not Set, Battery may be low"
    // line 121  "qml/hmimain.qml"
    stxtmesRtcSetError.setValue(Qul::Private::String(Qul::Private::Latin1String("RTC not Not Set, Battery may be low", 35)));
    // readonly property string  stxtmesNoCanData :"No CAN Data"
    // line 119  "qml/hmimain.qml"
    stxtmesNoCanData.setValue(Qul::Private::String(Qul::Private::Latin1String("No CAN Data", 11)));
    // readonly property string  stxtmesCanError :"CAN input error"
    // line 118  "qml/hmimain.qml"
    stxtmesCanError.setValue(Qul::Private::String(Qul::Private::Latin1String("CAN input error", 15)));
    // property string  sfaultmsg :""
    // line 115  "qml/hmimain.qml"
    sfaultmsg.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  smessage :""
    // line 113  "qml/hmimain.qml"
    smessage.setValue(Qul::Private::String(Qul::Private::Latin1String("", 0)));
    // property string  rhwvermsg :"0.0"
    // line 111  "qml/hmimain.qml"
    rhwvermsg.setValue(Qul::Private::String(Qul::Private::Latin1String("0.0", 3)));
    // property string  rswvermsg :"0.0"
    // line 110  "qml/hmimain.qml"
    rswvermsg.setValue(Qul::Private::String(Qul::Private::Latin1String("0.0", 3)));
    // property string  rpowerval : "0.0"
    // line 108  "qml/hmimain.qml"
    rpowerval.setValue(Qul::Private::String(Qul::Private::Latin1String("0.0", 3)));
    // property string  rodoval :"0.0"
    // line 107  "qml/hmimain.qml"
    rodoval.setValue(Qul::Private::String(Qul::Private::Latin1String("0.0", 3)));
    // property string  rtripval :"0.0"
    // line 106  "qml/hmimain.qml"
    rtripval.setValue(Qul::Private::String(Qul::Private::Latin1String("0.0", 3)));
    // property int  isoctimeval:0
    // line 104  "qml/hmimain.qml"
    isoctimeval.setValue(0);
    // property int  iFaultCount : 0
    // line 103  "qml/hmimain.qml"
    iFaultCount.setValue(0);
    // property int  iFault43 : 0
    // line 102  "qml/hmimain.qml"
    iFault43.setValue(0);
    // property int  iFault42 : 0
    // line 101  "qml/hmimain.qml"
    iFault42.setValue(0);
    // property int  iFault41 : 0
    // line 100  "qml/hmimain.qml"
    iFault41.setValue(0);
    // property int  iFault40 : 0
    // line 99  "qml/hmimain.qml"
    iFault40.setValue(0);
    // property int  iFault33 : 0
    // line 97  "qml/hmimain.qml"
    iFault33.setValue(0);
    // property int  iFault32 : 0
    // line 96  "qml/hmimain.qml"
    iFault32.setValue(0);
    // property int  iFault31 : 0
    // line 95  "qml/hmimain.qml"
    iFault31.setValue(0);
    // property int  iFault30 : 0
    // line 94  "qml/hmimain.qml"
    iFault30.setValue(0);
    // property int  iFault23 : 0
    // line 92  "qml/hmimain.qml"
    iFault23.setValue(0);
    // property int  iFault22 : 0
    // line 91  "qml/hmimain.qml"
    iFault22.setValue(0);
    // property int  iFault21 : 0
    // line 90  "qml/hmimain.qml"
    iFault21.setValue(0);
    // property int  iFault20 : 0
    // line 89  "qml/hmimain.qml"
    iFault20.setValue(0);
    // property int  iFault13 : 0
    // line 87  "qml/hmimain.qml"
    iFault13.setValue(0);
    // property int  iFault12 : 0
    // line 86  "qml/hmimain.qml"
    iFault12.setValue(0);
    // property int  iFault11 : 0
    // line 85  "qml/hmimain.qml"
    iFault11.setValue(0);
    // property int  iFault10 : 0
    // line 84  "qml/hmimain.qml"
    iFault10.setValue(0);
    // property int  iFault03 : 0
    // line 82  "qml/hmimain.qml"
    iFault03.setValue(0);
    // property int  iFault02 : 0
    // line 81  "qml/hmimain.qml"
    iFault02.setValue(0);
    // property int  iFault01 : 0
    // line 80  "qml/hmimain.qml"
    iFault01.setValue(0);
    // property int  iFault00 : 0
    // line 79  "qml/hmimain.qml"
    iFault00.setValue(0);
    // property int 	rangeAniVal: 0;
    // line 77  "qml/hmimain.qml"
    rangeAniVal.setValue(0);
    // property int 	socAniVal: 0;
    // line 76  "qml/hmimain.qml"
    socAniVal.setValue(0);
    // property int	 icurcount :0
    // line 74  "qml/hmimain.qml"
    icurcount.setValue(0);
    // property int	 icurmin :0
    // line 73  "qml/hmimain.qml"
    icurmin.setValue(0);
    // property int	 icurhour :0
    // line 72  "qml/hmimain.qml"
    icurhour.setValue(0);
    // property int     icuryear: 0
    // line 71  "qml/hmimain.qml"
    icuryear.setValue(0);
    // property int	 icurmon :0
    // line 70  "qml/hmimain.qml"
    icurmon.setValue(0);
    // property int	 icurday :0
    // line 69  "qml/hmimain.qml"
    icurday.setValue(0);
    // property int 	 icursoc:0
    // line 68  "qml/hmimain.qml"
    icursoc.setValue(0);
    // property int     istate: 0xff
    // line 67  "qml/hmimain.qml"
    istate.setValue(0);
    // property int     isedit: 0
    // line 66  "qml/hmimain.qml"
    isedit.setValue(0);
    // property int 	itrip:0
    // line 64  "qml/hmimain.qml"
    itrip.setValue(0);
    // property int 	iodo:0
    // line 63  "qml/hmimain.qml"
    iodo.setValue(0);
    // property int 	irange:0
    // line 62  "qml/hmimain.qml"
    irange.setValue(0);
    // property int 	 irpm:0
    // line 61  "qml/hmimain.qml"
    irpm.setValue(0);
    // property int 	 ipower:0
    // line 60  "qml/hmimain.qml"
    ipower.setValue(0);
    // property int    itimeval:0
    // line 58  "qml/hmimain.qml"
    itimeval.setValue(0);
    // property int     currentState: 0
    // line 56  "qml/hmimain.qml"
    currentState.setValue(0);
    // property int     ichargemin:0
    // line 55  "qml/hmimain.qml"
    ichargemin.setValue(0);
    // property int     ichargehrs:0
    // line 54  "qml/hmimain.qml"
    ichargehrs.setValue(0);
    // property int     ichargeTime:0
    // line 53  "qml/hmimain.qml"
    ichargeTime.setValue(0);
    // property int     iGearMode: 1
    // line 52  "qml/hmimain.qml"
    iGearMode.setValue(1);
    // property int     iDriveMode: 0
    // line 51  "qml/hmimain.qml"
    iDriveMode.setValue(0);
    // property int     battempval: 0
    // line 50  "qml/hmimain.qml"
    battempval.setValue(0);
    // property int     iSocval: 0
    // line 49  "qml/hmimain.qml"
    iSocval.setValue(0);
    // property int     motortempval: 0
    // line 48  "qml/hmimain.qml"
    motortempval.setValue(0);
    // property int     curspeed: -1
    // line 47  "qml/hmimain.qml"
    curspeed.setValue(-1);
    // property int     speed: 0
    // line 46  "qml/hmimain.qml"
    speed.setValue(0);
    // property int     iscreen: 0	            // 0->main  1:charge 2: Fault
    // line 45  "qml/hmimain.qml"
    iscreen.setValue(0);
    // property bool 	 bdeviceinfo :0
    // line 43  "qml/hmimain.qml"
    bdeviceinfo.setValue(0);
    // property bool 	 bwarning :0
    // line 42  "qml/hmimain.qml"
    bwarning.setValue(0);
    // property bool    bFault4: 0
    // line 40  "qml/hmimain.qml"
    bFault4.setValue(0);
    // property bool    bFault3: 0
    // line 39  "qml/hmimain.qml"
    bFault3.setValue(0);
    // property bool    bFault2: 0
    // line 38  "qml/hmimain.qml"
    bFault2.setValue(0);
    // property bool    bFault1: 0
    // line 37  "qml/hmimain.qml"
    bFault1.setValue(0);
    // property bool    bFault0: 0
    // line 36  "qml/hmimain.qml"
    bFault0.setValue(0);
    // property bool    isdarktheme: true
    // line 34  "qml/hmimain.qml"
    isdarktheme.setValue(true);
    // property bool    ismultierr: 0
    // line 33  "qml/hmimain.qml"
    ismultierr.setValue(0);
    // property bool 	 bchargerStatus :0
    // line 32  "qml/hmimain.qml"
    bchargerStatus.setValue(0);
    // property bool 	 bHandBrake:0
    // line 31  "qml/hmimain.qml"
    bHandBrake.setValue(0);
    // property bool 	 bSafetyBelt:0
    // line 30  "qml/hmimain.qml"
    bSafetyBelt.setValue(0);
    // property bool 	 bBrakeFailed:0
    // line 29  "qml/hmimain.qml"
    bBrakeFailed.setValue(0);
    // property bool 	 bHazard: 0
    // line 28  "qml/hmimain.qml"
    bHazard.setValue(0);
    // property bool    bRightInd: 0
    // line 27  "qml/hmimain.qml"
    bRightInd.setValue(0);
    // property bool    bLeftInd: 0
    // line 26  "qml/hmimain.qml"
    bLeftInd.setValue(0);
    // property bool    bLowBeam: 0
    // line 25  "qml/hmimain.qml"
    bLowBeam.setValue(0);
    // property bool    bHighBeam: 0
    // line 24  "qml/hmimain.qml"
    bHighBeam.setValue(0);
    // property bool    bFoglight: 0
    // line 23  "qml/hmimain.qml"
    bFoglight.setValue(0);
    // property bool    bcurpm:0
    // line 22  "qml/hmimain.qml"
    bcurpm.setValue(0);
    // property bool 	 bGunlock:0
    // line 21  "qml/hmimain.qml"
    bGunlock.setValue(0);
    // property bool 	 bCoolent:0
    // line 20  "qml/hmimain.qml"
    bCoolent.setValue(0);
    // property bool 	 bHvil: 0
    // line 19  "qml/hmimain.qml"
    bHvil.setValue(0);
    // property bool    bMotorMalfunc: 0
    // line 18  "qml/hmimain.qml"
    bMotorMalfunc.setValue(0);
    // property bool    bMotorfault: 0
    // line 17  "qml/hmimain.qml"
    bMotorfault.setValue(0);
    // property bool    bBatMalfunc: 0
    // line 16  "qml/hmimain.qml"
    bBatMalfunc.setValue(0);
    // property bool    bBatfault: 0
    // line 15  "qml/hmimain.qml"
    bBatfault.setValue(0);
    // property bool 	 benablefault:0
    // line 14  "qml/hmimain.qml"
    benablefault.setValue(0);
    // property bool    btripreset:0
    // line 13  "qml/hmimain.qml"
    btripreset.setValue(0);
    // property bool    bregen:0
    // line 12  "qml/hmimain.qml"
    bregen.setValue(0);
    // height: 600
    // line 10  "qml/hmimain.qml"
    height.setValue(600);
    // width: 1024
    // line 9  "qml/hmimain.qml"
    width.setValue(1024);
    // Timer {
    // line 234  "qml/hmimain.qml"
    appendChild(this, &timer);
    // repeat: false
    // line 237  "qml/hmimain.qml"
    timer.repeat.setValue(false);
    // interval: 3000
    // line 236  "qml/hmimain.qml"
    timer.interval.setValue(3000);
    // Timer {
    // line 245  "qml/hmimain.qml"
    appendChild(this, &triptimer);
    // repeat: false
    // line 248  "qml/hmimain.qml"
    triptimer.repeat.setValue(false);
    // interval: 5000
    // line 247  "qml/hmimain.qml"
    triptimer.interval.setValue(5000);
    // Timer {
    // line 257  "qml/hmimain.qml"
    appendChild(this, &deviceinfotimer);
    // repeat: false
    // line 260  "qml/hmimain.qml"
    deviceinfotimer.repeat.setValue(false);
    // interval: 5000
    // line 259  "qml/hmimain.qml"
    deviceinfotimer.interval.setValue(5000);
    // Rectangle {
    // line 270  "qml/hmimain.qml"
    appendChild(this, &mainscreen);
    // color: "transparent"
    // line 273  "qml/hmimain.qml"
    mainscreen.color.setValue(0x0);
    mainscreen.x.setValue(int());
    mainscreen_width_anchor_binding.init<hmimain, &hmimain::mainscreen_width_anchor_binding>(mainscreen.width);
    mainscreen.width.setBinding(&mainscreen_width_anchor_binding);
    mainscreen.y.setValue(int());
    mainscreen_height_anchor_binding.init<hmimain, &hmimain::mainscreen_height_anchor_binding>(mainscreen.height);
    mainscreen.height.setBinding(&mainscreen_height_anchor_binding);
    // Rectangle {
    // line 276  "qml/hmimain.qml"
    appendChild(&this->mainscreen, &splashscreen);
    // visible:true
    // line 280  "qml/hmimain.qml"
    splashscreen.visible.setValue(true);
    // color:"transparent"
    // line 279  "qml/hmimain.qml"
    splashscreen.color.setValue(0x0);
    splashscreen.x.setValue(int());
    splashscreen_width_anchor_binding.init<hmimain, &hmimain::splashscreen_width_anchor_binding>(splashscreen.width);
    splashscreen.width.setBinding(&splashscreen_width_anchor_binding);
    splashscreen.y.setValue(int());
    splashscreen_height_anchor_binding.init<hmimain, &hmimain::splashscreen_height_anchor_binding>(splashscreen.height);
    splashscreen.height.setBinding(&splashscreen_height_anchor_binding);
    // Image {
    // line 281  "qml/hmimain.qml"
    appendChild(&this->splashscreen, &splashlogo);
    // visible:true
    // line 287  "qml/hmimain.qml"
    splashlogo.visible.setValue(true);
    splashlogo_x_anchor_binding.init<hmimain, &hmimain::splashlogo_x_anchor_binding>(splashlogo.x);
    splashlogo.x.setBinding(&splashlogo_x_anchor_binding);
    splashlogo_y_anchor_binding.init<hmimain, &hmimain::splashlogo_y_anchor_binding>(splashlogo.y);
    splashlogo.y.setBinding(&splashlogo_y_anchor_binding);
    splashlogo_height_binding.init<hmimain, &hmimain::splashlogo_height_binding>(splashlogo.height);
    // height: implicitHeight
    // line 285  "qml/hmimain.qml"
    splashlogo.height.setBinding(&splashlogo_height_binding);
    splashlogo_width_binding.init<hmimain, &hmimain::splashlogo_width_binding>(splashlogo.width);
    // width: implicitWidth
    // line 284  "qml/hmimain.qml"
    splashlogo.width.setBinding(&splashlogo_width_binding);
    splashlogo_source_binding.init<hmimain, &hmimain::splashlogo_source_binding>(splashlogo.source);
    // source: bg_splash
    // line 283  "qml/hmimain.qml"
    splashlogo.source.setBinding(&splashlogo_source_binding);
    // Rectangle {
    // line 291  "qml/hmimain.qml"
    appendChild(&this->mainscreen, &homescreen);
    // visible:false
    // line 295  "qml/hmimain.qml"
    homescreen.visible.setValue(false);
    // color:"transparent"
    // line 294  "qml/hmimain.qml"
    homescreen.color.setValue(0x0);
    homescreen.x.setValue(int());
    homescreen_width_anchor_binding.init<hmimain, &hmimain::homescreen_width_anchor_binding>(homescreen.width);
    homescreen.width.setBinding(&homescreen_width_anchor_binding);
    homescreen.y.setValue(int());
    homescreen_height_anchor_binding.init<hmimain, &hmimain::homescreen_height_anchor_binding>(homescreen.height);
    homescreen.height.setBinding(&homescreen_height_anchor_binding);
    // Image {
    // line 297  "qml/hmimain.qml"
    appendChild(&this->homescreen, &bgmain);
    // visible:true
    // line 303  "qml/hmimain.qml"
    bgmain.visible.setValue(true);
    bgmain_height_binding.init<hmimain, &hmimain::bgmain_height_binding>(bgmain.height);
    // height: implicitHeight
    // line 302  "qml/hmimain.qml"
    bgmain.height.setBinding(&bgmain_height_binding);
    bgmain_width_binding.init<hmimain, &hmimain::bgmain_width_binding>(bgmain.width);
    // width: implicitWidth
    // line 301  "qml/hmimain.qml"
    bgmain.width.setBinding(&bgmain_width_binding);
    bgmain.x.setValue(int());
    bgmain_width_anchor_binding.init<hmimain, &hmimain::bgmain_width_anchor_binding>(bgmain.width);
    bgmain.width.setBinding(&bgmain_width_anchor_binding);
    bgmain.y.setValue(int());
    bgmain_height_anchor_binding.init<hmimain, &hmimain::bgmain_height_anchor_binding>(bgmain.height);
    bgmain.height.setBinding(&bgmain_height_anchor_binding);
    bgmain_source_binding.init<hmimain, &hmimain::bgmain_source_binding>(bgmain.source);
    // source:(isdarktheme)?bg_dark_main:bg_light_main
    // line 299  "qml/hmimain.qml"
    bgmain.source.setBinding(&bgmain_source_binding);
    // Image {
    // line 307  "qml/hmimain.qml"
    appendChild(&this->homescreen, &socring_dark);
    socring_dark_visible_binding.init<hmimain, &hmimain::socring_dark_visible_binding>(socring_dark.visible);
    // visible:  (isdarktheme)?1:0
    // line 316  "qml/hmimain.qml"
    socring_dark.visible.setBinding(&socring_dark_visible_binding);
    socring_dark_height_binding.init<hmimain, &hmimain::socring_dark_height_binding>(socring_dark.height);
    // height: implicitHeight
    // line 315  "qml/hmimain.qml"
    socring_dark.height.setBinding(&socring_dark_height_binding);
    socring_dark_width_binding.init<hmimain, &hmimain::socring_dark_width_binding>(socring_dark.width);
    // width: implicitWidth
    // line 314  "qml/hmimain.qml"
    socring_dark.width.setBinding(&socring_dark_width_binding);
    socring_dark.x.setValue(int(1));
    socring_dark_y_anchor_binding.init<hmimain, &hmimain::socring_dark_y_anchor_binding>(socring_dark.y);
    socring_dark.y.setBinding(&socring_dark_y_anchor_binding);
    socring_dark_source_binding.init<hmimain, &hmimain::socring_dark_source_binding>(socring_dark.source);
    // source:  (socAniVal > 72)?bg_dark_ring_green:bg_dark_ring_red
    // line 309  "qml/hmimain.qml"
    socring_dark.source.setBinding(&socring_dark_source_binding);
    // Image {
    // line 319  "qml/hmimain.qml"
    appendChild(&this->homescreen, &rangering_dark);
    rangering_dark_visible_binding.init<hmimain, &hmimain::rangering_dark_visible_binding>(rangering_dark.visible);
    // visible:  (isdarktheme)?1:0
    // line 328  "qml/hmimain.qml"
    rangering_dark.visible.setBinding(&rangering_dark_visible_binding);
    rangering_dark_height_binding.init<hmimain, &hmimain::rangering_dark_height_binding>(rangering_dark.height);
    // height: implicitHeight
    // line 327  "qml/hmimain.qml"
    rangering_dark.height.setBinding(&rangering_dark_height_binding);
    rangering_dark_width_binding.init<hmimain, &hmimain::rangering_dark_width_binding>(rangering_dark.width);
    // width: implicitWidth
    // line 326  "qml/hmimain.qml"
    rangering_dark.width.setBinding(&rangering_dark_width_binding);
    rangering_dark_x_anchor_binding.init<hmimain, &hmimain::rangering_dark_x_anchor_binding>(rangering_dark.x);
    rangering_dark.x.setBinding(&rangering_dark_x_anchor_binding);
    rangering_dark_y_anchor_binding.init<hmimain, &hmimain::rangering_dark_y_anchor_binding>(rangering_dark.y);
    rangering_dark.y.setBinding(&rangering_dark_y_anchor_binding);
    rangering_dark_source_binding.init<hmimain, &hmimain::rangering_dark_source_binding>(rangering_dark.source);
    // source:  (rangeAniVal > 28)?bg_dark_ring_green:bg_dark_ring_red
    // line 321  "qml/hmimain.qml"
    rangering_dark.source.setBinding(&rangering_dark_source_binding);
    // Image {
    // line 331  "qml/hmimain.qml"
    appendChild(&this->homescreen, &socring_light);
    socring_light_visible_binding.init<hmimain, &hmimain::socring_light_visible_binding>(socring_light.visible);
    // visible:  (isdarktheme)?0:1
    // line 340  "qml/hmimain.qml"
    socring_light.visible.setBinding(&socring_light_visible_binding);
    socring_light_height_binding.init<hmimain, &hmimain::socring_light_height_binding>(socring_light.height);
    // height: implicitHeight
    // line 339  "qml/hmimain.qml"
    socring_light.height.setBinding(&socring_light_height_binding);
    socring_light_width_binding.init<hmimain, &hmimain::socring_light_width_binding>(socring_light.width);
    // width: implicitWidth
    // line 338  "qml/hmimain.qml"
    socring_light.width.setBinding(&socring_light_width_binding);
    socring_light.x.setValue(int());
    socring_light_y_anchor_binding.init<hmimain, &hmimain::socring_light_y_anchor_binding>(socring_light.y);
    socring_light.y.setBinding(&socring_light_y_anchor_binding);
    socring_light_source_binding.init<hmimain, &hmimain::socring_light_source_binding>(socring_light.source);
    // source:  (socAniVal > 72)?bg_light_ring_green:bg_light_ring_red
    // line 333  "qml/hmimain.qml"
    socring_light.source.setBinding(&socring_light_source_binding);
    // Image {
    // line 343  "qml/hmimain.qml"
    appendChild(&this->homescreen, &rangering_light);
    rangering_light_visible_binding.init<hmimain, &hmimain::rangering_light_visible_binding>(rangering_light.visible);
    // visible:  (isdarktheme)?0:1
    // line 352  "qml/hmimain.qml"
    rangering_light.visible.setBinding(&rangering_light_visible_binding);
    rangering_light_height_binding.init<hmimain, &hmimain::rangering_light_height_binding>(rangering_light.height);
    // height: implicitHeight
    // line 351  "qml/hmimain.qml"
    rangering_light.height.setBinding(&rangering_light_height_binding);
    rangering_light_width_binding.init<hmimain, &hmimain::rangering_light_width_binding>(rangering_light.width);
    // width: implicitWidth
    // line 350  "qml/hmimain.qml"
    rangering_light.width.setBinding(&rangering_light_width_binding);
    rangering_light_x_anchor_binding.init<hmimain, &hmimain::rangering_light_x_anchor_binding>(rangering_light.x);
    rangering_light.x.setBinding(&rangering_light_x_anchor_binding);
    rangering_light_y_anchor_binding.init<hmimain, &hmimain::rangering_light_y_anchor_binding>(rangering_light.y);
    rangering_light.y.setBinding(&rangering_light_y_anchor_binding);
    rangering_light_source_binding.init<hmimain, &hmimain::rangering_light_source_binding>(rangering_light.source);
    // source:  (rangeAniVal >28)?bg_light_ring_green:bg_light_ring_red
    // line 345  "qml/hmimain.qml"
    rangering_light.source.setBinding(&rangering_light_source_binding);
    // Image {
    // line 355  "qml/hmimain.qml"
    appendChild(&this->homescreen, &hbeam);
    hbeam_visible_binding.init<hmimain, &hmimain::hbeam_visible_binding>(hbeam.visible);
    // visible:  bHighBeam
    // line 364  "qml/hmimain.qml"
    hbeam.visible.setBinding(&hbeam_visible_binding);
    hbeam_height_binding.init<hmimain, &hmimain::hbeam_height_binding>(hbeam.height);
    // height: implicitHeight
    // line 363  "qml/hmimain.qml"
    hbeam.height.setBinding(&hbeam_height_binding);
    hbeam_width_binding.init<hmimain, &hmimain::hbeam_width_binding>(hbeam.width);
    // width: implicitWidth
    // line 362  "qml/hmimain.qml"
    hbeam.width.setBinding(&hbeam_width_binding);
    hbeam.x.setValue(int(350));
    hbeam.y.setValue(int(5));
    hbeam_source_binding.init<hmimain, &hmimain::hbeam_source_binding>(hbeam.source);
    // source:  icon_highbeam
    // line 357  "qml/hmimain.qml"
    hbeam.source.setBinding(&hbeam_source_binding);
    // Item {
    // line 367  "qml/hmimain.qml"
    appendChild(&this->homescreen, &socindicator);
    socindicator.x.setValue(int(23));
    socindicator_y_anchor_binding.init<hmimain, &hmimain::socindicator_y_anchor_binding>(socindicator.y);
    socindicator.y.setBinding(&socindicator_y_anchor_binding);
    // height:246
    // line 370  "qml/hmimain.qml"
    socindicator.height.setValue(246);
    // width: 246
    // line 369  "qml/hmimain.qml"
    socindicator.width.setValue(246);
    // Item {
    // line 377  "qml/hmimain.qml"
    appendChild(&this->socindicator, &leftArcClipper);
    // visible:true
    // line 387  "qml/hmimain.qml"
    leftArcClipper.visible.setValue(true);
    // clip: true
    // line 386  "qml/hmimain.qml"
    leftArcClipper.itemExtraProperties->clip.setValue(true);
    leftArcClipper.x.setValue(int());
    leftArcClipper_width_anchor_binding.init<hmimain, &hmimain::leftArcClipper_width_anchor_binding>(leftArcClipper.width);
    leftArcClipper.width.setBinding(&leftArcClipper_width_anchor_binding);
    leftArcClipper.y.setValue(int());
    leftArcClipper_height_anchor_binding.init<hmimain, &hmimain::leftArcClipper_height_anchor_binding>(leftArcClipper.height);
    leftArcClipper.height.setBinding(&leftArcClipper_height_anchor_binding);
    // Image {
    // line 389  "qml/hmimain.qml"
    appendChild(&this->leftArcClipper, &leftArc);
    this->leftArc.transform.append(&this->leftArc._qul_inlineTransform);
    leftArc_rotation_binding.init<hmimain, &hmimain::leftArc_rotation_binding>(leftArc._qul_inlineTransform.rotation);
    // rotation: Math.min(180, socAniVal)
    // line 394  "qml/hmimain.qml"
    leftArc._qul_inlineTransform.rotation.setBinding(&leftArc_rotation_binding);
    leftArc_source_binding.init<hmimain, &hmimain::leftArc_source_binding>(leftArc.source);
    // source: (socAniVal >72)?icon_timebar_green:icon_timebar_red
    // line 393  "qml/hmimain.qml"
    leftArc.source.setBinding(&leftArc_source_binding);
    leftArc_height_binding.init<hmimain, &hmimain::leftArc_height_binding>(leftArc.height);
    // height: width
    // line 392  "qml/hmimain.qml"
    leftArc.height.setBinding(&leftArc_height_binding);
    leftArc_width_binding.init<hmimain, &hmimain::leftArc_width_binding>(leftArc.width);
    // width: socindicator.width
    // line 391  "qml/hmimain.qml"
    leftArc.width.setBinding(&leftArc_width_binding);
    // Item {
    // line 397  "qml/hmimain.qml"
    appendChild(&this->socindicator, &rightArcClipper);
    // visible:true
    // line 406  "qml/hmimain.qml"
    rightArcClipper.visible.setValue(true);
    // clip: true
    // line 405  "qml/hmimain.qml"
    rightArcClipper.itemExtraProperties->clip.setValue(true);
    rightArcClipper_x_anchor_binding.init<hmimain, &hmimain::rightArcClipper_x_anchor_binding>(rightArcClipper.x);
    rightArcClipper.x.setBinding(&rightArcClipper_x_anchor_binding);
    rightArcClipper_width_anchor_binding.init<hmimain, &hmimain::rightArcClipper_width_anchor_binding>(rightArcClipper.width);
    rightArcClipper.width.setBinding(&rightArcClipper_width_anchor_binding);
    rightArcClipper.y.setValue(int());
    rightArcClipper_height_anchor_binding.init<hmimain, &hmimain::rightArcClipper_height_anchor_binding>(rightArcClipper.height);
    rightArcClipper.height.setBinding(&rightArcClipper_height_anchor_binding);
    // Image {
    // line 408  "qml/hmimain.qml"
    appendChild(&this->rightArcClipper, &rightArc);
    this->rightArc.transform.append(&this->rightArc._qul_inlineTransform);
    rightArc_rotation_binding.init<hmimain, &hmimain::rightArc_rotation_binding>(rightArc._qul_inlineTransform.rotation);
    // rotation: Math.max(180, socAniVal)
    // line 418  "qml/hmimain.qml"
    rightArc._qul_inlineTransform.rotation.setBinding(&rightArc_rotation_binding);
    rightArc_source_binding.init<hmimain, &hmimain::rightArc_source_binding>(rightArc.source);
    // source: (socAniVal > 72)?icon_timebar_green:icon_timebar_red
    // line 417  "qml/hmimain.qml"
    rightArc.source.setBinding(&rightArc_source_binding);
    rightArc_height_binding.init<hmimain, &hmimain::rightArc_height_binding>(rightArc.height);
    // height: width
    // line 416  "qml/hmimain.qml"
    rightArc.height.setBinding(&rightArc_height_binding);
    rightArc_width_binding.init<hmimain, &hmimain::rightArc_width_binding>(rightArc.width);
    // width: socindicator.width
    // line 415  "qml/hmimain.qml"
    rightArc.width.setBinding(&rightArc_width_binding);
    rightArc_x_anchor_binding.init<hmimain, &hmimain::rightArc_x_anchor_binding>(rightArc.x);
    rightArc.x.setBinding(&rightArc_x_anchor_binding);
    rightArc_y_anchor_binding.init<hmimain, &hmimain::rightArc_y_anchor_binding>(rightArc.y);
    rightArc.y.setBinding(&rightArc_y_anchor_binding);
    // Item {
    // line 423  "qml/hmimain.qml"
    appendChild(&this->homescreen, &rangeIndicator);
    rangeIndicator_x_anchor_binding.init<hmimain, &hmimain::rangeIndicator_x_anchor_binding>(rangeIndicator.x);
    rangeIndicator.x.setBinding(&rangeIndicator_x_anchor_binding);
    rangeIndicator_y_anchor_binding.init<hmimain, &hmimain::rangeIndicator_y_anchor_binding>(rangeIndicator.y);
    rangeIndicator.y.setBinding(&rangeIndicator_y_anchor_binding);
    // height:246
    // line 426  "qml/hmimain.qml"
    rangeIndicator.height.setValue(246);
    // width: 246
    // line 425  "qml/hmimain.qml"
    rangeIndicator.width.setValue(246);
    // Item {
    // line 433  "qml/hmimain.qml"
    appendChild(&this->rangeIndicator, &rangeleftArcClipper);
    // visible:true
    // line 443  "qml/hmimain.qml"
    rangeleftArcClipper.visible.setValue(true);
    // clip: true
    // line 442  "qml/hmimain.qml"
    rangeleftArcClipper.itemExtraProperties->clip.setValue(true);
    rangeleftArcClipper.x.setValue(int());
    rangeleftArcClipper_width_anchor_binding.init<hmimain, &hmimain::rangeleftArcClipper_width_anchor_binding>(rangeleftArcClipper.width);
    rangeleftArcClipper.width.setBinding(&rangeleftArcClipper_width_anchor_binding);
    rangeleftArcClipper.y.setValue(int());
    rangeleftArcClipper_height_anchor_binding.init<hmimain, &hmimain::rangeleftArcClipper_height_anchor_binding>(rangeleftArcClipper.height);
    rangeleftArcClipper.height.setBinding(&rangeleftArcClipper_height_anchor_binding);
    // Image {
    // line 445  "qml/hmimain.qml"
    appendChild(&this->rangeleftArcClipper, &rangeLeftArc);
    this->rangeLeftArc.transform.append(&this->rangeLeftArc._qul_inlineTransform);
    rangeLeftArc_rotation_binding.init<hmimain, &hmimain::rangeLeftArc_rotation_binding>(rangeLeftArc._qul_inlineTransform.rotation);
    // rotation: Math.min(180, rangeAniVal)
    // line 450  "qml/hmimain.qml"
    rangeLeftArc._qul_inlineTransform.rotation.setBinding(&rangeLeftArc_rotation_binding);
    rangeLeftArc_source_binding.init<hmimain, &hmimain::rangeLeftArc_source_binding>(rangeLeftArc.source);
    // source: (rangeAniVal > 28)?icon_timebar_green:icon_timebar_red
    // line 449  "qml/hmimain.qml"
    rangeLeftArc.source.setBinding(&rangeLeftArc_source_binding);
    rangeLeftArc_height_binding.init<hmimain, &hmimain::rangeLeftArc_height_binding>(rangeLeftArc.height);
    // height: width
    // line 448  "qml/hmimain.qml"
    rangeLeftArc.height.setBinding(&rangeLeftArc_height_binding);
    rangeLeftArc_width_binding.init<hmimain, &hmimain::rangeLeftArc_width_binding>(rangeLeftArc.width);
    // width: rangeIndicator.width
    // line 447  "qml/hmimain.qml"
    rangeLeftArc.width.setBinding(&rangeLeftArc_width_binding);
    // Item {
    // line 454  "qml/hmimain.qml"
    appendChild(&this->rangeIndicator, &rangeRightArcClipper);
    // visible:true
    // line 463  "qml/hmimain.qml"
    rangeRightArcClipper.visible.setValue(true);
    // clip: true
    // line 462  "qml/hmimain.qml"
    rangeRightArcClipper.itemExtraProperties->clip.setValue(true);
    rangeRightArcClipper_x_anchor_binding.init<hmimain, &hmimain::rangeRightArcClipper_x_anchor_binding>(rangeRightArcClipper.x);
    rangeRightArcClipper.x.setBinding(&rangeRightArcClipper_x_anchor_binding);
    rangeRightArcClipper_width_anchor_binding.init<hmimain, &hmimain::rangeRightArcClipper_width_anchor_binding>(rangeRightArcClipper.width);
    rangeRightArcClipper.width.setBinding(&rangeRightArcClipper_width_anchor_binding);
    rangeRightArcClipper.y.setValue(int());
    rangeRightArcClipper_height_anchor_binding.init<hmimain, &hmimain::rangeRightArcClipper_height_anchor_binding>(rangeRightArcClipper.height);
    rangeRightArcClipper.height.setBinding(&rangeRightArcClipper_height_anchor_binding);
    // Image {
    // line 465  "qml/hmimain.qml"
    appendChild(&this->rangeRightArcClipper, &rangeRightArc);
    this->rangeRightArc.transform.append(&this->rangeRightArc._qul_inlineTransform);
    rangeRightArc_rotation_binding.init<hmimain, &hmimain::rangeRightArc_rotation_binding>(rangeRightArc._qul_inlineTransform.rotation);
    // rotation: Math.max(180, rangeAniVal)
    // line 475  "qml/hmimain.qml"
    rangeRightArc._qul_inlineTransform.rotation.setBinding(&rangeRightArc_rotation_binding);
    rangeRightArc_source_binding.init<hmimain, &hmimain::rangeRightArc_source_binding>(rangeRightArc.source);
    // source: (rangeAniVal > 28)?icon_timebar_green:icon_timebar_red
    // line 474  "qml/hmimain.qml"
    rangeRightArc.source.setBinding(&rangeRightArc_source_binding);
    rangeRightArc_height_binding.init<hmimain, &hmimain::rangeRightArc_height_binding>(rangeRightArc.height);
    // height: width
    // line 473  "qml/hmimain.qml"
    rangeRightArc.height.setBinding(&rangeRightArc_height_binding);
    rangeRightArc_width_binding.init<hmimain, &hmimain::rangeRightArc_width_binding>(rangeRightArc.width);
    // width: rangeIndicator.width
    // line 472  "qml/hmimain.qml"
    rangeRightArc.width.setBinding(&rangeRightArc_width_binding);
    rangeRightArc_x_anchor_binding.init<hmimain, &hmimain::rangeRightArc_x_anchor_binding>(rangeRightArc.x);
    rangeRightArc.x.setBinding(&rangeRightArc_x_anchor_binding);
    rangeRightArc_y_anchor_binding.init<hmimain, &hmimain::rangeRightArc_y_anchor_binding>(rangeRightArc.y);
    rangeRightArc.y.setBinding(&rangeRightArc_y_anchor_binding);
    // Image {
    // line 480  "qml/hmimain.qml"
    appendChild(&this->homescreen, &lbeam);
    lbeam_visible_binding.init<hmimain, &hmimain::lbeam_visible_binding>(lbeam.visible);
    // visible: (bHighBeam) ? 0: bLowBeam
    // line 489  "qml/hmimain.qml"
    lbeam.visible.setBinding(&lbeam_visible_binding);
    lbeam_height_binding.init<hmimain, &hmimain::lbeam_height_binding>(lbeam.height);
    // height: implicitHeight
    // line 488  "qml/hmimain.qml"
    lbeam.height.setBinding(&lbeam_height_binding);
    lbeam_width_binding.init<hmimain, &hmimain::lbeam_width_binding>(lbeam.width);
    // width: implicitWidth
    // line 487  "qml/hmimain.qml"
    lbeam.width.setBinding(&lbeam_width_binding);
    lbeam.x.setValue(int(350));
    lbeam.y.setValue(int(5));
    lbeam_source_binding.init<hmimain, &hmimain::lbeam_source_binding>(lbeam.source);
    // source: icon_lowbeam
    // line 482  "qml/hmimain.qml"
    lbeam.source.setBinding(&lbeam_source_binding);
    // Image {
    // line 492  "qml/hmimain.qml"
    appendChild(&this->homescreen, &handbreak);
    handbreak_visible_binding.init<hmimain, &hmimain::handbreak_visible_binding>(handbreak.visible);
    // visible:  bHandBrake
    // line 501  "qml/hmimain.qml"
    handbreak.visible.setBinding(&handbreak_visible_binding);
    handbreak_height_binding.init<hmimain, &hmimain::handbreak_height_binding>(handbreak.height);
    // height: implicitHeight
    // line 500  "qml/hmimain.qml"
    handbreak.height.setBinding(&handbreak_height_binding);
    handbreak_width_binding.init<hmimain, &hmimain::handbreak_width_binding>(handbreak.width);
    // width: implicitWidth
    // line 499  "qml/hmimain.qml"
    handbreak.width.setBinding(&handbreak_width_binding);
    handbreak_x_anchor_binding.init<hmimain, &hmimain::handbreak_x_anchor_binding>(handbreak.x);
    handbreak.x.setBinding(&handbreak_x_anchor_binding);
    handbreak.y.setValue(int(15));
    handbreak_source_binding.init<hmimain, &hmimain::handbreak_source_binding>(handbreak.source);
    // source:  icon_handbreak
    // line 494  "qml/hmimain.qml"
    handbreak.source.setBinding(&handbreak_source_binding);
    // Image {
    // line 504  "qml/hmimain.qml"
    appendChild(&this->homescreen, &hazard);
    hazard_visible_binding.init<hmimain, &hmimain::hazard_visible_binding>(hazard.visible);
    // visible:  bHazard
    // line 513  "qml/hmimain.qml"
    hazard.visible.setBinding(&hazard_visible_binding);
    hazard_height_binding.init<hmimain, &hmimain::hazard_height_binding>(hazard.height);
    // height: implicitHeight
    // line 512  "qml/hmimain.qml"
    hazard.height.setBinding(&hazard_height_binding);
    hazard_width_binding.init<hmimain, &hmimain::hazard_width_binding>(hazard.width);
    // width: implicitWidth
    // line 511  "qml/hmimain.qml"
    hazard.width.setBinding(&hazard_width_binding);
    hazard_x_anchor_binding.init<hmimain, &hmimain::hazard_x_anchor_binding>(hazard.x);
    hazard.x.setBinding(&hazard_x_anchor_binding);
    hazard.y.setValue(int(15));
    hazard_source_binding.init<hmimain, &hmimain::hazard_source_binding>(hazard.source);
    // source:  icon_hazard
    // line 506  "qml/hmimain.qml"
    hazard.source.setBinding(&hazard_source_binding);
    // Image {
    // line 516  "qml/hmimain.qml"
    appendChild(&this->homescreen, &seatbelt);
    seatbelt_visible_binding.init<hmimain, &hmimain::seatbelt_visible_binding>(seatbelt.visible);
    // visible: bSafetyBelt
    // line 525  "qml/hmimain.qml"
    seatbelt.visible.setBinding(&seatbelt_visible_binding);
    seatbelt_height_binding.init<hmimain, &hmimain::seatbelt_height_binding>(seatbelt.height);
    // height: implicitHeight
    // line 524  "qml/hmimain.qml"
    seatbelt.height.setBinding(&seatbelt_height_binding);
    seatbelt_width_binding.init<hmimain, &hmimain::seatbelt_width_binding>(seatbelt.width);
    // width: implicitWidth
    // line 523  "qml/hmimain.qml"
    seatbelt.width.setBinding(&seatbelt_width_binding);
    seatbelt_x_anchor_binding.init<hmimain, &hmimain::seatbelt_x_anchor_binding>(seatbelt.x);
    seatbelt.x.setBinding(&seatbelt_x_anchor_binding);
    seatbelt.y.setValue(int(15));
    seatbelt_source_binding.init<hmimain, &hmimain::seatbelt_source_binding>(seatbelt.source);
    // source:  icon_seatbelt
    // line 518  "qml/hmimain.qml"
    seatbelt.source.setBinding(&seatbelt_source_binding);
    // Image {
    // line 528  "qml/hmimain.qml"
    appendChild(&this->homescreen, &indfoglight);
    indfoglight_visible_binding.init<hmimain, &hmimain::indfoglight_visible_binding>(indfoglight.visible);
    // visible: bFoglight
    // line 537  "qml/hmimain.qml"
    indfoglight.visible.setBinding(&indfoglight_visible_binding);
    indfoglight_height_binding.init<hmimain, &hmimain::indfoglight_height_binding>(indfoglight.height);
    // height: implicitHeight
    // line 536  "qml/hmimain.qml"
    indfoglight.height.setBinding(&indfoglight_height_binding);
    indfoglight_width_binding.init<hmimain, &hmimain::indfoglight_width_binding>(indfoglight.width);
    // width: implicitWidth
    // line 535  "qml/hmimain.qml"
    indfoglight.width.setBinding(&indfoglight_width_binding);
    indfoglight_x_anchor_binding.init<hmimain, &hmimain::indfoglight_x_anchor_binding>(indfoglight.x);
    indfoglight.x.setBinding(&indfoglight_x_anchor_binding);
    indfoglight.y.setValue(int(9));
    indfoglight_source_binding.init<hmimain, &hmimain::indfoglight_source_binding>(indfoglight.source);
    // source:icon_foglight
    // line 530  "qml/hmimain.qml"
    indfoglight.source.setBinding(&indfoglight_source_binding);
    // Image {
    // line 540  "qml/hmimain.qml"
    appendChild(&this->homescreen, &indgunlock);
    indgunlock_visible_binding.init<hmimain, &hmimain::indgunlock_visible_binding>(indgunlock.visible);
    // visible: bGunlock
    // line 549  "qml/hmimain.qml"
    indgunlock.visible.setBinding(&indgunlock_visible_binding);
    indgunlock_height_binding.init<hmimain, &hmimain::indgunlock_height_binding>(indgunlock.height);
    // height: implicitHeight
    // line 548  "qml/hmimain.qml"
    indgunlock.height.setBinding(&indgunlock_height_binding);
    indgunlock_width_binding.init<hmimain, &hmimain::indgunlock_width_binding>(indgunlock.width);
    // width: implicitWidth
    // line 547  "qml/hmimain.qml"
    indgunlock.width.setBinding(&indgunlock_width_binding);
    indgunlock_x_anchor_binding.init<hmimain, &hmimain::indgunlock_x_anchor_binding>(indgunlock.x);
    indgunlock.x.setBinding(&indgunlock_x_anchor_binding);
    indgunlock.y.setValue(int(15));
    indgunlock_source_binding.init<hmimain, &hmimain::indgunlock_source_binding>(indgunlock.source);
    // source:icon_gunlock
    // line 542  "qml/hmimain.qml"
    indgunlock.source.setBinding(&indgunlock_source_binding);
    // Image {
    // line 552  "qml/hmimain.qml"
    appendChild(&this->homescreen, &indright);
    indright_visible_binding.init<hmimain, &hmimain::indright_visible_binding>(indright.visible);
    // visible: bRightInd
    // line 562  "qml/hmimain.qml"
    indright.visible.setBinding(&indright_visible_binding);
    indright_height_binding.init<hmimain, &hmimain::indright_height_binding>(indright.height);
    // height: implicitHeight
    // line 561  "qml/hmimain.qml"
    indright.height.setBinding(&indright_height_binding);
    indright_width_binding.init<hmimain, &hmimain::indright_width_binding>(indright.width);
    // width: implicitWidth
    // line 560  "qml/hmimain.qml"
    indright.width.setBinding(&indright_width_binding);
    // opacity: 1
    // line 559  "qml/hmimain.qml"
    indright.opacity.setValue(1);
    indright_x_anchor_binding.init<hmimain, &hmimain::indright_x_anchor_binding>(indright.x);
    indright.x.setBinding(&indright_x_anchor_binding);
    indright.y.setValue(int(100));
    indright_source_binding.init<hmimain, &hmimain::indright_source_binding>(indright.source);
    // source: icon_indicatorright
    // line 554  "qml/hmimain.qml"
    indright.source.setBinding(&indright_source_binding);
    // Image {
    // line 565  "qml/hmimain.qml"
    appendChild(&this->homescreen, &indleft);
    indleft_visible_binding.init<hmimain, &hmimain::indleft_visible_binding>(indleft.visible);
    // visible: bLeftInd
    // line 575  "qml/hmimain.qml"
    indleft.visible.setBinding(&indleft_visible_binding);
    indleft_height_binding.init<hmimain, &hmimain::indleft_height_binding>(indleft.height);
    // height: implicitHeight
    // line 574  "qml/hmimain.qml"
    indleft.height.setBinding(&indleft_height_binding);
    indleft_width_binding.init<hmimain, &hmimain::indleft_width_binding>(indleft.width);
    // width: implicitWidth
    // line 573  "qml/hmimain.qml"
    indleft.width.setBinding(&indleft_width_binding);
    // opacity: 1
    // line 572  "qml/hmimain.qml"
    indleft.opacity.setValue(1);
    indleft.x.setValue(int(200));
    indleft.y.setValue(int(100));
    indleft_source_binding.init<hmimain, &hmimain::indleft_source_binding>(indleft.source);
    // source:icon_indicatorleft
    // line 567  "qml/hmimain.qml"
    indleft.source.setBinding(&indleft_source_binding);
    // Image {
    // line 579  "qml/hmimain.qml"
    appendChild(&this->homescreen, &motormalfunc);
    motormalfunc_visible_binding.init<hmimain, &hmimain::motormalfunc_visible_binding>(motormalfunc.visible);
    // visible:  bMotorMalfunc
    // line 588  "qml/hmimain.qml"
    motormalfunc.visible.setBinding(&motormalfunc_visible_binding);
    motormalfunc_height_binding.init<hmimain, &hmimain::motormalfunc_height_binding>(motormalfunc.height);
    // height: implicitHeight
    // line 587  "qml/hmimain.qml"
    motormalfunc.height.setBinding(&motormalfunc_height_binding);
    motormalfunc_width_binding.init<hmimain, &hmimain::motormalfunc_width_binding>(motormalfunc.width);
    // width: implicitWidth
    // line 586  "qml/hmimain.qml"
    motormalfunc.width.setBinding(&motormalfunc_width_binding);
    motormalfunc_x_anchor_binding.init<hmimain, &hmimain::motormalfunc_x_anchor_binding>(motormalfunc.x);
    motormalfunc.x.setBinding(&motormalfunc_x_anchor_binding);
    motormalfunc_y_anchor_binding.init<hmimain, &hmimain::motormalfunc_y_anchor_binding>(motormalfunc.y);
    motormalfunc.y.setBinding(&motormalfunc_y_anchor_binding);
    motormalfunc_source_binding.init<hmimain, &hmimain::motormalfunc_source_binding>(motormalfunc.source);
    // source:  icon_motormalfun
    // line 581  "qml/hmimain.qml"
    motormalfunc.source.setBinding(&motormalfunc_source_binding);
    // Image {
    // line 591  "qml/hmimain.qml"
    appendChild(&this->homescreen, &motorfault);
    motorfault_visible_binding.init<hmimain, &hmimain::motorfault_visible_binding>(motorfault.visible);
    // visible:  bMotorfault
    // line 600  "qml/hmimain.qml"
    motorfault.visible.setBinding(&motorfault_visible_binding);
    motorfault_height_binding.init<hmimain, &hmimain::motorfault_height_binding>(motorfault.height);
    // height: implicitHeight
    // line 599  "qml/hmimain.qml"
    motorfault.height.setBinding(&motorfault_height_binding);
    motorfault_width_binding.init<hmimain, &hmimain::motorfault_width_binding>(motorfault.width);
    // width: implicitWidth
    // line 598  "qml/hmimain.qml"
    motorfault.width.setBinding(&motorfault_width_binding);
    motorfault_x_anchor_binding.init<hmimain, &hmimain::motorfault_x_anchor_binding>(motorfault.x);
    motorfault.x.setBinding(&motorfault_x_anchor_binding);
    motorfault_y_anchor_binding.init<hmimain, &hmimain::motorfault_y_anchor_binding>(motorfault.y);
    motorfault.y.setBinding(&motorfault_y_anchor_binding);
    motorfault_source_binding.init<hmimain, &hmimain::motorfault_source_binding>(motorfault.source);
    // source:  icon_motorfault
    // line 593  "qml/hmimain.qml"
    motorfault.source.setBinding(&motorfault_source_binding);
    // Image {
    // line 605  "qml/hmimain.qml"
    appendChild(&this->homescreen, &hvil);
    hvil_visible_binding.init<hmimain, &hmimain::hvil_visible_binding>(hvil.visible);
    // visible:  bHvil
    // line 614  "qml/hmimain.qml"
    hvil.visible.setBinding(&hvil_visible_binding);
    hvil_height_binding.init<hmimain, &hmimain::hvil_height_binding>(hvil.height);
    // height: implicitHeight
    // line 613  "qml/hmimain.qml"
    hvil.height.setBinding(&hvil_height_binding);
    hvil_width_binding.init<hmimain, &hmimain::hvil_width_binding>(hvil.width);
    // width: implicitWidth
    // line 612  "qml/hmimain.qml"
    hvil.width.setBinding(&hvil_width_binding);
    hvil_x_anchor_binding.init<hmimain, &hmimain::hvil_x_anchor_binding>(hvil.x);
    hvil.x.setBinding(&hvil_x_anchor_binding);
    hvil.y.setValue(int(80));
    hvil_source_binding.init<hmimain, &hmimain::hvil_source_binding>(hvil.source);
    // source:  icon_hvil
    // line 607  "qml/hmimain.qml"
    hvil.source.setBinding(&hvil_source_binding);
    // Image {
    // line 617  "qml/hmimain.qml"
    appendChild(&this->homescreen, &iconfault);
    iconfault_visible_binding.init<hmimain, &hmimain::iconfault_visible_binding>(iconfault.visible);
    // visible:  (iFaultCount > 0)?1:0
    // line 626  "qml/hmimain.qml"
    iconfault.visible.setBinding(&iconfault_visible_binding);
    iconfault_height_binding.init<hmimain, &hmimain::iconfault_height_binding>(iconfault.height);
    // height: implicitHeight
    // line 625  "qml/hmimain.qml"
    iconfault.height.setBinding(&iconfault_height_binding);
    iconfault_width_binding.init<hmimain, &hmimain::iconfault_width_binding>(iconfault.width);
    // width: implicitWidth
    // line 624  "qml/hmimain.qml"
    iconfault.width.setBinding(&iconfault_width_binding);
    iconfault_x_anchor_binding.init<hmimain, &hmimain::iconfault_x_anchor_binding>(iconfault.x);
    iconfault.x.setBinding(&iconfault_x_anchor_binding);
    iconfault.y.setValue(int(80));
    iconfault_source_binding.init<hmimain, &hmimain::iconfault_source_binding>(iconfault.source);
    // source:  icon_fault
    // line 619  "qml/hmimain.qml"
    iconfault.source.setBinding(&iconfault_source_binding);
    // Image {
    // line 629  "qml/hmimain.qml"
    appendChild(&this->homescreen, &batterywarning);
    batterywarning_visible_binding.init<hmimain, &hmimain::batterywarning_visible_binding>(batterywarning.visible);
    // visible:  bBatMalfunc
    // line 638  "qml/hmimain.qml"
    batterywarning.visible.setBinding(&batterywarning_visible_binding);
    batterywarning_height_binding.init<hmimain, &hmimain::batterywarning_height_binding>(batterywarning.height);
    // height: implicitHeight
    // line 637  "qml/hmimain.qml"
    batterywarning.height.setBinding(&batterywarning_height_binding);
    batterywarning_width_binding.init<hmimain, &hmimain::batterywarning_width_binding>(batterywarning.width);
    // width: implicitWidth
    // line 636  "qml/hmimain.qml"
    batterywarning.width.setBinding(&batterywarning_width_binding);
    batterywarning.x.setValue(int(60));
    batterywarning_y_anchor_binding.init<hmimain, &hmimain::batterywarning_y_anchor_binding>(batterywarning.y);
    batterywarning.y.setBinding(&batterywarning_y_anchor_binding);
    batterywarning_source_binding.init<hmimain, &hmimain::batterywarning_source_binding>(batterywarning.source);
    // source:  icon_batterywarning
    // line 631  "qml/hmimain.qml"
    batterywarning.source.setBinding(&batterywarning_source_binding);
    // Image {
    // line 641  "qml/hmimain.qml"
    appendChild(&this->homescreen, &batteryfault);
    batteryfault_visible_binding.init<hmimain, &hmimain::batteryfault_visible_binding>(batteryfault.visible);
    // visible:  bBatfault
    // line 650  "qml/hmimain.qml"
    batteryfault.visible.setBinding(&batteryfault_visible_binding);
    batteryfault_height_binding.init<hmimain, &hmimain::batteryfault_height_binding>(batteryfault.height);
    // height: implicitHeight
    // line 649  "qml/hmimain.qml"
    batteryfault.height.setBinding(&batteryfault_height_binding);
    batteryfault_width_binding.init<hmimain, &hmimain::batteryfault_width_binding>(batteryfault.width);
    // width: implicitWidth
    // line 648  "qml/hmimain.qml"
    batteryfault.width.setBinding(&batteryfault_width_binding);
    batteryfault.x.setValue(int(60));
    batteryfault_y_anchor_binding.init<hmimain, &hmimain::batteryfault_y_anchor_binding>(batteryfault.y);
    batteryfault.y.setBinding(&batteryfault_y_anchor_binding);
    batteryfault_source_binding.init<hmimain, &hmimain::batteryfault_source_binding>(batteryfault.source);
    // source:  icon_batteryfailure
    // line 643  "qml/hmimain.qml"
    batteryfault.source.setBinding(&batteryfault_source_binding);
    // Image {
    // line 652  "qml/hmimain.qml"
    appendChild(&this->homescreen, &coolenttemp);
    coolenttemp_visible_binding.init<hmimain, &hmimain::coolenttemp_visible_binding>(coolenttemp.visible);
    // visible:  bCoolent
    // line 661  "qml/hmimain.qml"
    coolenttemp.visible.setBinding(&coolenttemp_visible_binding);
    coolenttemp_height_binding.init<hmimain, &hmimain::coolenttemp_height_binding>(coolenttemp.height);
    // height: implicitHeight
    // line 660  "qml/hmimain.qml"
    coolenttemp.height.setBinding(&coolenttemp_height_binding);
    coolenttemp_width_binding.init<hmimain, &hmimain::coolenttemp_width_binding>(coolenttemp.width);
    // width: implicitWidth
    // line 659  "qml/hmimain.qml"
    coolenttemp.width.setBinding(&coolenttemp_width_binding);
    coolenttemp.x.setValue(int(60));
    coolenttemp.y.setValue(int(80));
    coolenttemp_source_binding.init<hmimain, &hmimain::coolenttemp_source_binding>(coolenttemp.source);
    // source:  icon_coolenttemp
    // line 654  "qml/hmimain.qml"
    coolenttemp.source.setBinding(&coolenttemp_source_binding);
    // Image {
    // line 664  "qml/hmimain.qml"
    appendChild(&this->homescreen, &bgspeed);
    bgspeed_visible_binding.init<hmimain, &hmimain::bgspeed_visible_binding>(bgspeed.visible);
    // visible:(iscreen==0)?1:0
    // line 673  "qml/hmimain.qml"
    bgspeed.visible.setBinding(&bgspeed_visible_binding);
    bgspeed_height_binding.init<hmimain, &hmimain::bgspeed_height_binding>(bgspeed.height);
    // height: implicitHeight
    // line 672  "qml/hmimain.qml"
    bgspeed.height.setBinding(&bgspeed_height_binding);
    bgspeed_width_binding.init<hmimain, &hmimain::bgspeed_width_binding>(bgspeed.width);
    // width: implicitWidth
    // line 671  "qml/hmimain.qml"
    bgspeed.width.setBinding(&bgspeed_width_binding);
    bgspeed_x_anchor_binding.init<hmimain, &hmimain::bgspeed_x_anchor_binding>(bgspeed.x);
    bgspeed.x.setBinding(&bgspeed_x_anchor_binding);
    bgspeed_y_anchor_binding.init<hmimain, &hmimain::bgspeed_y_anchor_binding>(bgspeed.y);
    bgspeed.y.setBinding(&bgspeed_y_anchor_binding);
    bgspeed_source_binding.init<hmimain, &hmimain::bgspeed_source_binding>(bgspeed.source);
    // source:  (isdarktheme)?bg_dark_speed:bg_light_speed
    // line 666  "qml/hmimain.qml"
    bgspeed.source.setBinding(&bgspeed_source_binding);
    // Image {
    // line 676  "qml/hmimain.qml"
    appendChild(&this->homescreen, &faultdark);
    faultdark_visible_binding.init<hmimain, &hmimain::faultdark_visible_binding>(faultdark.visible);
    // visible:  (iscreen==2)?((isdarktheme)?1:0):0
    // line 685  "qml/hmimain.qml"
    faultdark.visible.setBinding(&faultdark_visible_binding);
    faultdark_height_binding.init<hmimain, &hmimain::faultdark_height_binding>(faultdark.height);
    // height: implicitHeight
    // line 684  "qml/hmimain.qml"
    faultdark.height.setBinding(&faultdark_height_binding);
    faultdark_width_binding.init<hmimain, &hmimain::faultdark_width_binding>(faultdark.width);
    // width: implicitWidth
    // line 683  "qml/hmimain.qml"
    faultdark.width.setBinding(&faultdark_width_binding);
    faultdark_x_anchor_binding.init<hmimain, &hmimain::faultdark_x_anchor_binding>(faultdark.x);
    faultdark.x.setBinding(&faultdark_x_anchor_binding);
    faultdark_y_anchor_binding.init<hmimain, &hmimain::faultdark_y_anchor_binding>(faultdark.y);
    faultdark.y.setBinding(&faultdark_y_anchor_binding);
    faultdark_source_binding.init<hmimain, &hmimain::faultdark_source_binding>(faultdark.source);
    // source:  (iFaultCount >0)?bg_dark_fault:bg_dark_green
    // line 678  "qml/hmimain.qml"
    faultdark.source.setBinding(&faultdark_source_binding);
    // Image {
    // line 688  "qml/hmimain.qml"
    appendChild(&this->homescreen, &faultlight);
    faultlight_visible_binding.init<hmimain, &hmimain::faultlight_visible_binding>(faultlight.visible);
    // visible: (iscreen==2)?((isdarktheme)?0:1):0
    // line 697  "qml/hmimain.qml"
    faultlight.visible.setBinding(&faultlight_visible_binding);
    faultlight_height_binding.init<hmimain, &hmimain::faultlight_height_binding>(faultlight.height);
    // height: implicitHeight
    // line 696  "qml/hmimain.qml"
    faultlight.height.setBinding(&faultlight_height_binding);
    faultlight_width_binding.init<hmimain, &hmimain::faultlight_width_binding>(faultlight.width);
    // width: implicitWidth
    // line 695  "qml/hmimain.qml"
    faultlight.width.setBinding(&faultlight_width_binding);
    faultlight_x_anchor_binding.init<hmimain, &hmimain::faultlight_x_anchor_binding>(faultlight.x);
    faultlight.x.setBinding(&faultlight_x_anchor_binding);
    faultlight_y_anchor_binding.init<hmimain, &hmimain::faultlight_y_anchor_binding>(faultlight.y);
    faultlight.y.setBinding(&faultlight_y_anchor_binding);
    faultlight_source_binding.init<hmimain, &hmimain::faultlight_source_binding>(faultlight.source);
    // source:  (iFaultCount >0)?bg_light_fault:bg_light_green
    // line 690  "qml/hmimain.qml"
    faultlight.source.setBinding(&faultlight_source_binding);
    // Image {
    // line 700  "qml/hmimain.qml"
    appendChild(&this->homescreen, &charge);
    charge_visible_binding.init<hmimain, &hmimain::charge_visible_binding>(charge.visible);
    // visible:(iscreen==1)?1:0
    // line 709  "qml/hmimain.qml"
    charge.visible.setBinding(&charge_visible_binding);
    charge_height_binding.init<hmimain, &hmimain::charge_height_binding>(charge.height);
    // height: implicitHeight
    // line 708  "qml/hmimain.qml"
    charge.height.setBinding(&charge_height_binding);
    charge_width_binding.init<hmimain, &hmimain::charge_width_binding>(charge.width);
    // width: implicitWidth
    // line 707  "qml/hmimain.qml"
    charge.width.setBinding(&charge_width_binding);
    charge_x_anchor_binding.init<hmimain, &hmimain::charge_x_anchor_binding>(charge.x);
    charge.x.setBinding(&charge_x_anchor_binding);
    charge_y_anchor_binding.init<hmimain, &hmimain::charge_y_anchor_binding>(charge.y);
    charge.y.setBinding(&charge_y_anchor_binding);
    charge_source_binding.init<hmimain, &hmimain::charge_source_binding>(charge.source);
    // source:(isdarktheme)?bg_dark_charge_blue:bg_light_charge_blue
    // line 702  "qml/hmimain.qml"
    charge.source.setBinding(&charge_source_binding);
    // Image {
    // line 712  "qml/hmimain.qml"
    appendChild(&this->homescreen, &breakfailed);
    breakfailed_visible_binding.init<hmimain, &hmimain::breakfailed_visible_binding>(breakfailed.visible);
    // visible:  bBrakeFailed
    // line 721  "qml/hmimain.qml"
    breakfailed.visible.setBinding(&breakfailed_visible_binding);
    breakfailed_height_binding.init<hmimain, &hmimain::breakfailed_height_binding>(breakfailed.height);
    // height: implicitHeight
    // line 720  "qml/hmimain.qml"
    breakfailed.height.setBinding(&breakfailed_height_binding);
    breakfailed_width_binding.init<hmimain, &hmimain::breakfailed_width_binding>(breakfailed.width);
    // width: implicitWidth
    // line 719  "qml/hmimain.qml"
    breakfailed.width.setBinding(&breakfailed_width_binding);
    breakfailed_x_anchor_binding.init<hmimain, &hmimain::breakfailed_x_anchor_binding>(breakfailed.x);
    breakfailed.x.setBinding(&breakfailed_x_anchor_binding);
    breakfailed.y.setValue(int(80));
    breakfailed_source_binding.init<hmimain, &hmimain::breakfailed_source_binding>(breakfailed.source);
    // source:  icon_breakfailed
    // line 714  "qml/hmimain.qml"
    breakfailed.source.setBinding(&breakfailed_source_binding);
    // Text {
    // line 723  "qml/hmimain.qml"
    appendChild(&this->homescreen, &speedid);
    speedid_visible_binding.init<hmimain, &hmimain::speedid_visible_binding>(speedid.visible);
    // visible: (iscreen ==0) ?1:0
    // line 732  "qml/hmimain.qml"
    speedid.visible.setBinding(&speedid_visible_binding);
    speedid_x_anchor_binding.init<hmimain, &hmimain::speedid_x_anchor_binding>(speedid.x);
    speedid.x.setBinding(&speedid_x_anchor_binding);
    speedid_y_anchor_binding.init<hmimain, &hmimain::speedid_y_anchor_binding>(speedid.y);
    speedid.y.setBinding(&speedid_y_anchor_binding);
    // font.pixelSize: 140
    // line 727  "qml/hmimain.qml"
    speedid.font.setValue(Qul::Private::FontPointer(qul_font_default_140_700));
    speedid_color_binding.init<hmimain, &hmimain::speedid_color_binding>(speedid.color);
    // color: (speed < 80) ? "#17a81a": "red"
    // line 726  "qml/hmimain.qml"
    speedid.color.setBinding(&speedid_color_binding);
    speedid_text_binding.init<hmimain, &hmimain::speedid_text_binding>(speedid.text);
    // text: speed
    // line 725  "qml/hmimain.qml"
    speedid.text.setBinding(&speedid_text_binding);
    // StaticText {
    // line 735  "qml/hmimain.qml"
    appendChild(&this->homescreen, &speedunit);
    speedunit_visible_binding.init<hmimain, &hmimain::speedunit_visible_binding>(speedunit.visible);
    // visible: (iscreen ==0) ?1:0
    // line 744  "qml/hmimain.qml"
    speedunit.visible.setBinding(&speedunit_visible_binding);
    speedunit_x_anchor_binding.init<hmimain, &hmimain::speedunit_x_anchor_binding>(speedunit.x);
    speedunit.x.setBinding(&speedunit_x_anchor_binding);
    speedunit_y_anchor_binding.init<hmimain, &hmimain::speedunit_y_anchor_binding>(speedunit.y);
    speedunit.y.setBinding(&speedunit_y_anchor_binding);
    speedunit_color_binding.init<hmimain, &hmimain::speedunit_color_binding>(speedunit.color);
    // color:speedid.color
    // line 738  "qml/hmimain.qml"
    speedunit.color.setBinding(&speedunit_color_binding);
    // StaticText {
    // line 749  "qml/hmimain.qml"
    appendChild(&this->homescreen, &ttcname);
    ttcname_visible_binding.init<hmimain, &hmimain::ttcname_visible_binding>(ttcname.visible);
    // visible:(iscreen ==1) ?1:0
    // line 758  "qml/hmimain.qml"
    ttcname.visible.setBinding(&ttcname_visible_binding);
    ttcname_x_anchor_binding.init<hmimain, &hmimain::ttcname_x_anchor_binding>(ttcname.x);
    ttcname.x.setBinding(&ttcname_x_anchor_binding);
    ttcname_y_anchor_binding.init<hmimain, &hmimain::ttcname_y_anchor_binding>(ttcname.y);
    ttcname.y.setBinding(&ttcname_y_anchor_binding);
    ttcname_color_binding.init<hmimain, &hmimain::ttcname_color_binding>(ttcname.color);
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 752  "qml/hmimain.qml"
    ttcname.color.setBinding(&ttcname_color_binding);
    // Text {
    // line 761  "qml/hmimain.qml"
    appendChild(&this->homescreen, &ttcharge);
    ttcharge_visible_binding.init<hmimain, &hmimain::ttcharge_visible_binding>(ttcharge.visible);
    // visible: (iscreen ==1) ?1:0
    // line 770  "qml/hmimain.qml"
    ttcharge.visible.setBinding(&ttcharge_visible_binding);
    ttcharge_x_anchor_binding.init<hmimain, &hmimain::ttcharge_x_anchor_binding>(ttcharge.x);
    ttcharge.x.setBinding(&ttcharge_x_anchor_binding);
    ttcharge_y_anchor_binding.init<hmimain, &hmimain::ttcharge_y_anchor_binding>(ttcharge.y);
    ttcharge.y.setBinding(&ttcharge_y_anchor_binding);
    // font.pixelSize: 25
    // line 765  "qml/hmimain.qml"
    ttcharge.font.setValue(Qul::Private::FontPointer(qul_font_default_25_700));
    ttcharge_color_binding.init<hmimain, &hmimain::ttcharge_color_binding>(ttcharge.color);
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 764  "qml/hmimain.qml"
    ttcharge.color.setBinding(&ttcharge_color_binding);
    // text: "0h 0mins"
    // line 763  "qml/hmimain.qml"
    ttcharge.text.setValue(Qul::Private::String(Qul::Private::Latin1String("0h 0mins", 8)));
    // Rectangle {
    // line 773  "qml/hmimain.qml"
    appendChild(&this->homescreen, &socrect);
    socrect.x.setValue(int(90));
    socrect_y_anchor_binding.init<hmimain, &hmimain::socrect_y_anchor_binding>(socrect.y);
    socrect.y.setBinding(&socrect_y_anchor_binding);
    // color: "transparent"
    // line 777  "qml/hmimain.qml"
    socrect.color.setValue(0x0);
    // height: 75
    // line 776  "qml/hmimain.qml"
    socrect.height.setValue(75);
    // width: 120
    // line 775  "qml/hmimain.qml"
    socrect.width.setValue(120);
    // Text {
    // line 782  "qml/hmimain.qml"
    appendChild(&this->socrect, &socid);
    // visible: true
    // line 791  "qml/hmimain.qml"
    socid.visible.setValue(true);
    socid_x_anchor_binding.init<hmimain, &hmimain::socid_x_anchor_binding>(socid.x);
    socid.x.setBinding(&socid_x_anchor_binding);
    socid_y_anchor_binding.init<hmimain, &hmimain::socid_y_anchor_binding>(socid.y);
    socid.y.setBinding(&socid_y_anchor_binding);
    // font.pixelSize: 70
    // line 786  "qml/hmimain.qml"
    socid.font.setValue(Qul::Private::FontPointer(qul_font_default_70_700));
    socid_color_binding.init<hmimain, &hmimain::socid_color_binding>(socid.color);
    // color: (iSocval > 20) ? "#17a81a": "red"
    // line 785  "qml/hmimain.qml"
    socid.color.setBinding(&socid_color_binding);
    socid_text_binding.init<hmimain, &hmimain::socid_text_binding>(socid.text);
    // text: iSocval
    // line 784  "qml/hmimain.qml"
    socid.text.setBinding(&socid_text_binding);
    // StaticText {
    // line 793  "qml/hmimain.qml"
    appendChild(&this->socrect, &socunit);
    // visible: true
    // line 802  "qml/hmimain.qml"
    socunit.visible.setValue(true);
    socunit_x_anchor_binding.init<hmimain, &hmimain::socunit_x_anchor_binding>(socunit.x);
    socunit.x.setBinding(&socunit_x_anchor_binding);
    socunit_y_anchor_binding.init<hmimain, &hmimain::socunit_y_anchor_binding>(socunit.y);
    socunit.y.setBinding(&socunit_y_anchor_binding);
    socunit_color_binding.init<hmimain, &hmimain::socunit_color_binding>(socunit.color);
    // color:socid.color
    // line 796  "qml/hmimain.qml"
    socunit.color.setBinding(&socunit_color_binding);
    // StaticText {
    // line 804  "qml/hmimain.qml"
    appendChild(&this->socrect, &socname);
    // visible: true
    // line 813  "qml/hmimain.qml"
    socname.visible.setValue(true);
    socname_x_anchor_binding.init<hmimain, &hmimain::socname_x_anchor_binding>(socname.x);
    socname.x.setBinding(&socname_x_anchor_binding);
    socname_y_anchor_binding.init<hmimain, &hmimain::socname_y_anchor_binding>(socname.y);
    socname.y.setBinding(&socname_y_anchor_binding);
    socname_color_binding.init<hmimain, &hmimain::socname_color_binding>(socname.color);
    // color:socid.color
    // line 807  "qml/hmimain.qml"
    socname.color.setBinding(&socname_color_binding);
    // Rectangle {
    // line 818  "qml/hmimain.qml"
    appendChild(&this->homescreen, &rectangle);
    rectangle_x_anchor_binding.init<hmimain, &hmimain::rectangle_x_anchor_binding>(rectangle.x);
    rectangle.x.setBinding(&rectangle_x_anchor_binding);
    rectangle_y_anchor_binding.init<hmimain, &hmimain::rectangle_y_anchor_binding>(rectangle.y);
    rectangle.y.setBinding(&rectangle_y_anchor_binding);
    // color: "transparent"
    // line 821  "qml/hmimain.qml"
    rectangle.color.setValue(0x0);
    // height: 75
    // line 820  "qml/hmimain.qml"
    rectangle.height.setValue(75);
    // width: 120
    // line 819  "qml/hmimain.qml"
    rectangle.width.setValue(120);
    // Text {
    // line 826  "qml/hmimain.qml"
    appendChild(&this->rectangle, &rangeval);
    // visible: true
    // line 835  "qml/hmimain.qml"
    rangeval.visible.setValue(true);
    rangeval_x_anchor_binding.init<hmimain, &hmimain::rangeval_x_anchor_binding>(rangeval.x);
    rangeval.x.setBinding(&rangeval_x_anchor_binding);
    rangeval_y_anchor_binding.init<hmimain, &hmimain::rangeval_y_anchor_binding>(rangeval.y);
    rangeval.y.setBinding(&rangeval_y_anchor_binding);
    // font.pixelSize: 70
    // line 830  "qml/hmimain.qml"
    rangeval.font.setValue(Qul::Private::FontPointer(qul_font_default_70_700));
    rangeval_color_binding.init<hmimain, &hmimain::rangeval_color_binding>(rangeval.color);
    // color:(irange > 20)?"#17a81a":"red"
    // line 829  "qml/hmimain.qml"
    rangeval.color.setBinding(&rangeval_color_binding);
    rangeval_text_binding.init<hmimain, &hmimain::rangeval_text_binding>(rangeval.text);
    // text: qsTr("0")
    // line 828  "qml/hmimain.qml"
    rangeval.text.setBinding(&rangeval_text_binding);
    // StaticText {
    // line 837  "qml/hmimain.qml"
    appendChild(&this->rectangle, &rangeunit);
    // visible: true
    // line 846  "qml/hmimain.qml"
    rangeunit.visible.setValue(true);
    rangeunit_x_anchor_binding.init<hmimain, &hmimain::rangeunit_x_anchor_binding>(rangeunit.x);
    rangeunit.x.setBinding(&rangeunit_x_anchor_binding);
    rangeunit_y_anchor_binding.init<hmimain, &hmimain::rangeunit_y_anchor_binding>(rangeunit.y);
    rangeunit.y.setBinding(&rangeunit_y_anchor_binding);
    rangeunit_color_binding.init<hmimain, &hmimain::rangeunit_color_binding>(rangeunit.color);
    // color:rangeval.color
    // line 840  "qml/hmimain.qml"
    rangeunit.color.setBinding(&rangeunit_color_binding);
    // StaticText {
    // line 848  "qml/hmimain.qml"
    appendChild(&this->rectangle, &rangename);
    // visible: true
    // line 857  "qml/hmimain.qml"
    rangename.visible.setValue(true);
    rangename_x_anchor_binding.init<hmimain, &hmimain::rangename_x_anchor_binding>(rangename.x);
    rangename.x.setBinding(&rangename_x_anchor_binding);
    rangename_y_anchor_binding.init<hmimain, &hmimain::rangename_y_anchor_binding>(rangename.y);
    rangename.y.setBinding(&rangename_y_anchor_binding);
    rangename_color_binding.init<hmimain, &hmimain::rangename_color_binding>(rangename.color);
    // color:rangeval.color
    // line 851  "qml/hmimain.qml"
    rangename.color.setBinding(&rangename_color_binding);
    // Image {
    // line 861  "qml/hmimain.qml"
    appendChild(&this->homescreen, &modedrive);
    modedrive_x_anchor_binding.init<hmimain, &hmimain::modedrive_x_anchor_binding>(modedrive.x);
    modedrive.x.setBinding(&modedrive_x_anchor_binding);
    modedrive.y.setValue(int(18));
    modedrive_visible_binding.init<hmimain, &hmimain::modedrive_visible_binding>(modedrive.visible);
    // visible: (iGearMode == 2)?1:0
    // line 866  "qml/hmimain.qml"
    modedrive.visible.setBinding(&modedrive_visible_binding);
    modedrive_height_binding.init<hmimain, &hmimain::modedrive_height_binding>(modedrive.height);
    // height: implicitHeight
    // line 865  "qml/hmimain.qml"
    modedrive.height.setBinding(&modedrive_height_binding);
    modedrive_width_binding.init<hmimain, &hmimain::modedrive_width_binding>(modedrive.width);
    // width: implicitWidth
    // line 864  "qml/hmimain.qml"
    modedrive.width.setBinding(&modedrive_width_binding);
    modedrive_source_binding.init<hmimain, &hmimain::modedrive_source_binding>(modedrive.source);
    // source:icon_drive
    // line 863  "qml/hmimain.qml"
    modedrive.source.setBinding(&modedrive_source_binding);
    // Image {
    // line 872  "qml/hmimain.qml"
    appendChild(&this->homescreen, &modeneutral);
    modeneutral_x_anchor_binding.init<hmimain, &hmimain::modeneutral_x_anchor_binding>(modeneutral.x);
    modeneutral.x.setBinding(&modeneutral_x_anchor_binding);
    modeneutral.y.setValue(int(18));
    modeneutral_visible_binding.init<hmimain, &hmimain::modeneutral_visible_binding>(modeneutral.visible);
    // visible:  (iGearMode == 1)?1:0
    // line 877  "qml/hmimain.qml"
    modeneutral.visible.setBinding(&modeneutral_visible_binding);
    modeneutral_height_binding.init<hmimain, &hmimain::modeneutral_height_binding>(modeneutral.height);
    // height: implicitHeight
    // line 876  "qml/hmimain.qml"
    modeneutral.height.setBinding(&modeneutral_height_binding);
    modeneutral_width_binding.init<hmimain, &hmimain::modeneutral_width_binding>(modeneutral.width);
    // width: implicitWidth
    // line 875  "qml/hmimain.qml"
    modeneutral.width.setBinding(&modeneutral_width_binding);
    modeneutral_source_binding.init<hmimain, &hmimain::modeneutral_source_binding>(modeneutral.source);
    // source:icon_neutral
    // line 874  "qml/hmimain.qml"
    modeneutral.source.setBinding(&modeneutral_source_binding);
    // Image {
    // line 884  "qml/hmimain.qml"
    appendChild(&this->homescreen, &modereverse);
    modereverse_x_anchor_binding.init<hmimain, &hmimain::modereverse_x_anchor_binding>(modereverse.x);
    modereverse.x.setBinding(&modereverse_x_anchor_binding);
    modereverse.y.setValue(int(18));
    modereverse_visible_binding.init<hmimain, &hmimain::modereverse_visible_binding>(modereverse.visible);
    // visible:  (iGearMode == 3)?1:0
    // line 889  "qml/hmimain.qml"
    modereverse.visible.setBinding(&modereverse_visible_binding);
    modereverse_height_binding.init<hmimain, &hmimain::modereverse_height_binding>(modereverse.height);
    // height: implicitHeight
    // line 888  "qml/hmimain.qml"
    modereverse.height.setBinding(&modereverse_height_binding);
    modereverse_width_binding.init<hmimain, &hmimain::modereverse_width_binding>(modereverse.width);
    // width: implicitWidth
    // line 887  "qml/hmimain.qml"
    modereverse.width.setBinding(&modereverse_width_binding);
    modereverse_source_binding.init<hmimain, &hmimain::modereverse_source_binding>(modereverse.source);
    // source:icon_reverse
    // line 886  "qml/hmimain.qml"
    modereverse.source.setBinding(&modereverse_source_binding);
    // Row {
    // line 896  "qml/hmimain.qml"
    appendChild(&this->homescreen, &powerid);
    // spacing: 5
    // line 902  "qml/hmimain.qml"
    powerid.spacing.setValue(5);
    powerid.x.setValue(int(230));
    powerid_y_anchor_binding.init<hmimain, &hmimain::powerid_y_anchor_binding>(powerid.y);
    powerid.y.setBinding(&powerid_y_anchor_binding);
    // Text {
    // line 903  "qml/hmimain.qml"
    appendChild(&this->powerid, &powerval);
    // visible: true
    // line 909  "qml/hmimain.qml"
    powerval.visible.setValue(true);
    // font.pixelSize: 35
    // line 907  "qml/hmimain.qml"
    powerval.font.setValue(Qul::Private::FontPointer(qul_font_default_35_700));
    powerval_color_binding.init<hmimain, &hmimain::powerval_color_binding>(powerval.color);
    // color:(bregen)?"green":"red"
    // line 906  "qml/hmimain.qml"
    powerval.color.setBinding(&powerval_color_binding);
    powerval_text_binding.init<hmimain, &hmimain::powerval_text_binding>(powerval.text);
    // text: qsTr("0")
    // line 905  "qml/hmimain.qml"
    powerval.text.setBinding(&powerval_text_binding);
    // Text {
    // line 911  "qml/hmimain.qml"
    appendChild(&this->powerid, &powerunit);
    powerunit_y_anchor_binding.init<hmimain, &hmimain::powerunit_y_anchor_binding>(powerunit.y);
    powerunit.y.setBinding(&powerunit_y_anchor_binding);
    // visible: true
    // line 916  "qml/hmimain.qml"
    powerunit.visible.setValue(true);
    // font.pixelSize: 20
    // line 915  "qml/hmimain.qml"
    powerunit.font.setValue(Qul::Private::FontPointer(qul_font_default_20_400));
    powerunit_color_binding.init<hmimain, &hmimain::powerunit_color_binding>(powerunit.color);
    // color:powerval.color
    // line 914  "qml/hmimain.qml"
    powerunit.color.setBinding(&powerunit_color_binding);
    powerunit_text_binding.init<hmimain, &hmimain::powerunit_text_binding>(powerunit.text);
    // text: qsTr("W")
    // line 913  "qml/hmimain.qml"
    powerunit.text.setBinding(&powerunit_text_binding);
    // Row {
    // line 921  "qml/hmimain.qml"
    appendChild(&this->homescreen, &rpmid);
    // spacing: 5
    // line 927  "qml/hmimain.qml"
    rpmid.spacing.setValue(5);
    rpmid.x.setValue(int(680));
    rpmid_y_anchor_binding.init<hmimain, &hmimain::rpmid_y_anchor_binding>(rpmid.y);
    rpmid.y.setBinding(&rpmid_y_anchor_binding);
    // Text {
    // line 928  "qml/hmimain.qml"
    appendChild(&this->rpmid, &rpmval);
    // visible: true
    // line 934  "qml/hmimain.qml"
    rpmval.visible.setValue(true);
    // font.pixelSize: 35
    // line 932  "qml/hmimain.qml"
    rpmval.font.setValue(Qul::Private::FontPointer(qul_font_default_35_700));
    rpmval_color_binding.init<hmimain, &hmimain::rpmval_color_binding>(rpmval.color);
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 931  "qml/hmimain.qml"
    rpmval.color.setBinding(&rpmval_color_binding);
    rpmval_text_binding.init<hmimain, &hmimain::rpmval_text_binding>(rpmval.text);
    // text: qsTr("0")
    // line 930  "qml/hmimain.qml"
    rpmval.text.setBinding(&rpmval_text_binding);
    // StaticText {
    // line 936  "qml/hmimain.qml"
    appendChild(&this->rpmid, &rpmunit);
    rpmunit_y_anchor_binding.init<hmimain, &hmimain::rpmunit_y_anchor_binding>(rpmunit.y);
    rpmunit.y.setBinding(&rpmunit_y_anchor_binding);
    // visible: true
    // line 941  "qml/hmimain.qml"
    rpmunit.visible.setValue(true);
    rpmunit_color_binding.init<hmimain, &hmimain::rpmunit_color_binding>(rpmunit.color);
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 939  "qml/hmimain.qml"
    rpmunit.color.setBinding(&rpmunit_color_binding);
    // Text {
    // line 948  "qml/hmimain.qml"
    appendChild(&this->homescreen, &tripname);
    tripname_visible_binding.init<hmimain, &hmimain::tripname_visible_binding>(tripname.visible);
    // visible :(iscreen ==2) ?0:1
    // line 957  "qml/hmimain.qml"
    tripname.visible.setBinding(&tripname_visible_binding);
    tripname.x.setValue(int(150));
    tripname_y_anchor_binding.init<hmimain, &hmimain::tripname_y_anchor_binding>(tripname.y);
    tripname.y.setBinding(&tripname_y_anchor_binding);
    // font.pixelSize: 25
    // line 952  "qml/hmimain.qml"
    tripname.font.setValue(Qul::Private::FontPointer(qul_font_default_25_400));
    tripname_color_binding.init<hmimain, &hmimain::tripname_color_binding>(tripname.color);
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 951  "qml/hmimain.qml"
    tripname.color.setBinding(&tripname_color_binding);
    tripname_text_binding.init<hmimain, &hmimain::tripname_text_binding>(tripname.text);
    // text: qsTr("TRIP (km)")
    // line 950  "qml/hmimain.qml"
    tripname.text.setBinding(&tripname_text_binding);
    // Text {
    // line 960  "qml/hmimain.qml"
    appendChild(&this->homescreen, &tripval);
    tripval_visible_binding.init<hmimain, &hmimain::tripval_visible_binding>(tripval.visible);
    // visible :(iscreen ==2) ?0:1
    // line 969  "qml/hmimain.qml"
    tripval.visible.setBinding(&tripval_visible_binding);
    tripval_x_anchor_binding.init<hmimain, &hmimain::tripval_x_anchor_binding>(tripval.x);
    tripval.x.setBinding(&tripval_x_anchor_binding);
    tripval_y_anchor_binding.init<hmimain, &hmimain::tripval_y_anchor_binding>(tripval.y);
    tripval.y.setBinding(&tripval_y_anchor_binding);
    // font.pixelSize: 25
    // line 964  "qml/hmimain.qml"
    tripval.font.setValue(Qul::Private::FontPointer(qul_font_default_25_400));
    tripval_color_binding.init<hmimain, &hmimain::tripval_color_binding>(tripval.color);
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 963  "qml/hmimain.qml"
    tripval.color.setBinding(&tripval_color_binding);
    tripval_text_binding.init<hmimain, &hmimain::tripval_text_binding>(tripval.text);
    // text: qsTr("0")
    // line 962  "qml/hmimain.qml"
    tripval.text.setBinding(&tripval_text_binding);
    // Text {
    // line 972  "qml/hmimain.qml"
    appendChild(&this->homescreen, &odoname);
    odoname_visible_binding.init<hmimain, &hmimain::odoname_visible_binding>(odoname.visible);
    // visible :(iscreen ==2) ?0:1
    // line 981  "qml/hmimain.qml"
    odoname.visible.setBinding(&odoname_visible_binding);
    odoname_x_anchor_binding.init<hmimain, &hmimain::odoname_x_anchor_binding>(odoname.x);
    odoname.x.setBinding(&odoname_x_anchor_binding);
    odoname_y_anchor_binding.init<hmimain, &hmimain::odoname_y_anchor_binding>(odoname.y);
    odoname.y.setBinding(&odoname_y_anchor_binding);
    // font.pixelSize: 25
    // line 976  "qml/hmimain.qml"
    odoname.font.setValue(Qul::Private::FontPointer(qul_font_default_25_400));
    odoname_color_binding.init<hmimain, &hmimain::odoname_color_binding>(odoname.color);
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 975  "qml/hmimain.qml"
    odoname.color.setBinding(&odoname_color_binding);
    odoname_text_binding.init<hmimain, &hmimain::odoname_text_binding>(odoname.text);
    // text: qsTr("ODO (km)")
    // line 974  "qml/hmimain.qml"
    odoname.text.setBinding(&odoname_text_binding);
    // Text {
    // line 984  "qml/hmimain.qml"
    appendChild(&this->homescreen, &odoval);
    odoval_visible_binding.init<hmimain, &hmimain::odoval_visible_binding>(odoval.visible);
    // visible :(iscreen ==2) ?0:1
    // line 993  "qml/hmimain.qml"
    odoval.visible.setBinding(&odoval_visible_binding);
    odoval_x_anchor_binding.init<hmimain, &hmimain::odoval_x_anchor_binding>(odoval.x);
    odoval.x.setBinding(&odoval_x_anchor_binding);
    odoval_y_anchor_binding.init<hmimain, &hmimain::odoval_y_anchor_binding>(odoval.y);
    odoval.y.setBinding(&odoval_y_anchor_binding);
    // font.pixelSize: 25
    // line 988  "qml/hmimain.qml"
    odoval.font.setValue(Qul::Private::FontPointer(qul_font_default_25_400));
    odoval_color_binding.init<hmimain, &hmimain::odoval_color_binding>(odoval.color);
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 987  "qml/hmimain.qml"
    odoval.color.setBinding(&odoval_color_binding);
    odoval_text_binding.init<hmimain, &hmimain::odoval_text_binding>(odoval.text);
    // text: qsTr("0")
    // line 986  "qml/hmimain.qml"
    odoval.text.setBinding(&odoval_text_binding);
    // Image {
    // line 998  "qml/hmimain.qml"
    appendChild(&this->homescreen, &bgmode);
    bgmode_visible_binding.init<hmimain, &hmimain::bgmode_visible_binding>(bgmode.visible);
    // visible: (iscreen == 2)?0:1
    // line 1007  "qml/hmimain.qml"
    bgmode.visible.setBinding(&bgmode_visible_binding);
    bgmode_x_anchor_binding.init<hmimain, &hmimain::bgmode_x_anchor_binding>(bgmode.x);
    bgmode.x.setBinding(&bgmode_x_anchor_binding);
    bgmode_y_anchor_binding.init<hmimain, &hmimain::bgmode_y_anchor_binding>(bgmode.y);
    bgmode.y.setBinding(&bgmode_y_anchor_binding);
    bgmode_height_binding.init<hmimain, &hmimain::bgmode_height_binding>(bgmode.height);
    // height: implicitHeight
    // line 1002  "qml/hmimain.qml"
    bgmode.height.setBinding(&bgmode_height_binding);
    bgmode_width_binding.init<hmimain, &hmimain::bgmode_width_binding>(bgmode.width);
    // width: implicitWidth
    // line 1001  "qml/hmimain.qml"
    bgmode.width.setBinding(&bgmode_width_binding);
    bgmode_source_binding.init<hmimain, &hmimain::bgmode_source_binding>(bgmode.source);
    // source:(isdarktheme)?bg_dark_mode:bg_light_mode
    // line 1000  "qml/hmimain.qml"
    bgmode.source.setBinding(&bgmode_source_binding);
    // Text {
    // line 1010  "qml/hmimain.qml"
    appendChild(&this->homescreen, &batcharging);
    batcharging_visible_binding.init<hmimain, &hmimain::batcharging_visible_binding>(batcharging.visible);
    // visible: (iscreen ==1) ?1:0
    // line 1020  "qml/hmimain.qml"
    batcharging.visible.setBinding(&batcharging_visible_binding);
    // font.pixelSize: 40
    // line 1018  "qml/hmimain.qml"
    batcharging.font.setValue(Qul::Private::FontPointer(qul_font_default_40_700));
    batcharging_color_binding.init<hmimain, &hmimain::batcharging_color_binding>(batcharging.color);
    // color:(isdarktheme)?scolor_dark:scolor_light
    // line 1017  "qml/hmimain.qml"
    batcharging.color.setBinding(&batcharging_color_binding);
    batcharging_x_anchor_binding.init<hmimain, &hmimain::batcharging_x_anchor_binding>(batcharging.x);
    batcharging.x.setBinding(&batcharging_x_anchor_binding);
    batcharging_y_anchor_binding.init<hmimain, &hmimain::batcharging_y_anchor_binding>(batcharging.y);
    batcharging.y.setBinding(&batcharging_y_anchor_binding);
    batcharging_text_binding.init<hmimain, &hmimain::batcharging_text_binding>(batcharging.text);
    // text: qsTr("Charging : AC")
    // line 1012  "qml/hmimain.qml"
    batcharging.text.setBinding(&batcharging_text_binding);
    // Text {
    // line 1023  "qml/hmimain.qml"
    appendChild(&this->homescreen, &drivemode);
    drivemode_visible_binding.init<hmimain, &hmimain::drivemode_visible_binding>(drivemode.visible);
    // visible: (iscreen==0)?1:0
    // line 1033  "qml/hmimain.qml"
    drivemode.visible.setBinding(&drivemode_visible_binding);
    // font.pixelSize: 40
    // line 1031  "qml/hmimain.qml"
    drivemode.font.setValue(Qul::Private::FontPointer(qul_font_default_40_700));
    drivemode_x_anchor_binding.init<hmimain, &hmimain::drivemode_x_anchor_binding>(drivemode.x);
    drivemode.x.setBinding(&drivemode_x_anchor_binding);
    drivemode_y_anchor_binding.init<hmimain, &hmimain::drivemode_y_anchor_binding>(drivemode.y);
    drivemode.y.setBinding(&drivemode_y_anchor_binding);
    drivemode_color_binding.init<hmimain, &hmimain::drivemode_color_binding>(drivemode.color);
    // color:(isdarktheme)?scolor_dark:scolor_light
    // line 1026  "qml/hmimain.qml"
    drivemode.color.setBinding(&drivemode_color_binding);
    drivemode_text_binding.init<hmimain, &hmimain::drivemode_text_binding>(drivemode.text);
    // text: qsTr("ECO")
    // line 1025  "qml/hmimain.qml"
    drivemode.text.setBinding(&drivemode_text_binding);
    // Row {
    // line 1036  "qml/hmimain.qml"
    appendChild(&this->homescreen, &battempid);
    battempid.x.setValue(int(935));
    battempid.y.setValue(int(25));
    // Text {
    // line 1042  "qml/hmimain.qml"
    appendChild(&this->battempid, &battempidval);
    // font.pixelSize: 30
    // line 1046  "qml/hmimain.qml"
    battempidval.font.setValue(Qul::Private::FontPointer(qul_font_default_30_700));
    battempidval_color_binding.init<hmimain, &hmimain::battempidval_color_binding>(battempidval.color);
    // color: (battempval >40 )?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1045  "qml/hmimain.qml"
    battempidval.color.setBinding(&battempidval_color_binding);
    battempidval_text_binding.init<hmimain, &hmimain::battempidval_text_binding>(battempidval.text);
    // text: battempval.toString()
    // line 1044  "qml/hmimain.qml"
    battempidval.text.setBinding(&battempidval_text_binding);
    // Text {
    // line 1049  "qml/hmimain.qml"
    appendChild(&this->battempid, &tempunit);
    tempunit_y_anchor_binding.init<hmimain, &hmimain::tempunit_y_anchor_binding>(tempunit.y);
    tempunit.y.setBinding(&tempunit_y_anchor_binding);
    // font.pixelSize: 30
    // line 1053  "qml/hmimain.qml"
    tempunit.font.setValue(Qul::Private::FontPointer(qul_font_default_30_700));
    tempunit_color_binding.init<hmimain, &hmimain::tempunit_color_binding>(tempunit.color);
    // color: battempidval.color
    // line 1052  "qml/hmimain.qml"
    tempunit.color.setBinding(&tempunit_color_binding);
    tempunit_text_binding.init<hmimain, &hmimain::tempunit_text_binding>(tempunit.text);
    // text: qsTr("°C")
    // line 1051  "qml/hmimain.qml"
    tempunit.text.setBinding(&tempunit_text_binding);
    // Rectangle {
    // line 1060  "qml/hmimain.qml"
    appendChild(&this->homescreen, &daterect);
    // visible:true
    // line 1069  "qml/hmimain.qml"
    daterect.visible.setValue(true);
    daterect.x.setValue(int(30));
    daterect.y.setValue(int(30));
    // color: "transparent"
    // line 1064  "qml/hmimain.qml"
    daterect.color.setValue(0x0);
    // height: 30
    // line 1063  "qml/hmimain.qml"
    daterect.height.setValue(30);
    // width:166
    // line 1062  "qml/hmimain.qml"
    daterect.width.setValue(166);
    // Row{
    // line 1070  "qml/hmimain.qml"
    appendChild(&this->daterect, &row);
    // spacing: 2
    // line 1075  "qml/hmimain.qml"
    row.spacing.setValue(2);
    row_x_anchor_binding.init<hmimain, &hmimain::row_x_anchor_binding>(row.x);
    row.x.setBinding(&row_x_anchor_binding);
    row_y_anchor_binding.init<hmimain, &hmimain::row_y_anchor_binding>(row.y);
    row.y.setBinding(&row_y_anchor_binding);
    // Text {
    // line 1076  "qml/hmimain.qml"
    appendChild(&this->row, &tday);
    // font.pixelSize: 25
    // line 1080  "qml/hmimain.qml"
    tday.font.setValue(Qul::Private::FontPointer(qul_font_default_25_700));
    tday_color_binding.init<hmimain, &hmimain::tday_color_binding>(tday.color);
    // color:(istate ==0)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1079  "qml/hmimain.qml"
    tday.color.setBinding(&tday_color_binding);
    tday_text_binding.init<hmimain, &hmimain::tday_text_binding>(tday.text);
    // text: qsTr("00")
    // line 1078  "qml/hmimain.qml"
    tday.text.setBinding(&tday_text_binding);
    // StaticText {
    // line 1083  "qml/hmimain.qml"
    appendChild(&this->row, &statictext);
    statictext_color_binding.init<hmimain, &hmimain::statictext_color_binding>(statictext.color);
    // color:((isdarktheme)?scolor_light:scolor_dark)
    // line 1085  "qml/hmimain.qml"
    statictext.color.setBinding(&statictext_color_binding);
    // Text {
    // line 1089  "qml/hmimain.qml"
    appendChild(&this->row, &tmon);
    // font.pixelSize: 25
    // line 1093  "qml/hmimain.qml"
    tmon.font.setValue(Qul::Private::FontPointer(qul_font_default_25_700));
    tmon_color_binding.init<hmimain, &hmimain::tmon_color_binding>(tmon.color);
    // color:(istate ==1)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1092  "qml/hmimain.qml"
    tmon.color.setBinding(&tmon_color_binding);
    tmon_text_binding.init<hmimain, &hmimain::tmon_text_binding>(tmon.text);
    // text: qsTr("00")
    // line 1091  "qml/hmimain.qml"
    tmon.text.setBinding(&tmon_text_binding);
    // StaticText {
    // line 1096  "qml/hmimain.qml"
    appendChild(&this->row, &statictext_2);
    statictext_2_color_binding.init<hmimain, &hmimain::statictext_2_color_binding>(statictext_2.color);
    // color:((isdarktheme)?scolor_light:scolor_dark)
    // line 1098  "qml/hmimain.qml"
    statictext_2.color.setBinding(&statictext_2_color_binding);
    // Text {
    // line 1102  "qml/hmimain.qml"
    appendChild(&this->row, &tyear);
    // font.pixelSize: 25
    // line 1106  "qml/hmimain.qml"
    tyear.font.setValue(Qul::Private::FontPointer(qul_font_default_25_700));
    tyear_color_binding.init<hmimain, &hmimain::tyear_color_binding>(tyear.color);
    // color:(istate ==2)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1105  "qml/hmimain.qml"
    tyear.color.setBinding(&tyear_color_binding);
    tyear_text_binding.init<hmimain, &hmimain::tyear_text_binding>(tyear.text);
    // text: qsTr("2024")
    // line 1104  "qml/hmimain.qml"
    tyear.text.setBinding(&tyear_text_binding);
    // Rectangle {
    // line 1111  "qml/hmimain.qml"
    appendChild(&this->homescreen, &timerect);
    // visible :true
    // line 1120  "qml/hmimain.qml"
    timerect.visible.setValue(true);
    timerect_x_anchor_binding.init<hmimain, &hmimain::timerect_x_anchor_binding>(timerect.x);
    timerect.x.setBinding(&timerect_x_anchor_binding);
    timerect.y.setValue(int(30));
    // color: "transparent"
    // line 1115  "qml/hmimain.qml"
    timerect.color.setValue(0x0);
    // height: 30
    // line 1114  "qml/hmimain.qml"
    timerect.height.setValue(30);
    // width:150
    // line 1113  "qml/hmimain.qml"
    timerect.width.setValue(150);
    // Row{
    // line 1121  "qml/hmimain.qml"
    appendChild(&this->timerect, &row_2);
    // spacing: 5
    // line 1126  "qml/hmimain.qml"
    row_2.spacing.setValue(5);
    row_2_x_anchor_binding.init<hmimain, &hmimain::row_2_x_anchor_binding>(row_2.x);
    row_2.x.setBinding(&row_2_x_anchor_binding);
    row_2_y_anchor_binding.init<hmimain, &hmimain::row_2_y_anchor_binding>(row_2.y);
    row_2.y.setBinding(&row_2_y_anchor_binding);
    // Text {
    // line 1127  "qml/hmimain.qml"
    appendChild(&this->row_2, &thour);
    // font.pixelSize: 25
    // line 1131  "qml/hmimain.qml"
    thour.font.setValue(Qul::Private::FontPointer(qul_font_default_25_700));
    thour_color_binding.init<hmimain, &hmimain::thour_color_binding>(thour.color);
    // color:(istate ==3)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1130  "qml/hmimain.qml"
    thour.color.setBinding(&thour_color_binding);
    thour_text_binding.init<hmimain, &hmimain::thour_text_binding>(thour.text);
    // text: qsTr("00")
    // line 1129  "qml/hmimain.qml"
    thour.text.setBinding(&thour_text_binding);
    // StaticText {
    // line 1134  "qml/hmimain.qml"
    appendChild(&this->row_2, &statictext_3);
    statictext_3_color_binding.init<hmimain, &hmimain::statictext_3_color_binding>(statictext_3.color);
    // color:((isdarktheme)?scolor_light:scolor_dark)
    // line 1136  "qml/hmimain.qml"
    statictext_3.color.setBinding(&statictext_3_color_binding);
    // Text {
    // line 1140  "qml/hmimain.qml"
    appendChild(&this->row_2, &tmin);
    // font.pixelSize: 25
    // line 1144  "qml/hmimain.qml"
    tmin.font.setValue(Qul::Private::FontPointer(qul_font_default_25_700));
    tmin_color_binding.init<hmimain, &hmimain::tmin_color_binding>(tmin.color);
    // color:(istate ==4)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1143  "qml/hmimain.qml"
    tmin.color.setBinding(&tmin_color_binding);
    tmin_text_binding.init<hmimain, &hmimain::tmin_text_binding>(tmin.text);
    // text: qsTr("00")
    // line 1142  "qml/hmimain.qml"
    tmin.text.setBinding(&tmin_text_binding);
    // Text {
    // line 1147  "qml/hmimain.qml"
    appendChild(&this->row_2, &tampm);
    // font.pixelSize: 25
    // line 1151  "qml/hmimain.qml"
    tampm.font.setValue(Qul::Private::FontPointer(qul_font_default_25_700));
    tampm_color_binding.init<hmimain, &hmimain::tampm_color_binding>(tampm.color);
    // color:(istate ==5)?(scolor_red):((isdarktheme)?scolor_light:scolor_dark)
    // line 1150  "qml/hmimain.qml"
    tampm.color.setBinding(&tampm_color_binding);
    tampm_text_binding.init<hmimain, &hmimain::tampm_text_binding>(tampm.text);
    // text: qsTr("AM")
    // line 1149  "qml/hmimain.qml"
    tampm.text.setBinding(&tampm_text_binding);
    // Text {
    // line 1157  "qml/hmimain.qml"
    appendChild(&this->homescreen, &alertmsg);
    alertmsg_visible_binding.init<hmimain, &hmimain::alertmsg_visible_binding>(alertmsg.visible);
    // visible:(iscreen==2)?0:bwarning
    // line 1167  "qml/hmimain.qml"
    alertmsg.visible.setBinding(&alertmsg_visible_binding);
    // font.pixelSize: 30
    // line 1165  "qml/hmimain.qml"
    alertmsg.font.setValue(Qul::Private::FontPointer(qul_font_default_30_400));
    alertmsg_x_anchor_binding.init<hmimain, &hmimain::alertmsg_x_anchor_binding>(alertmsg.x);
    alertmsg.x.setBinding(&alertmsg_x_anchor_binding);
    alertmsg_y_anchor_binding.init<hmimain, &hmimain::alertmsg_y_anchor_binding>(alertmsg.y);
    alertmsg.y.setBinding(&alertmsg_y_anchor_binding);
    // color:"red"
    // line 1160  "qml/hmimain.qml"
    alertmsg.color.setValue(0xffff0000);
    alertmsg_text_binding.init<hmimain, &hmimain::alertmsg_text_binding>(alertmsg.text);
    // text: smessage
    // line 1159  "qml/hmimain.qml"
    alertmsg.text.setBinding(&alertmsg_text_binding);
    // Text {
    // line 1170  "qml/hmimain.qml"
    appendChild(&this->homescreen, &dtcmsg);
    dtcmsg_visible_binding.init<hmimain, &hmimain::dtcmsg_visible_binding>(dtcmsg.visible);
    // visible:(iscreen==2)?1:0
    // line 1180  "qml/hmimain.qml"
    dtcmsg.visible.setBinding(&dtcmsg_visible_binding);
    // font.pixelSize: 25
    // line 1178  "qml/hmimain.qml"
    dtcmsg.font.setValue(Qul::Private::FontPointer(qul_font_default_25_700));
    dtcmsg_x_anchor_binding.init<hmimain, &hmimain::dtcmsg_x_anchor_binding>(dtcmsg.x);
    dtcmsg.x.setBinding(&dtcmsg_x_anchor_binding);
    dtcmsg.y.setValue(int(350));
    dtcmsg_color_binding.init<hmimain, &hmimain::dtcmsg_color_binding>(dtcmsg.color);
    // color:(iFaultCount >0)?"red":((isdarktheme)?scolor_light:scolor_dark)
    // line 1173  "qml/hmimain.qml"
    dtcmsg.color.setBinding(&dtcmsg_color_binding);
    dtcmsg_text_binding.init<hmimain, &hmimain::dtcmsg_text_binding>(dtcmsg.text);
    // text: qsTr("No faults")
    // line 1172  "qml/hmimain.qml"
    dtcmsg.text.setBinding(&dtcmsg_text_binding);
    // Text {
    // line 1183  "qml/hmimain.qml"
    appendChild(&this->homescreen, &faultmsg);
    faultmsg_visible_binding.init<hmimain, &hmimain::faultmsg_visible_binding>(faultmsg.visible);
    // visible:(iscreen==2)?1:0
    // line 1193  "qml/hmimain.qml"
    faultmsg.visible.setBinding(&faultmsg_visible_binding);
    // font.pixelSize: 25
    // line 1191  "qml/hmimain.qml"
    faultmsg.font.setValue(Qul::Private::FontPointer(qul_font_default_25_400));
    faultmsg_x_anchor_binding.init<hmimain, &hmimain::faultmsg_x_anchor_binding>(faultmsg.x);
    faultmsg.x.setBinding(&faultmsg_x_anchor_binding);
    faultmsg.y.setValue(int(500));
    // color:"red"
    // line 1186  "qml/hmimain.qml"
    faultmsg.color.setValue(0xffff0000);
    faultmsg_text_binding.init<hmimain, &hmimain::faultmsg_text_binding>(faultmsg.text);
    // text: sfaultmsg
    // line 1185  "qml/hmimain.qml"
    faultmsg.text.setBinding(&faultmsg_text_binding);
    // Image {
    // line 1196  "qml/hmimain.qml"
    appendChild(&this->homescreen, &selmain);
    selmain_visible_binding.init<hmimain, &hmimain::selmain_visible_binding>(selmain.visible);
    // visible:(iscreen==0)?1:0
    // line 1205  "qml/hmimain.qml"
    selmain.visible.setBinding(&selmain_visible_binding);
    selmain_x_anchor_binding.init<hmimain, &hmimain::selmain_x_anchor_binding>(selmain.x);
    selmain.x.setBinding(&selmain_x_anchor_binding);
    selmain_y_anchor_binding.init<hmimain, &hmimain::selmain_y_anchor_binding>(selmain.y);
    selmain.y.setBinding(&selmain_y_anchor_binding);
    selmain_height_binding.init<hmimain, &hmimain::selmain_height_binding>(selmain.height);
    // height: implicitHeight
    // line 1200  "qml/hmimain.qml"
    selmain.height.setBinding(&selmain_height_binding);
    selmain_width_binding.init<hmimain, &hmimain::selmain_width_binding>(selmain.width);
    // width: implicitWidth
    // line 1199  "qml/hmimain.qml"
    selmain.width.setBinding(&selmain_width_binding);
    selmain_source_binding.init<hmimain, &hmimain::selmain_source_binding>(selmain.source);
    // source:(isdarktheme)?icon_dark_sel0:icon_light_sel0
    // line 1198  "qml/hmimain.qml"
    selmain.source.setBinding(&selmain_source_binding);
    // Image {
    // line 1208  "qml/hmimain.qml"
    appendChild(&this->homescreen, &selcharge);
    selcharge_visible_binding.init<hmimain, &hmimain::selcharge_visible_binding>(selcharge.visible);
    // visible:(iscreen==1)?1:0
    // line 1217  "qml/hmimain.qml"
    selcharge.visible.setBinding(&selcharge_visible_binding);
    selcharge_x_anchor_binding.init<hmimain, &hmimain::selcharge_x_anchor_binding>(selcharge.x);
    selcharge.x.setBinding(&selcharge_x_anchor_binding);
    selcharge_y_anchor_binding.init<hmimain, &hmimain::selcharge_y_anchor_binding>(selcharge.y);
    selcharge.y.setBinding(&selcharge_y_anchor_binding);
    selcharge_height_binding.init<hmimain, &hmimain::selcharge_height_binding>(selcharge.height);
    // height: implicitHeight
    // line 1212  "qml/hmimain.qml"
    selcharge.height.setBinding(&selcharge_height_binding);
    selcharge_width_binding.init<hmimain, &hmimain::selcharge_width_binding>(selcharge.width);
    // width: implicitWidth
    // line 1211  "qml/hmimain.qml"
    selcharge.width.setBinding(&selcharge_width_binding);
    selcharge_source_binding.init<hmimain, &hmimain::selcharge_source_binding>(selcharge.source);
    // source:(isdarktheme)?icon_dark_sel1:icon_light_sel1
    // line 1210  "qml/hmimain.qml"
    selcharge.source.setBinding(&selcharge_source_binding);
    // Image {
    // line 1219  "qml/hmimain.qml"
    appendChild(&this->homescreen, &selfault);
    selfault_visible_binding.init<hmimain, &hmimain::selfault_visible_binding>(selfault.visible);
    // visible:(iscreen==2)?1:0
    // line 1228  "qml/hmimain.qml"
    selfault.visible.setBinding(&selfault_visible_binding);
    selfault_x_anchor_binding.init<hmimain, &hmimain::selfault_x_anchor_binding>(selfault.x);
    selfault.x.setBinding(&selfault_x_anchor_binding);
    selfault_y_anchor_binding.init<hmimain, &hmimain::selfault_y_anchor_binding>(selfault.y);
    selfault.y.setBinding(&selfault_y_anchor_binding);
    selfault_height_binding.init<hmimain, &hmimain::selfault_height_binding>(selfault.height);
    // height: implicitHeight
    // line 1223  "qml/hmimain.qml"
    selfault.height.setBinding(&selfault_height_binding);
    selfault_width_binding.init<hmimain, &hmimain::selfault_width_binding>(selfault.width);
    // width: implicitWidth
    // line 1222  "qml/hmimain.qml"
    selfault.width.setBinding(&selfault_width_binding);
    selfault_source_binding.init<hmimain, &hmimain::selfault_source_binding>(selfault.source);
    // source:(isdarktheme)?icon_dark_sel2:icon_light_sel2
    // line 1221  "qml/hmimain.qml"
    selfault.source.setBinding(&selfault_source_binding);
    // Rectangle {
    // line 1230  "qml/hmimain.qml"
    appendChild(&this->homescreen, &deviceinfo);
    deviceinfo_x_anchor_binding.init<hmimain, &hmimain::deviceinfo_x_anchor_binding>(deviceinfo.x);
    deviceinfo.x.setBinding(&deviceinfo_x_anchor_binding);
    deviceinfo_y_anchor_binding.init<hmimain, &hmimain::deviceinfo_y_anchor_binding>(deviceinfo.y);
    deviceinfo.y.setBinding(&deviceinfo_y_anchor_binding);
    deviceinfo_visible_binding.init<hmimain, &hmimain::deviceinfo_visible_binding>(deviceinfo.visible);
    // visible :bdeviceinfo
    // line 1235  "qml/hmimain.qml"
    deviceinfo.visible.setBinding(&deviceinfo_visible_binding);
    deviceinfo_color_binding.init<hmimain, &hmimain::deviceinfo_color_binding>(deviceinfo.color);
    // color:(isdarktheme)?scolor_light:scolor_dark
    // line 1234  "qml/hmimain.qml"
    deviceinfo.color.setBinding(&deviceinfo_color_binding);
    // height: 400
    // line 1233  "qml/hmimain.qml"
    deviceinfo.height.setValue(400);
    // width: 600
    // line 1232  "qml/hmimain.qml"
    deviceinfo.width.setValue(600);
    // StaticText {
    // line 1238  "qml/hmimain.qml"
    appendChild(&this->deviceinfo, &devicdetails);
    devicdetails_color_binding.init<hmimain, &hmimain::devicdetails_color_binding>(devicdetails.color);
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1244  "qml/hmimain.qml"
    devicdetails.color.setBinding(&devicdetails_color_binding);
    devicdetails_x_anchor_binding.init<hmimain, &hmimain::devicdetails_x_anchor_binding>(devicdetails.x);
    devicdetails.x.setBinding(&devicdetails_x_anchor_binding);
    devicdetails.y.setValue(int(50));
    // Rectangle {
    // line 1248  "qml/hmimain.qml"
    appendChild(&this->deviceinfo, &rectangle_2);
    // color: "transparent"
    // line 1253  "qml/hmimain.qml"
    rectangle_2.color.setValue(0x0);
    rectangle_2.x.setValue(int(50));
    rectangle_2.y.setValue(int(100));
    // Column{
    // line 1254  "qml/hmimain.qml"
    appendChild(&this->rectangle_2, &column);
    // spacing: 10
    // line 1255  "qml/hmimain.qml"
    column.spacing.setValue(10);
    // Rectangle {
    // line 1256  "qml/hmimain.qml"
    appendChild(&this->column, &rectangle_3);
    // color: "transparent"
    // line 1259  "qml/hmimain.qml"
    rectangle_3.color.setValue(0x0);
    // height: 50
    // line 1258  "qml/hmimain.qml"
    rectangle_3.height.setValue(50);
    // width: 450
    // line 1257  "qml/hmimain.qml"
    rectangle_3.width.setValue(450);
    // Row {
    // line 1260  "qml/hmimain.qml"
    appendChild(&this->rectangle_3, &iswver);
    // spacing: 5
    // line 1262  "qml/hmimain.qml"
    iswver.spacing.setValue(5);
    // StaticText {
    // line 1263  "qml/hmimain.qml"
    appendChild(&this->iswver, &swver);
    swver_color_binding.init<hmimain, &hmimain::swver_color_binding>(swver.color);
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1267  "qml/hmimain.qml"
    swver.color.setBinding(&swver_color_binding);
    // width:280
    // line 1266  "qml/hmimain.qml"
    swver.width.setValue(280);
    // Text {
    // line 1271  "qml/hmimain.qml"
    appendChild(&this->iswver, &seversion);
    // font.pixelSize: 20
    // line 1276  "qml/hmimain.qml"
    seversion.font.setValue(Qul::Private::FontPointer(qul_font_default_20_700));
    seversion_color_binding.init<hmimain, &hmimain::seversion_color_binding>(seversion.color);
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1275  "qml/hmimain.qml"
    seversion.color.setBinding(&seversion_color_binding);
    // width:150
    // line 1274  "qml/hmimain.qml"
    seversion.width.setValue(150);
    seversion_text_binding.init<hmimain, &hmimain::seversion_text_binding>(seversion.text);
    // text:sswvermsg
    // line 1273  "qml/hmimain.qml"
    seversion.text.setBinding(&seversion_text_binding);
    // Rectangle {
    // line 1281  "qml/hmimain.qml"
    appendChild(&this->column, &rectangle_4);
    // color: "transparent"
    // line 1284  "qml/hmimain.qml"
    rectangle_4.color.setValue(0x0);
    // height: 50
    // line 1283  "qml/hmimain.qml"
    rectangle_4.height.setValue(50);
    // width: 450
    // line 1282  "qml/hmimain.qml"
    rectangle_4.width.setValue(450);
    // Row {
    // line 1285  "qml/hmimain.qml"
    appendChild(&this->rectangle_4, &ihwver);
    // spacing: 5
    // line 1287  "qml/hmimain.qml"
    ihwver.spacing.setValue(5);
    // StaticText {
    // line 1288  "qml/hmimain.qml"
    appendChild(&this->ihwver, &hwver);
    hwver_color_binding.init<hmimain, &hmimain::hwver_color_binding>(hwver.color);
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1292  "qml/hmimain.qml"
    hwver.color.setBinding(&hwver_color_binding);
    // width:280
    // line 1291  "qml/hmimain.qml"
    hwver.width.setValue(280);
    // Text {
    // line 1297  "qml/hmimain.qml"
    appendChild(&this->ihwver, &hwversion);
    // font.pixelSize: 20
    // line 1302  "qml/hmimain.qml"
    hwversion.font.setValue(Qul::Private::FontPointer(qul_font_default_20_700));
    hwversion_color_binding.init<hmimain, &hmimain::hwversion_color_binding>(hwversion.color);
    // color:(isdarktheme)?scolor_dark:scolor_light
    // line 1301  "qml/hmimain.qml"
    hwversion.color.setBinding(&hwversion_color_binding);
    // width:150
    // line 1300  "qml/hmimain.qml"
    hwversion.width.setValue(150);
    hwversion_text_binding.init<hmimain, &hmimain::hwversion_text_binding>(hwversion.text);
    // text:shwvermsg
    // line 1299  "qml/hmimain.qml"
    hwversion.text.setBinding(&hwversion_text_binding);
    // Rectangle {
    // line 1307  "qml/hmimain.qml"
    appendChild(&this->column, &rectangle_5);
    // color: "transparent"
    // line 1310  "qml/hmimain.qml"
    rectangle_5.color.setValue(0x0);
    // height: 50
    // line 1309  "qml/hmimain.qml"
    rectangle_5.height.setValue(50);
    // width: 450
    // line 1308  "qml/hmimain.qml"
    rectangle_5.width.setValue(450);
    // Row {
    // line 1311  "qml/hmimain.qml"
    appendChild(&this->rectangle_5, &iserialnum);
    // spacing: 5
    // line 1313  "qml/hmimain.qml"
    iserialnum.spacing.setValue(5);
    // StaticText {
    // line 1314  "qml/hmimain.qml"
    appendChild(&this->iserialnum, &slnum);
    slnum_color_binding.init<hmimain, &hmimain::slnum_color_binding>(slnum.color);
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1318  "qml/hmimain.qml"
    slnum.color.setBinding(&slnum_color_binding);
    // width:280
    // line 1317  "qml/hmimain.qml"
    slnum.width.setValue(280);
    // Text {
    // line 1323  "qml/hmimain.qml"
    appendChild(&this->iserialnum, &slnumtxt);
    // font.pixelSize: 20
    // line 1328  "qml/hmimain.qml"
    slnumtxt.font.setValue(Qul::Private::FontPointer(qul_font_default_20_700));
    slnumtxt_color_binding.init<hmimain, &hmimain::slnumtxt_color_binding>(slnumtxt.color);
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1327  "qml/hmimain.qml"
    slnumtxt.color.setBinding(&slnumtxt_color_binding);
    // width:150
    // line 1326  "qml/hmimain.qml"
    slnumtxt.width.setValue(150);
    slnumtxt_text_binding.init<hmimain, &hmimain::slnumtxt_text_binding>(slnumtxt.text);
    // text:sslnummsg
    // line 1325  "qml/hmimain.qml"
    slnumtxt.text.setBinding(&slnumtxt_text_binding);
    // Rectangle {
    // line 1333  "qml/hmimain.qml"
    appendChild(&this->column, &rectangle_6);
    // color: "transparent"
    // line 1336  "qml/hmimain.qml"
    rectangle_6.color.setValue(0x0);
    // height: 50
    // line 1335  "qml/hmimain.qml"
    rectangle_6.height.setValue(50);
    // width: 450
    // line 1334  "qml/hmimain.qml"
    rectangle_6.width.setValue(450);
    // Row {
    // line 1337  "qml/hmimain.qml"
    appendChild(&this->rectangle_6, &ivinnum);
    // spacing: 5
    // line 1339  "qml/hmimain.qml"
    ivinnum.spacing.setValue(5);
    // StaticText {
    // line 1340  "qml/hmimain.qml"
    appendChild(&this->ivinnum, &vinnum);
    vinnum_color_binding.init<hmimain, &hmimain::vinnum_color_binding>(vinnum.color);
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1344  "qml/hmimain.qml"
    vinnum.color.setBinding(&vinnum_color_binding);
    // width:290
    // line 1343  "qml/hmimain.qml"
    vinnum.width.setValue(290);
    // Text {
    // line 1349  "qml/hmimain.qml"
    appendChild(&this->ivinnum, &vinnumtxt);
    // font.pixelSize: 20
    // line 1354  "qml/hmimain.qml"
    vinnumtxt.font.setValue(Qul::Private::FontPointer(qul_font_default_20_700));
    vinnumtxt_color_binding.init<hmimain, &hmimain::vinnumtxt_color_binding>(vinnumtxt.color);
    // color: (isdarktheme)?scolor_dark:scolor_light
    // line 1353  "qml/hmimain.qml"
    vinnumtxt.color.setBinding(&vinnumtxt_color_binding);
    // width:150
    // line 1352  "qml/hmimain.qml"
    vinnumtxt.width.setValue(150);
    vinnumtxt_text_binding.init<hmimain, &hmimain::vinnumtxt_text_binding>(vinnumtxt.text);
    // text:svinnummsg
    // line 1351  "qml/hmimain.qml"
    vinnumtxt.text.setBinding(&vinnumtxt_text_binding);
    speedunit.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_0);
    ttcname.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_1);
    socunit.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_2);
    socname.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_3);
    rangeunit.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_4);
    rangename.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_5);
    rpmunit.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_6);
    statictext.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_7);
    statictext_2.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_7);
    statictext_3.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_8);
    devicdetails.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_9);
    swver.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_10);
    hwver.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_11);
    slnum.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_12);
    vinnum.
    setStaticTextItem(qul_fd87a2cbfb7327bc447f4f702061da902e12a60c_hmimain_staticText_13);
    // NumberAnimation on speed{ id:speed_anim;}
    // line 229  "qml/hmimain.qml"
    speed_anim.on(&speed);
}

